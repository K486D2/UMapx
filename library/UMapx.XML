<?xml version="1.0"?>
<doc>
    <assembly>
        <name>UMapx</name>
    </assembly>
    <members>
        <member name="T:UMapx.Decomposition.Hessenberg">
            <summary>
            Определяет разложение с приведением к форме Хессенберга.
            <remarks>
            Это представление квадратной матрицы в виде произведения трех матриц: A = P * H * P', где H - форма Хессенберга, а P - унитарная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hessenberg_matrix
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Hessenberg.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует разложение с приведением к форме Хессенберга.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.Hessenberg.orthes(System.Double[0:,0:])">
            <summary>
            Несимметричное сокращение до формы Хессенберга.
            </summary>
            <param name="A">Матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.Hessenberg.P">
            <summary>
            Получает унитарную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Hessenberg.H">
            <summary>
            Получает форму Хессенберга.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.GEVD">
            <summary>
            Определяет обобщенное спектральное разложение квадратных матриц A и B.
            <remarks>
            Это задача нахождение такого вектора значений V, что справедливо представление: A * V = B * V * D. 
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Eigendecomposition_of_a_matrix#Generalized_eigenvalue_problem
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.#ctor(System.Double[0:,0:],System.Double[0:,0:],System.Double)">
            <summary>
            Инициализирует обобщенное спектральное разложение квадратных матриц A и B.
            </summary>
            <param name="a">Матрица A</param>
            <param name="b">Матрица B</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.qzhes(System.Int32,System.Double[0:,0:],System.Double[0:,0:],System.Boolean,System.Double[0:,0:])">
             <summary>
               Adaptation of the original Fortran QZHES routine from EISPACK.
             </summary>
             <remarks>
               This subroutine is the first step of the qz algorithm
               for solving generalized matrix eigenvalue problems,
               Siam J. Numer. anal. 10, 241-256(1973) by Moler and Stewart.
            
               This subroutine accepts a pair of real general matrices and
               reduces one of them to upper Hessenberg form and the other
               to upper triangular form using orthogonal transformations.
               it is usually followed by  qzit,  qzval  and, possibly,  qzvec.
               
               For the full documentation, please check the original function.
             </remarks>
             <param name="n"></param>
             <param name="a"></param>
             <param name="b"></param>
             <param name="matz"></param>
             <param name="z"></param>
             <returns></returns>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.qzit(System.Int32,System.Double[0:,0:],System.Double[0:,0:],System.Double,System.Boolean,System.Double[0:,0:],System.Int32@)">
            <summary>
              Adaptation of the original Fortran QZIT routine from EISPACK.
            </summary>
            <remarks>
              This subroutine is the second step of the qz algorithm
              for solving generalized matrix eigenvalue problems,
              Siam J. Numer. anal. 10, 241-256(1973) by Moler and Stewart,
              as modified in technical note nasa tn d-7305(1973) by ward.
              
              This subroutine accepts a pair of real matrices, one of them
              in upper Hessenberg form and the other in upper triangular form.
              it reduces the Hessenberg matrix to quasi-triangular form using
              orthogonal transformations while maintaining the triangular form
              of the other matrix.  it is usually preceded by  qzhes  and
              followed by  qzval  and, possibly,  qzvec.
              
              For the full documentation, please check the original function.
            </remarks>
            <param name="n"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="eps1"></param>
            <param name="matz"></param>
            <param name="z"></param>
            <param name="ierr"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.qzval(System.Int32,System.Double[0:,0:],System.Double[0:,0:],System.Double[],System.Double[],System.Double[],System.Boolean,System.Double[0:,0:])">
            <summary>
              Adaptation of the original Fortran QZVAL routine from EISPACK.
            </summary>
            <remarks>
              This subroutine is the third step of the qz algorithm
              for solving generalized matrix eigenvalue problems,
              Siam J. Numer. anal. 10, 241-256(1973) by Moler and Stewart.
              
              This subroutine accepts a pair of real matrices, one of them
              in quasi-triangular form and the other in upper triangular form.
              it reduces the quasi-triangular matrix further, so that any
              remaining 2-by-2 blocks correspond to pairs of complex
              Eigenvalues, and returns quantities whose ratios give the
              generalized eigenvalues.  it is usually preceded by  qzhes
              and  qzit  and may be followed by  qzvec.
              
              For the full documentation, please check the original function.
            </remarks>
            <param name="n"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="alfr"></param>
            <param name="alfi"></param>
            <param name="beta"></param>
            <param name="matz"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.qzvec(System.Int32,System.Double[0:,0:],System.Double[0:,0:],System.Double[],System.Double[],System.Double[],System.Double[0:,0:])">
            <summary>
              Adaptation of the original Fortran QZVEC routine from EISPACK.
            </summary>
            <remarks>
              This subroutine is the optional fourth step of the qz algorithm
              for solving generalized matrix eigenvalue problems,
              Siam J. Numer. anal. 10, 241-256(1973) by Moler and Stewart.
              
              This subroutine accepts a pair of real matrices, one of them in
              quasi-triangular form (in which each 2-by-2 block corresponds to
              a pair of complex eigenvalues) and the other in upper triangular
              form.  It computes the eigenvectors of the triangular problem and
              transforms the results back to the original coordinate system.
              it is usually preceded by  qzhes,  qzit, and  qzval.
              
              For the full documentation, please check the original function.
            </remarks>
            <param name="n"></param>
            <param name="a"></param>
            <param name="b"></param>
            <param name="alfr"></param>
            <param name="alfi"></param>
            <param name="beta"></param>
            <param name="z"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.Epsilon(System.Double)">
            <summary>
              Estimates unit round-off in quantities of size x.
            </summary>
            <remarks>
              This is a port of the epslon function from EISPACK.
            </remarks>
            
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Decomposition.GEVD.Sign(System.Double,System.Double)">
            <summary>
              Returns <paramref name="a"/> with the sign of <paramref name="b"/>. 
            </summary>
            
            <remarks>
              This is a port of the sign transfer function from EISPACK,
              and is is equivalent to C++'s std::copysign function.
            </remarks>
            
            <returns>If B > 0 then the result is ABS(A), else it is -ABS(A).</returns>
            
            <param name="a"></param>
            <param name="b"></param>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.Alpha">
            <summary>
            Возвращает вектор α.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.Beta">
            <summary>
            Возвращает вектор β.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.Eigenvalues">
            <summary>
            Возвращает вектор собственных значений.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.D">
            <summary>
            Возвращает матрицу собственных значений D.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.V">
            <summary>
            Возвращает матрицу значений V.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.GEVD.IsSingular">
            <summary>
            Проверяет является ли одна из матриц сингулярной или нет.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.EVD">
            <summary>
            Определяет спектральное разложение квадратной матрицы.
            <remarks>
            Спектральное разложение - это представление квадратной матрицы A в виде произведения трёх матриц A = V * D * inv(V), где V - матрица спектральных векторов, а D - диагональная (в общем виде комплексная) матрица собственных значений.
            Матрица A может быть также представлена в виде произведения трех матриц: A = V * R * inv(V), где R - вещественная почти диагональная матрица собственных значений.
            Не все матрицы могут быть представлены в таком виде, а только те, которые обладают полным набором собственных векторов. 
            Спектральное разложение может использоваться для нахождения собственных значений и собственных векторов матрицы, решения систем линейных уравнений, обращения матрицы, нахождения определителя матрицы и вычисления аналитических функций от матриц.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Eigendecomposition_of_a_matrix
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.EVD.#ctor(System.Double[0:,0:],System.Double)">
            <summary>
            Инициализирует спектральное разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Decomposition.EVD.tred2">
            <summary>
            Сокращение до трехдиагональной формы. Для симметричного случая.
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.EVD.tql2">
            <summary>
            Приведение к трехдиагональной QL-форме. Для симметричного случая.
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.EVD.orthes">
            <summary>
            Несимметричное сокращение до формы Хессенберга.
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.EVD.hqr2">
            <summary>
            Сокращение Хессенберга до реальной формы Шура.
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.EVD.cdiv(System.Double,System.Double,System.Double,System.Double,System.Double@,System.Double@)">
            <summary>
            Скалярное деление комплексных чисел.
            </summary>
            <param name="xr"></param>
            <param name="xi"></param>
            <param name="yr"></param>
            <param name="yi"></param>
            <param name="cdivr"></param>
            <param name="cdivi"></param>
        </member>
        <member name="P:UMapx.Decomposition.EVD.V">
            <summary>
            Получает спектральные вектора.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.EVD.D">
            <summary>
            Получает собственные значения.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.EVD.R">
            <summary>
            Получает вещественную диагональную матрицу собственных значений.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.EVD.H">
            <summary>
            Получает форму Хессенберга.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.LDU">
            <summary>
            Определяет LDU-разложение квадратной матрицы.
            <remarks>
            Это представление квадратной матрицы A в виде произведения трех матриц: A = L * D * U, где L - нижняя треугольная матрица, D - диагональная матрица, а U - верхняя треугольная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/LU_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.LDU.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует LDU-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.LDU.L">
            <summary>
            Получает нижнюю треугольную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LDU.U">
            <summary>
            Получает верхнюю треугольную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LDU.D">
            <summary>
            Получает вектор элментов диагонали.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Diagonal">
            <summary>
            Определяет диагональное разложение квадратной матрицы.
            <remarks>
            Это представление квадратной матрицы A в виде произведения двух матриц: A = B * D, где B - квадратная матрица, а D - диагональная матрица.
            Данное разложение используется для выделения диагональных матриц в других разложениях (например, LDU-, LDL- разложения).
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Diagonal.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует диагональное разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.Diagonal.B">
            <summary>
            Получает квадратную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Diagonal.D">
            <summary>
            Получает вектор элментов диагонали.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.LU">
            <summary>
            Определяет LU-разложение квадратной матрицы.
            <remarks>
            Это представление квадратной матрицы A в виде произведения двух матриц: A = L * U, где L - нижняя треугольная матрица, U - верхняя треугольная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/LU_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.LU.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует LU-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.LU.ludecomp(System.Double[][])">
            <summary>
            Реализует LU-разложение квадратной матрицы.
            </summary>
            <param name="a">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.LU.L">
            <summary>
            Получает нижнюю треугольную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LU.U">
            <summary>
            Получает верхнюю треугольную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Cholesky">
            <summary>
            Определяет разложение Холецкого квадратной матрицы.
            <remarks>
            Это представление симметричной положительно-определённой квадратной матрицы в виде произведения: A = L * L', где L - нижняя треугольная матрица со строго положительными элементами на диагонали. 
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Cholesky_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Cholesky.#ctor(System.Double[0:,0:],System.Boolean)">
            <summary>
            Инициализирует разложение Холецкого квадратной матрицы.
            </summary>
            <param name="A">Квадратная симметричная положительно-определенная матрица</param>
            <param name="incomplete">Неполное разложение или нет</param>
        </member>
        <member name="M:UMapx.Decomposition.Cholesky.chol(System.Double[][])">
            <summary>
            Реализует разложение Холецкого.
            </summary>
            <param name="a">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.Cholesky.ichol(System.Double[][])">
            <summary>
            Реализует неполное разложение Холецкого.
            </summary>
            <param name="a">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.Cholesky.L">
            <summary>
            Получает нижнюю треугольную матрицу L.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Cholesky.U">
            <summary>
            Получает верхнюю треугольную матрицу U.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.UDL">
            <summary>
            Определяет UDL-разложение квадратной матрицы.
            <remarks>
            Это представление симметричной квадратной матрицы в виде произведения трех матриц: A = U * D * L, где U - верхняя треугольная матрица, D - диагональная матрица, а L - нижняя треугольная матрица.
            Данное разложение представляет собой специфичную форму разложения Холецкого.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.UDL.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует UDL-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная симметричная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.UDL.udldecomp(System.Double[0:,0:])">
            <summary>
            UDL-разложение.
            </summary>
            <param name="a">Симметричная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.UDL.U">
            <summary>
            Возвращает верхнюю треугольную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.UDL.D">
            <summary>
            Возвращает диагональную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.UDL.L">
            <summary>
            Возвращает нижнюю треугольную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.LDL">
            <summary>
            Определяет LDL'-разложение квадратной матрицы.
            Это представление симметричной положительно-определённой квадратной матрицы в виде произведения трех матриц: A = L * D * L', где L - нижняя треугольная матрица со строго положительными элементами на диагонали, 
            а D - диагональная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Cholesky_decomposition#LDL_decomposition_2
            <remarks></remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.LDL.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует LDL-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная симметричная положительно-определенная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.LDL.L">
            <summary>
            Получает нижнюю треугольную матрицу L.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LDL.U">
            <summary>
            Получает верхнюю треугольную матрицу U.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LDL.D">
            <summary>
            Получает диагональную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.SVD">
            <summary>
            Определяет сингулярное разложение матрицы. 
            <remarks>
            Это представление прямоугольной матрицы A в виде произведения трёх матриц A = U * S * V', где U - левые вектора, V - правые вектора, а S - сингулярные значения.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Singular_value_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.SVD.#ctor(System.Double[0:,0:],System.Int32)">
            <summary>
            Реализует сигнулярное разложение матрицы.
            </summary>
            <param name="A">Матрица</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="M:UMapx.Decomposition.SVD.svdcmp(System.Double[0:,0:])">
            <summary>
            Реализует сингулярное разложение матрицы.
            </summary>
            <param name="A">Матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.SVD.Sign(System.Double,System.Double)">
            <summary>
            Определение знака числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Знак</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Decomposition.SVD.U">
            <summary>
            Получает левые вектора.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.SVD.S">
            <summary>
            Получает сингулярные значения.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.SVD.V">
            <summary>
            Получает правые вектора.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.SVD.P">
            <summary>
            Получает псевдообратную матрицу к исходной.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Polar">
            <summary>
            Определяет полярное разложение матрицы.
            <remarks>
            Это представление прямоугольной матрицы A в виде произведения двух матриц: A = U * P, где U - унитарная матрица, P - положительно-определенная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Polar_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Polar.#ctor(System.Double[0:,0:],System.Int32)">
            <summary>
            Реализует полярное разложение матрицы.
            </summary>
            <param name="A">Матрица</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="P:UMapx.Decomposition.Polar.U">
            <summary>
            Получает унитарную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Polar.P">
            <summary>
            Получает положительно-определенную матрицу
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.NNMF">
            <summary>
            Определяет неотрицательную матричную факторизацию.
            <remarks>
            Это представление прямоугольной матрицы A в виде произведения двух матриц: A = W * H.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Non-negative_matrix_factorization
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.NNMF.#ctor(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Инициализирует неотрицательную матричную факторизацию.
            </summary>
            <param name="A">Неотрицательная матрица</param>
            <param name="r">Размерность новых матриц</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="M:UMapx.Decomposition.NNMF.nnmf(System.Double[][],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Представляет NNMF, основанный на мультипликативном методе.
            </summary>
            <param name="X">Матрица</param>
            <param name="m">Высота матрицы</param>
            <param name="n">Ширина матрицы</param>
            <param name="r">Новая размерность</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="P:UMapx.Decomposition.NNMF.W">
            <summary>
            Получает левую матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.NNMF.H">
            <summary>
            Получает правую матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.QR">
            <summary>
            Определяет QR-разложение квадратной матрицы.
            <remarks>
            Это представление матрицы в виде произведения двух матриц: A = Q * R, где Q - унитарная (или ортогональная) матрица, а R - верхняя треугольная матрица. 
            QR-разложение является основой одного из методов поиска собственных векторов и чисел матрицы — QR-алгоритма.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/QR_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.QR.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует QR-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.QR.qrdecomp(System.Double[0:,0:])">
            <summary>
            Реализует QR-разложение.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.QR.R">
            <summary>
            Возвращает верхнюю треугольную матрицу R.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.QR.Q">
            <summary>
            Возвращает ортогональную матрицу Q.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.RQ">
            <summary>
            Определяет RQ-разложение квадратной матрицы.
            <remarks>
            Это представление матрицы в виде произведения двух матриц: A = R * Q, где Q - унитарная (или ортогональная) матрица, а R - верхняя треугольная матрица. 
            RQ-разложение является одной из модификаций QR-алгоритма.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/QR_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.RQ.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует RQ-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.RQ.R">
            <summary>
            Возвращает нижнюю треугольную матрицу R.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.RQ.Q">
            <summary>
            Возвращает ортогональную матрицу Q.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.QL">
            <summary>
            Определяет QL-разложение квадратной матрицы.
            <remarks>
            Это представление матрицы в виде произведения двух матриц: A = Q * L, где Q - унитарная (или ортогональная) матрица, а L - нижняя треугольная матрица. 
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/QR_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.QL.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует QL-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.QL.L">
            <summary>
            Возвращает нижнюю треугольную матрицу L.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.QL.Q">
            <summary>
            Возвращает ортогональную матрицу Q.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.LQ">
            <summary>
            Определяет LQ-разложение квадратной матрицы.
            <remarks>
            Это представление матрицы в виде произведения двух матриц: A = L * Q, где Q - унитарная (или ортогональная) матрица, а L - нижняя треугольная матрица. 
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/QR_decomposition
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.LQ.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует LQ-разложение квадратной матрицы.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.LQ.L">
            <summary>
            Возвращает нижнюю треугольную матрицу L.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.LQ.Q">
            <summary>
            Возвращает ортогональную матрицу Q.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.GramSchmidt">
            <summary>
            Определяет процесс ортогонализации Грама-Шмидта.
            <remarks>
            В математике, в частности линейной алгебре и численном анализе, процесс Грама-Шмидта является методом ортонормирования множества векторов 
            в пространстве внутренних произведений. Данная процедура активно используется для ортогонализации базисов.
            Более подробную информацию можно найти на сайте: 
            https://en.wikipedia.org/wiki/Gram%E2%80%93Schmidt_process
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.GramSchmidt.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует процесс ортогонализации Грама-Шмидта.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.GramSchmidt.Proj(System.Double[],System.Double[])">
            <summary>
            Возвращает проекцию горизонтальных векторов.
            proj[e, a]' = (e * a') / (e * e') .* e
            </summary>
            <param name="e">Одномерный массив</param>
            <param name="a">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Decomposition.GramSchmidt.Proj(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает проекцию горизонтальных векторов.
            proj[e, a]' = (e * a') / (e * e') .* e
            </summary>
            <param name="e">Одномерный массив</param>
            <param name="a">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Decomposition.GramSchmidt.Q">
            <summary>
            Получает ортогональную матрицу Q.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Householder">
            <summary>
            Определяет преобразование Хаусхолдера.
            <remarks>
            Это линейное преобразование H(u) векторного пространства V, которое описывает его отображение относительно гиперплоскости, 
            которая проходит через начало координат. Было предложено в 1958 американским математиком Элстоном Скоттом Хаусхолдером. Широко применяется в линейной алгебре для QR разложения матрицы.
            Кроме того, преобразование Хаусхолдера активно используется для ортогонализации базисов, в конечном счете матрица Хаусхолдера обладает свойствами: 
            H = H', H' * H = I; det(H) = -1.
            В данном классе реализовано два вида преобразования Хаусхолдера: редукция до трехдиагональной матрицы и построение матрицы Хаусхолдера по заданному вектору.
            В первом случае исходная квадратная матрица определяется как: A = H * T * H'.
            Более подробную информацию можно найти на сайте: 
            https://en.wikipedia.org/wiki/Householder_transformation
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Householder.#ctor(System.Double[])">
            <summary>
            Инициализирует преобразование Хаусхолдера.
            </summary>
            <param name="v">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Decomposition.Householder.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует преобразование Хаусхолдера.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.Householder.hmatx(System.Double[])">
            <summary>
            Реализует генерацию матрицы Хаусхолдера.
            </summary>
            <param name="v">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Decomposition.Householder.tred2(System.Double[0:,0:])">
            <summary>
            Реализует сокращение Хаусхолдера до трехдиагональной формы.
            </summary>
            <param name="a">Матрица</param>
        </member>
        <member name="P:UMapx.Decomposition.Householder.H">
            <summary>
            Возвращает матрицу Хаусхолдера.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Householder.T">
            <summary>
            Получает диагональную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Power">
            <summary>
            Определяет итерационный алгоритм вычисления собственных значений матрицы.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Power_iteration
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Power.#ctor(System.Double[0:,0:],System.Int32)">
            <summary>
            Инициалазирует итерационный алгоритм вычисления собственных значений матрицы.
            </summary>
            <param name="A">Матрица</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="P:UMapx.Decomposition.Power.V">
            <summary>
            Возвращает вектор собственных значений.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Power.J">
            <summary>
            Возвращает диагонализированную матрицу собственных значений.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Arnoldi">
            <summary>
            Определяет преобразование Арнольди.
            <remarks>
            Данное преобразование испольузется для приведения квадратной матрицы к форме Хессенберга.
            Матрица A представляется в виде произведения трех матриц: A = Q * H * Q', где H - верхняя треугольная матрица Хессенберга, Q - ортогональная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Arnoldi_iteration
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Arnoldi.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует преобразование Арнольди.
            </summary>
            <param name="A">Квадратная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.Arnoldi.arnoldi(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Arnoldi decomposition.
            </summary>
            <param name="a">Matrix</param>
            <param name="n">Height</param>
            <param name="m">Width</param>
        </member>
        <member name="P:UMapx.Decomposition.Arnoldi.Q">
            <summary>
            Возвращает ортогональную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Arnoldi.H">
            <summary>
            Возвращает верхнюю треугольную матрицу Хессенберга.
            </summary>
        </member>
        <member name="T:UMapx.Decomposition.Lanczos">
            <summary>
            Определяет преобразование Ланцоша.
            <remarks>
            Данное преобразование испольузется для представления симметричной матрицы A в виде произведения 
            трех матриц: A = Q * T * Q', где T - трехдиагональная матрица, а Q - ортогональная матрица.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Lanczos_algorithm
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Decomposition.Lanczos.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует преобразование Ланцоша.
            </summary>
            <param name="A">Симметричная матрица</param>
        </member>
        <member name="M:UMapx.Decomposition.Lanczos.lanczos(System.Double[0:,0:],System.Int32)">
            <summary>
            Lanczos decomposition.
            </summary>
            <param name="a">Symmetric matrix</param>
            <param name="n">Matrix length</param>
        </member>
        <member name="P:UMapx.Decomposition.Lanczos.Q">
            <summary>
            Возвращает ортогональную матрицу.
            </summary>
        </member>
        <member name="P:UMapx.Decomposition.Lanczos.T">
            <summary>
            Возвращает трехдиагональную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Transform.WalshHadamardTransform">
            <summary>
            Определяет преобразование Уолша-Адамара.
            <remarks>
            Дискретное преобразование Уолша-Адамара - это одно из первых дискретных ортогональных преобразований. Оно активно используется для сжатия сигналов, размерность которых
            равна степени 2 (например 64, 128, 256 и так далее).
            
            Более подробную информацию можно найти на сайте:
            http://kibia.ru/teachers/kreindelin/pdf/2.pdf
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Transform.ITransform">
            <summary>
            Определяет общий интерфейс дискретных преобразований.
            </summary>
        </member>
        <member name="M:UMapx.Transform.ITransform.Forward(System.Double[])">
            <summary>
            Прямое преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Backward(System.Double[])">
            <summary>
            Обратное преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.ITransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="F:UMapx.Transform.WalshHadamardTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="F:UMapx.Transform.WalshHadamardTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует преобразование Уолша-Адамара.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Hadamard(System.Int32)">
            <summary>
            Реализует построение матрицы Уолша-Адамара.
            </summary>
            <param name="powOf2">Степень двойки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Hadamard">
            <summary>
            Реализует построение матрицы Уолша-Адамара [2 x 2].
            </summary>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.WalshHadamardTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Уолша-Адамара.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.WalshHadamardTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.WalshHadamardTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.CosineTransform">
            <summary>
            Определяет дискретное косинусоидальное преобразование.
            <remarks>
            Дискретное консинусное преобразование (ДКП) тесно связано с дискретным преобразованием Фурье и является гомоморфизмом его векторного пространства.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Discrete_cosine_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.CosineTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.#ctor(UMapx.Core.Direction)">
            <summary>
            Инициализирует дискретное косинусоидальное преобразование.
            </summary>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Cosine(System.Int32)">
            <summary>
            Реализует построение матрицы косинусного преобразования.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное косинусоидальное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное косинусоидальное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное косинусоидальное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное косинусоидальное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное косинусоидальное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное косинусоидальное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное косинусоидальное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.CosineTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное косинусоидальное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.CosineTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.SineTransform">
            <summary>
            Определяет дискретное синусоидальное преобразование.
            <remarks>
            Дискретное ортогональное синусное преобразование было предложено Джейном в качестве аппроксимации преобразования Карунена-Лоэва для марковского процесса.
            
            Более подробную информацию можно найти на сайте:
            http://sernam.ru/book_prett1.php?id=91
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.SineTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.SineTransform.#ctor(UMapx.Core.Direction)">
            <summary>
            Инициализирует дискретное синусоидальное преобразование.
            </summary>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Sine(System.Int32)">
            <summary>
            Реализует построение матрицы синусного преобразования.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное синусоидальное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное синусоидальное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное синусоидальное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное синусоидальное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное синусоидальное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное синусоидальное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное синусоидальное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.SineTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное синусоидальное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.SineTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.HartleyTransform">
            <summary>
            Определяет дискретное преобразование Хартли.
            <remarks>
            Данное дискретное ортогональное преобразование служит своего рода заменой дискретного преобразования Фурье для вещественных сигналов, однако, может применяться
            и для анализа комплексных.
            Кроме того, в данном программном модуле реализовано быстрое преобразование Хартли (БПХ), вычисляемое через быстрое преобразование Фурье (алгоритм Кули-Тьюки).
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Discrete_Hartley_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.HartleyTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="F:UMapx.Transform.HartleyTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует дискретное преобразование Хартли.
            </summary>
            <param name="normalized">Нормализованное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Hartley(System.Int32)">
            <summary>
            Реализует построение матрицы преобразования Хартли.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Хартли.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Хартли.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Хартли.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Хартли.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Хартли.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Хартли.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Хартли.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HartleyTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Хартли.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.HartleyTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.HartleyTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FourierTransform">
            <summary>
            Определяет дискретное преобразование Фурье.
            <remarks>
            Это одно из преобразований Фурье, широко применяемых в алгоритмах цифровой обработки сигналов. Дискретные преобразования Фурье помогают решать дифференциальные уравнения 
            в частных производных и выполнять такие операции, как свёртки. Дискретные преобразования Фурье также активно используются в статистике, при анализе временных рядов.
            Кроме того, в данном программном модуле реализовано быстрое преобразование Фурье (алгоритм Кули-Тьюки).
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Discrete_Fourier_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FourierTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FourierTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует дискретное преобразование Фурье.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Fourier(System.Int32)">
            <summary>
            Реализует построение матрицы Фурье.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FourierTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.FourierTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FourierTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.LaplaceTransform">
            <summary>
            Определяет дискретное преобразование Лапласа.
            <remarks>
            Данный класс реализует дискретный эквивалент непрерывного преобразования Лапласа.
            Непрерывное преобразование Лапласа тесно связано с преобразованием Фурье. Иными словами, преобразование Фурье эквивалентно двустороннему преобразованию Лапласа с комплексным 
            аргументом: s = iω. Эта связь между преобразованиями часто используется для того, чтобы определить частотный спектр сигнала.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Laplace_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.LaplaceTransform.sigma">
            <summary>
            Среднеквадратическое отклонение.
            </summary>
        </member>
        <member name="F:UMapx.Transform.LaplaceTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="F:UMapx.Transform.LaplaceTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.#ctor(System.Double,System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует дискретное преобразование Лапласа.
            </summary>
            <param name="sigma">Среднеквадратическое отклонение (0, 1)</param>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Laplace(System.Int32,System.Double,System.Boolean)">
            <summary>
            Реализует построение матрицы Лапласа.
            </summary>
            <param name="n">Размер матрицы</param>
            <param name="sigma">Среднеквадратическое отклонение (0, 1)</param>
            <param name="backward">Возвращать матрицу обратного преобразования или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Лапласа.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Лапласа.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Лапласа.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Лапласа.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplaceTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.LaplaceTransform.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения (0, 1).
            <remarks>
            В случае, если σ = 0, то преобразование Лапласа принимает вид преобразования Фурье.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Transform.LaplaceTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.LaplaceTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.HilbertTransform">
            <summary>
            Определяет преобразование Гильберта.
            <remarks>
            Суть преобразования заключается в том, что при прямом преобразовании Гильберта происходит усиление положительных частот и обнуление отрицательных.
            В свою очередь, обратное преобразование Гильберта вычисляется путем отображения прямого преобразования: H^–1{h(t)} = –H{h(t)}.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hilbert_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.HilbertTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует преобразование Гильберта.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Гильберта.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Гильберта.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Гильберта.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Гильберта.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.hilbertf(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Реализует перегруппировку спектра по Гильберту.
            </summary>
            <param name="f">Спектр</param>
            <param name="n">Размерность</param>
        </member>
        <member name="M:UMapx.Transform.HilbertTransform.hilbertb(UMapx.Core.Complex[],UMapx.Core.Complex[],System.Int32)">
            <summary>
            Реализует группировку по Гильберту.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="f">Спектр, упорядоченный по Гильберту</param>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.HilbertTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.HilbertTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastWalshHadamardTransform">
            <summary>
            Определяет быстрое преобразование Уолша-Адамара.
            <remarks>
            Данная оптимизация преобразования Уолша-Адамара сложностью O(N^2) позволяет произвести вычисления за O(Nlog(N)). Алгоритм быстрого преобразования 
            Уолша-Адамара имеет схожую структуру с быстрым преобразованием Фурье (алгоритм Кули-Тьюки).
            
            Более подробную информацию можно найти на сайте:
            http://www.mathworks.com/matlabcentral/fileexchange/6879-fast-walsh-hadamard-transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastWalshHadamardTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastWalshHadamardTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Forward(System.Double[])">
            <summary>
            Прямое быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Backward(System.Double[])">
            <summary>
            Обратное быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.fwht(System.Double[])">
            <summary>
            Реализует быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.FastWalshHadamardTransform.fwht(UMapx.Core.Complex[])">
            <summary>
            Реализует быстрое преобразование Уолша-Адамара.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="P:UMapx.Transform.FastWalshHadamardTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastWalshHadamardTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastFourierTransform">
            <summary>
            Определяет быстрое преобразование Фурье по алгоритму Кули-Тюки.
            <remarks>
            Данная оптимизация алгоритма Кули-Тьюки для вычисления преобразования Фурье предназначена для анализа крупных сигналов.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Cooley%E2%80%93Tukey_FFT_algorithm
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastFourierTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastFourierTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое преобразование Фурье по алгоритму Кули-Тюки.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное быстрое преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное быстрое преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное быстрое преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное быстрое преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.fft(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное быстрое преобразование Фурье.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.ifft(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное быстрое преобразование Фурье.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.GetReversedBits(System.Int32)">
            <summary>
            Получает массив с указателями на члены данных, которые должны быть заменены перед БПФ.
            </summary>
            <param name="numberOfBits">Количество битов</param>
            <returns>Массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.ForwardComplexRotation(System.Int32)">
            <summary>
            Получает прямое вращение комплексного числа.
            </summary>
            <param name="numberOfBits">Количество битов</param>
            <returns>Массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.BackwardComplexRotation(System.Int32)">
            <summary>
            Получает обратное вращение комплексного числа.
            </summary>
            <param name="numberOfBits">Количество битов</param>
            <returns>Массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.ReorderData(UMapx.Core.Complex[])">
            <summary>
            Переупорядочивает данные для использования БПФ.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Pow2(System.Int32)">
            <summary>
            Вычисляет степень двойки.
            </summary>
            <param name="power">Степень</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Transform.FastFourierTransform.Log2(System.Int32)">
            <summary>
            Выисляет логарифм по основанию 2.
            </summary>
            <param name="x">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="P:UMapx.Transform.FastFourierTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastFourierTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastHartleyTransform">
            <summary>
            Определяет быстрое преобразование Хартли.
            <remarks>
            Алгоритм быстрого преобразования Хартли (БПХ) построен на основе быстрого преобразования Фурье (алгоритм Кули-Тьюки).
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Discrete_Hartley_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastHartleyTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое преобразование Хартли.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное быстрое преобразование Хартли.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное быстрое преобразование Хартли.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное быстрое преобразование Хартли.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное быстрое преобразование Хартли.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное быстрое преобразование Хартли.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное быстрое преобразование Хартли.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное быстрое преобразование Хартли.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHartleyTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное быстрое преобразование Хартли.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.FastHartleyTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastHartleyTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastHilbertTransform">
            <summary>
            Определяет быстрое преобразование Гильберта.
            <remarks>
            Данная вычислительная оптимизация реализована за счет быстрого преобразования Фурье (алгоритм Кули-Тьюки), сложность которого составляет O(Nlog(N)).
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hilbert_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastHilbertTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastHilbertTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.#ctor(System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое преобразование Гильберта.
            </summary>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное быстрое преобразование Гильберта.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное быстрое преобразование Гильберта.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное быстрое преобразование Гильберта.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное быстрое преобразование Гильберта.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastHilbertTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.FastHilbertTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastHilbertTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastCosineTransform">
            <summary>
            Определяет быстрое дискретное косинусное преобразование.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastCosineTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastCosineTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.#ctor(UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое дискретное косинусное преобразование.
            </summary>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Forward(System.Double[])">
            <summary>
            Прямое быстрое дискретное косинусное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Backward(System.Double[])">
            <summary>
            Обратное быстрое дискретное косинусное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое быстрое дискретное косинусное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное быстрое дискретное косинусное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastCosineTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.FastCosineTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastSineTransform">
            <summary>
            Определяет быстрое дискретное синусное преобразование.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastSineTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastSineTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.#ctor(UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое дискретное синусное преобразование.
            </summary>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Forward(System.Double[])">
            <summary>
            Прямое быстрое дискретное синусное преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Backward(System.Double[])">
            <summary>
            Обратное быстрое дискретное синусное преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое быстрое дискретное синусное преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное быстрое дискретное синусное преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastSineTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.FastSineTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.FastLaplaceTransform">
            <summary>
            Определяет быстрое дискретное преобразование Лапласа.
            <remarks>
            Данный класс реализует дискретный эквивалент непрерывного преобразования Лапласа.
            Непрерывное преобразование Лапласа тесно связано с преобразованием Фурье. Иными словами, преобразование Фурье эквивалентно двустороннему преобразованию Лапласа с комплексным 
            аргументом: s = iω. Эта связь между преобразованиями часто используется для того, чтобы определить частотный спектр сигнала.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Laplace_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastLaplaceTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastLaplaceTransform.sigma">
            <summary>
            Среднеквадратическое отклонение.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastLaplaceTransform.normalized">
            <summary>
            Нормализованное преобразование или нет.
            </summary>
        </member>
        <member name="F:UMapx.Transform.FastLaplaceTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.#ctor(System.Double,System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое дискретное преобразование Лапласа.
            </summary>
            <param name="sigma">Среднеквадратическое отклонение (0, 1)</param>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Лапласа.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Лапласа.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое быстрое дискретное преобразование Лапласа.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное быстрое дискретное преобразование Лапласа.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.laplace(UMapx.Core.Complex[],System.Double)">
            <summary>
            Прямое преобразование Лапласа.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="sigma">Сигма</param>
        </member>
        <member name="M:UMapx.Transform.FastLaplaceTransform.invlaplace(UMapx.Core.Complex[],System.Double)">
            <summary>
            Обратное преобразование Лапласа.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="sigma">Сигма</param>
        </member>
        <member name="P:UMapx.Transform.FastLaplaceTransform.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения (0, 1).
            <remarks>
            В случае, если σ = 0, то преобразование Лапласа принимает вид преобразования Фурье.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastLaplaceTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Transform.FastLaplaceTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="T:UMapx.Transform.LaplacianPyramidTransform">
            <summary>
            Определяет класс представления сигнала в виде пирамиды Лапласа.
            Более подробную информацию можно найти на сайте:
            http://www.cs.toronto.edu/~jepson/csc320/notes/pyramids.pdf
            </summary>
        </member>
        <member name="T:UMapx.Transform.ILevelTransform">
            <summary>
            Определяет класс многоуровневого преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Transform.ILevelTransform.Levels">
            <summary>
            Получает или задает количество уровней представления.
            </summary>
        </member>
        <member name="T:UMapx.Transform.IPyramidTransform">
            <summary>
            Определяет общий вид пирамидоидальных преобразований.
            </summary>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Backward(System.Double[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Forward(System.Double[])">
            <summary>
            Прямое пирамидоидальное преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Backward(System.Double[][])">
            <summary>
            Обратное пирамидоидальное преобразование.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Backward(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое пирамидоидальное преобразование.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.IPyramidTransform.Backward(UMapx.Core.Complex[][])">
            <summary>
            Обратное пирамидоидальное преобразование.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.#ctor(System.Int32)">
            <summary>
            Инициализирует класс представления сигнала в виде пирамиды Лапласа.
            </summary>
            <param name="levels">Количество уровней представления</param>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.#ctor">
            <summary>
            Инициализирует класс представления сигнала в виде пирамиды Лапласа.
            </summary>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(System.Double[])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Backward(System.Double[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Backward(System.Double[][])">
            <summary>
            Обратное пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Backward(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Backward(UMapx.Core.Complex[][])">
            <summary>
            Обратное пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(System.Double[][0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Пирамида Гусса</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(System.Double[][])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Пирамида Гусса</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Пирамида Гусса</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidTransform.Forward(UMapx.Core.Complex[][])">
            <summary>
            Прямое пирамидоидальное преобразование Лапласа.
            </summary>
            <param name="data">Пирамида Гусса</param>
            <returns>Пирамида</returns>
        </member>
        <member name="P:UMapx.Transform.LaplacianPyramidTransform.Levels">
            <summary>
            Получает или задает количество уровней представления.
            </summary>
        </member>
        <member name="T:UMapx.Transform.GaussianPyramidTransform">
            <summary>
            Определяет класс представления сигнала в виде пирамиды Гаусса.
            Более подробную информацию можно найти на сайте:
            http://www.cs.toronto.edu/~jepson/csc320/notes/pyramids.pdf
            </summary>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.#ctor">
            <summary>
            Инициализирует класс представления сигнала в виде пирамиды Гаусса.
            </summary>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.#ctor(System.Int32)">
            <summary>
            Инициализирует класс представления сигнала в виде пирамиды Гаусса.
            </summary>
            <param name="levels">Количество уровней представления</param>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Гаусса.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Forward(System.Double[])">
            <summary>
            Прямое пирамидоидальное преобразование Гаусса.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Backward(System.Double[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование Гаусса (не поддерживается).
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Backward(System.Double[][])">
            <summary>
            Обратное пирамидоидальное преобразование Гаусса (не поддерживается).
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое пирамидоидальное преобразование Гаусса.
            </summary>
            <param name="data">Двумерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое пирамидоидальное преобразование Гаусса.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Пирамида</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Backward(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Обратное пирамидоидальное преобразование Гаусса (не поддерживается).
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.Backward(UMapx.Core.Complex[][])">
            <summary>
            Обратное пирамидоидальное преобразование Гаусса (не поддерживается).
            </summary>
            <param name="pyramid">Пирамида</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.upsample(System.Double[0:,0:])">
            <summary>
            Увеличивает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.upsample(System.Double[])">
            <summary>
            Увеличивает размерность в два раза. 
            </summary>
            <param name="u">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.downsample(System.Double[0:,0:])">
            <summary>
            Уменьшает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.downsample(System.Double[])">
            <summary>
            Уменьшает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.add(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Складывает две матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.add(System.Double[],System.Double[])">
            <summary>
            Складывает два вектора.
            </summary>
            <param name="m">Одномерный массив</param>
            <param name="n">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.sub(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Вычитает две матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.sub(System.Double[],System.Double[])">
            <summary>
            Вычитает два вектора.
            </summary>
            <param name="m">Одномерный массив</param>
            <param name="n">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.upsample(UMapx.Core.Complex[0:,0:])">
            <summary>
            Увеличивает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.upsample(UMapx.Core.Complex[])">
            <summary>
            Увеличивает размерность в два раза. 
            </summary>
            <param name="u">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.downsample(UMapx.Core.Complex[0:,0:])">
            <summary>
            Уменьшает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.downsample(UMapx.Core.Complex[])">
            <summary>
            Уменьшает размерность в два раза. 
            </summary>
            <param name="u">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.add(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Складывает две матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.add(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Складывает два вектора.
            </summary>
            <param name="m">Одномерный массив</param>
            <param name="n">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.sub(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Вычитает две матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GaussianPyramidTransform.sub(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Вычитает два вектора.
            </summary>
            <param name="m">Одномерный массив</param>
            <param name="n">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.GaussianPyramidTransform.Levels">
            <summary>
            Получает или задает количество уровней представления.
            </summary>
        </member>
        <member name="P:UMapx.Transform.GaussianPyramidTransform.Filter">
            <summary>
            Возвращает одномерный фильтр Гаусса.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Transform.FrequencyFilter">
            <summary>
            Определяет фильтр частот.
            </summary>
        </member>
        <member name="T:UMapx.Transform.IFilter">
            <summary>
            Определяет общий вид фильтров.
            </summary>
        </member>
        <member name="M:UMapx.Transform.IFilter.Apply(System.Double[])">
            <summary>
            Применяет фильтр к вектору вещественных чисел.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.IFilter.Apply(System.Double[0:,0:])">
            <summary>
            Применяет фильтр к матрице вещественных чисел.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.IFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Применяет фильтр к вектору комплексных чисел.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.IFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Применяет фильтр к матрице комплексных чисел.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="F:UMapx.Transform.FrequencyFilter.frequencyRange">
            <summary>
            Минимальные и максимальные частоты.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.#ctor">
            <summary>
            Инициализирует фильтр частот.
            </summary>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.#ctor(UMapx.Core.RangeInt)">
            <summary>
            Инициализирует фильтр частот.
            </summary>
            <param name="frequencyRange">Диапазон частот</param>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр частот.
            </summary>
            <param name="min">Минимальная частота</param>
            <param name="max">Максимальная частота</param>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.Apply(System.Double[])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.FrequencyFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="P:UMapx.Transform.FrequencyFilter.FrequencyRange">
            <summary>
            Получает или задает диапазон частот.
            </summary>
        </member>
        <member name="T:UMapx.Transform.CompressFilter">
            <summary>
            Определяет фильтр сжатия по пороговому значению.
            <remarks>
            Суть фильтра заключается в обнулении всех тех значений сигнала, модуль которых лежит ниже определенного значения - порога.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.CompressFilter.threshold">
            <summary>
            Пороговое значение.
            </summary>
        </member>
        <member name="F:UMapx.Transform.CompressFilter.compresstype">
            <summary>
            Тип сжатия.
            </summary>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.#ctor">
            <summary>
            Инициализирует фильтр сжатия по пороговому значению.
            </summary>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.#ctor(System.Double,UMapx.Transform.CompressFilter.Compress)">
            <summary>
            Инициализирует фильтр сжатия по пороговому значению.
            </summary>
            <param name="threshold">Пороговое значение</param>
            <param name="compresstype">Тип сжатия</param>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одомерный массив</param>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одомерный массив</param>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.CompressFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="P:UMapx.Transform.CompressFilter.CompressType">
            <summary>
            Получает или задает тип сжатия.
            </summary>
        </member>
        <member name="P:UMapx.Transform.CompressFilter.Threshold">
            <summary>
            Получает или задает пороговое значение.
            </summary>
        </member>
        <member name="T:UMapx.Transform.CompressFilter.Compress">
            <summary>
            Определяет тип сжатия.
            </summary>
        </member>
        <member name="F:UMapx.Transform.CompressFilter.Compress.Abs">
            <summary>
            Сжатие по модулю.
            </summary>
        </member>
        <member name="F:UMapx.Transform.CompressFilter.Compress.Under">
            <summary>
            Сжатие значений меньше порогового.
            </summary>
        </member>
        <member name="F:UMapx.Transform.CompressFilter.Compress.Over">
            <summary>
            Сжатие значений больше порогового.
            </summary>
        </member>
        <member name="T:UMapx.Transform.MeanFilter">
            <summary>
            Определяет фильтр локального усреднения.
            <remarks>
            Фильтр вычисляет средние значения в локальных областях сигнала.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Box_blur
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Transform.IBlendFilter">
            <summary>
            Определяет общий вид фильтров смешивания.
            </summary>
        </member>
        <member name="M:UMapx.Transform.IBlendFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.IBlendFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.IBlendFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.IBlendFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="F:UMapx.Transform.MeanFilter.r">
            <summary>
            Радиус фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Transform.MeanFilter.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Transform.MeanFilter.factor">
            <summary>
            Множитель.
            </summary>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.#ctor(System.Int32,UMapx.Core.Direction,System.Double)">
            <summary>
            Инициализирует фильтр локального усреднения.
            </summary>
            <param name="radius">Радиус фильтра (>1)</param>
            <param name="direction">Направление обработки</param>
            <param name="factor">Множитель [-1, 1]</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.boxf(System.Double[0:,0:],UMapx.Core.Direction,System.Int32)">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="r">Радиус обработки</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.boxf(UMapx.Core.Complex[0:,0:],UMapx.Core.Direction,System.Int32)">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="r">Радиус обработки</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.boxf(System.Double[],System.Int32,System.Int32)">
            <summary>
            Реализует одномерный фильтр арифметического локального усреднения.
            </summary>
            <param name="input">Одномерный массив</param>
            <param name="l">Длина сигнала</param>
            <param name="r">Ядро фильтра</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.boxf(UMapx.Core.Complex[],System.Int32,System.Int32)">
            <summary>
            Реализует одномерный фильтр арифметического локального усреднения.
            </summary>
            <param name="input">Одномерный массив</param>
            <param name="l">Длина сигнала</param>
            <param name="r">Ядро фильтра</param>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.meanf(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр математического усреднения.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.meanf(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр математического усреднения.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.meanf(System.Double[][])">
            <summary>
            Реализует одномерный фильтр математического усреднения.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.MeanFilter.meanf(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр математического усреднения.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Transform.MeanFilter.Radius">
            <summary>
            Получает или задает значение радиуса фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Transform.MeanFilter.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="P:UMapx.Transform.MeanFilter.Factor">
            <summary>
            Получает или задает значение множителя [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Transform.GuidedFilter">
            <summary>
            Определяет направленный фильтр.
            <remarks>
            Данный фильтр представляет собой вычислительно эффективный аналог билатерального фильтра (bilateral filter).
            Более подробную информацию можно найти на сайте:
            http://kaiminghe.com/eccv10/index.html
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.GuidedFilter.eps">
            <summary>
            Погрешность.
            </summary>
        </member>
        <member name="F:UMapx.Transform.GuidedFilter.factor">
            <summary>
            Множитель.
            </summary>
        </member>
        <member name="F:UMapx.Transform.GuidedFilter.radius">
            <summary>
            Радиус фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.#ctor(System.Int32,System.Double,System.Double)">
            <summary>
            Инициализирует направленный фильтр.
            </summary>
            <param name="radius">Радиус фильтра (>1)</param>
            <param name="eps">Погрешность (0, 1)</param>
            <param name="factor">Множитель [-1, 1]</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.FromBilateral(System.Int32,System.Double)">
            <summary>
            Создает направленный фильтр с заданными параметрами для билатерального фильтра.
            </summary>
            <param name="s">Значение первой сигмы σs</param>
            <param name="r">Значение второй сигмы σr</param>
            <returns>Направленный фильтр</returns>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный направленный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный направленный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный направленный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный направленный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.guidedfilter(System.Double[0:,0:],System.Int32,System.Double)">
            <summary>
            Guided filer function.
            </summary>
            <param name="input">Input signal</param>
            <param name="r">Filter size</param>
            <param name="eps">Epsilon (0, 1)</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.guidedfilter(UMapx.Core.Complex[0:,0:],System.Int32,System.Double)">
            <summary>
            Guided filer function.
            </summary>
            <param name="input">Input signal</param>
            <param name="r">Filter size</param>
            <param name="eps">Epsilon (0, 1)</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.guidedfilter(System.Double[],System.Int32,System.Double)">
            <summary>
            Guided filer function.
            </summary>
            <param name="input">Input signal</param>
            <param name="r">Filter size</param>
            <param name="eps">Epsilon (0, 1)</param>
        </member>
        <member name="M:UMapx.Transform.GuidedFilter.guidedfilter(UMapx.Core.Complex[],System.Int32,System.Double)">
            <summary>
            Guided filer function.
            </summary>
            <param name="input">Input signal</param>
            <param name="r">Filter size</param>
            <param name="eps">Epsilon (0, 1)</param>
        </member>
        <member name="P:UMapx.Transform.GuidedFilter.Radius">
            <summary>
            Получает или задает значение радиуса фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Transform.GuidedFilter.Eps">
            <summary>
            Получает или задает значение погрешности (0, 1).
            <remarks>
            Оптимальное значение ε = 0.025.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Transform.GuidedFilter.Factor">
            <summary>
            Получает или задает значение множителя [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Transform.DomainTransformFilter">
            <summary>
            Определяет "Domain transform" фильтр.
            <remarks>
            Данный фильтр представляет собой вычислительно эффективный аналог билатерального фильтра (bilateral filter).
            Более подробную информацию можно найти на сайте:
            http://www.inf.ufrgs.br/~eslgastal/DomainTransform/Gastal_Oliveira_SIGGRAPH2011_Domain_Transform.pdf
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.#ctor(System.Double,System.Double,System.Int32,System.Double)">
            <summary>
            Инициализирует "Domain transform" фильтр.
            </summary>
            <param name="sigma_s">Значение σs</param>
            <param name="sigma_r">Значение σr</param>
            <param name="iterations">Количество итераций</param>
            <param name="factor">Множитель [-1, 1]</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.domainfilter(System.Double[0:,0:],System.Double,System.Double,System.Int32)">
            <summary>
            Domain transform filter.
            </summary>
            <param name="I">Input signal</param>
            <param name="sigma_s">High sigma</param>
            <param name="sigma_r">Low sigma</param>
            <param name="iterations">Number of iterations</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.domainfilter(UMapx.Core.Complex[0:,0:],System.Double,System.Double,System.Int32)">
            <summary>
            Domain transform filter.
            </summary>
            <param name="I">Input signal</param>
            <param name="sigma_s">High sigma</param>
            <param name="sigma_r">Low sigma</param>
            <param name="iterations">Number of iterations</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.domainfilter(System.Double[],System.Double,System.Double,System.Int32)">
            <summary>
            Domain transform filter.
            </summary>
            <param name="I">Input signal</param>
            <param name="sigma_s">High sigma</param>
            <param name="sigma_r">Low sigma</param>
            <param name="iterations">Number of iterations</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.domainfilter(UMapx.Core.Complex[],System.Double,System.Double,System.Int32)">
            <summary>
            Domain transform filter.
            </summary>
            <param name="I">Input signal</param>
            <param name="sigma_s">High sigma</param>
            <param name="sigma_r">Low sigma</param>
            <param name="iterations">Number of iterations</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf_h(System.Double[0:,0:],System.Double[0:,0:],System.Double)">
            <summary>
            Transformed domain recursive filter (horizontal).
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf_v(System.Double[0:,0:],System.Double[0:,0:],System.Double)">
            <summary>
            Transformed domain recursive filter (vertical).
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf_h(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Transformed domain recursive filter (horizontal).
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf_v(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Transformed domain recursive filter (vertical).
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf(System.Double[],System.Double[],System.Double)">
            <summary>
            Transformed domain recursive filter.
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="M:UMapx.Transform.DomainTransformFilter.tdrf(UMapx.Core.Complex[],UMapx.Core.Complex[],System.Double)">
            <summary>
            Transformed domain recursive filter.
            </summary>
            <param name="F">Input signal</param>
            <param name="D">Difference</param>
            <param name="sigma">Sigma</param>
        </member>
        <member name="P:UMapx.Transform.DomainTransformFilter.SigmaS">
            <summary>
            Получает или задает значение σs.
            </summary>
        </member>
        <member name="P:UMapx.Transform.DomainTransformFilter.SigmaR">
            <summary>
            Получает или задает значение σr.
            </summary>
        </member>
        <member name="P:UMapx.Transform.DomainTransformFilter.Iterations">
            <summary>
            Получает или задает количество итераций.
            </summary>
        </member>
        <member name="P:UMapx.Transform.DomainTransformFilter.Factor">
            <summary>
            Получает или задает значение множителя [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Transform.LaplacianPyramidFilter">
            <summary>
            Определяет фильтр на основе пирамиды Лапласа.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://www.cs.toronto.edu/~jepson/csc320/notes/pyramids.pdf
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.#ctor(UMapx.Transform.LaplacianPyramidTransform,System.Double)">
            <summary>
            Инициализирует фильтр на основе пирамиды Лапласа.
            </summary>
            <param name="lap">Пирамида Лапласа</param>
            <param name="factor">Множитель [-1, 1]</param>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Вектор</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Вектор</returns>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Transform.LaplacianPyramidFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="P:UMapx.Transform.LaplacianPyramidFilter.LaplacianPyramid">
            <summary>
            Получает или задает пирамиду Лапласа.
            </summary>
        </member>
        <member name="P:UMapx.Transform.LaplacianPyramidFilter.Factor">
            <summary>
            Получает или задает значение множителя [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Transform.LocalLaplacianFilter">
            <summary>
            Определяет локальный фильтр Лапласа.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://people.csail.mit.edu/sparis/publi/2011/siggraph/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Transform.LocalLaplacianFilter.sigma">
            <summary>
            Параметр сигма.
            </summary>
        </member>
        <member name="F:UMapx.Transform.LocalLaplacianFilter.factor">
            <summary>
            Множитель.
            </summary>
        </member>
        <member name="F:UMapx.Transform.LocalLaplacianFilter.n">
            <summary>
            Количество отсчетов.
            </summary>
        </member>
        <member name="F:UMapx.Transform.LocalLaplacianFilter.levels">
            <summary>
            Количество уровней
            </summary>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.#ctor(System.Double,System.Int32,System.Int32,System.Double)">
            <summary>
            Инициализирует локальный фильтр Лапласа.
            </summary>
            <param name="sigma">σ-параметр</param>
            <param name="n">Количество отсчетов</param>
            <param name="levels">Количество уровней</param>
            <param name="factor">Множитель [-1, 1]</param>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(System.Double[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует одномерный фильтр.
            </summary>
            <param name="data">Набор векторов</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный локальный фильтр Лапласа.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный локальный фильтр Лапласа.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный локальный фильтр Лапласа.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный локальный фильтр Лапласа.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.llfilter(System.Double[0:,0:],System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Local laplacian filter.
            </summary>
            <param name="input">Input data</param>
            <param name="sigma">Sigma</param>
            <param name="factor">Factor</param>
            <param name="n">Number of steps</param>
            <param name="levels">Levels</param>
            <returns>Output data</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.llfilter(System.Double[],System.Double,System.Double,System.Int32,System.Int32)">
            <summary>
            Local laplacian filter.
            </summary>
            <param name="input">Input data</param>
            <param name="sigma">Sigma</param>
            <param name="factor">Factor</param>
            <param name="n">Number of steps</param>
            <param name="levels">Levels</param>
            <returns>Output data</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Rec(System.Double,System.Double,System.Double)">
            <summary>
            Reconstruct function.
            </summary>
            <param name="x">Argument</param>
            <param name="i">Increment</param>
            <param name="step">Step</param>
            <returns>Function</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Rec(System.Double,System.Double,System.Int32)">
            <summary>
            Reconstruct function.
            </summary>
            <param name="i">Increment</param>
            <param name="step">Step</param>
            <param name="length">Length of table</param>
            <returns>Table</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Rem(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Remapping function.
            </summary>
            <param name="x">Argument</param>
            <param name="sigma">Sigma</param>
            <param name="factor">Factor</param>
            <param name="i">Increment</param>
            <returns>Function</returns>
        </member>
        <member name="M:UMapx.Transform.LocalLaplacianFilter.Rem(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Remapping function.
            </summary>
            <param name="sigma">Sigma</param>
            <param name="factor">Factor</param>
            <param name="i">Increment</param>
            <param name="length">Length of table</param>
            <returns>Table</returns>
        </member>
        <member name="P:UMapx.Transform.LocalLaplacianFilter.Sigma">
            <summary>
            Получает или задает значение σ-параметра.
            </summary>
        </member>
        <member name="P:UMapx.Transform.LocalLaplacianFilter.Factor">
            <summary>
            Получает или задает значение множителя.
            </summary>
        </member>
        <member name="P:UMapx.Transform.LocalLaplacianFilter.N">
            <summary>
            Получает или задает количество отсчетов.
            </summary>
        </member>
        <member name="P:UMapx.Transform.LocalLaplacianFilter.Levels">
            <summary>
            Получает или задает количество уровней.
            </summary>
        </member>
        <member name="T:UMapx.Core.Activation">
            <summary>
            Используется для работы с активационными функциями.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Activation_function
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Core.Activation.Bernoulli(System.Double)">
            <summary>
            Возвращает значение функции Бернулли.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Binary(System.Double)">
            <summary>
            Возвращает значение бинарной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Logistic(System.Double)">
            <summary>
            Возвращает значение логистической функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Tanh(System.Double)">
            <summary>
            Возвращает значение функции гиперболического тангенса.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Softsign(System.Double)">
            <summary>
            Возвращает значение "Softsign" функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.ReLU(System.Double)">
            <summary>
            Возвращает значение функции выпрямленной линейной единицы.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Softplus(System.Double)">
            <summary>
            Возвращает значение "Softplus" функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Bent(System.Double)">
            <summary>
            Возвращает значение согнутой функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Gaussian(System.Double)">
            <summary>
            Возвращает значение функции Гаусса.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Activation.Sinc(System.Double)">
            <summary>
            Возвращает значение функции математического кардинального синуса.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Core.Special">
            <summary>
            Используется для реализации специальных математических функций.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Special_functions
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.LogMax">
            <summary>
            Максимальный логарифм.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.LogMin">
            <summary>
            Минимальный логарифм.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.sqrtPI">
            <summary>
            Квадратный корень из π.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.GammaMax">
            <summary>
            Максимальное значение Г-функции.
            </summary>
        </member>
        <member name="M:UMapx.Core.Special.Ci(System.Double)">
            <summary>
            Возвращает значение интегрального косинуса.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Si(System.Double)">
            <summary>
            Возвращает значение интегрального синуса.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Ei(System.Double)">
            <summary>
            Возвращает значение интегральной показательной функции.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Li(System.Double)">
            <summary>
            Возвращает значение интегрального логарифма.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Fresnelc(System.Double)">
            <summary>
            Возвращает значение интеграла Френеля C(x).
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Fresnels(System.Double)">
            <summary>
            Возвращает значение интеграла Френеля S(x).
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Struve(System.Double,System.Double)">
            <summary>
            Возвращает значение функции Струве.
            </summary>
            <param name="x">Число</param>
            <param name="a">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Beta(System.Double,System.Double)">
            <summary>
            Возвращает значение бета-функции: B(a, b) = Г(a) * Г(b) / Г(ab).
            </summary>
            <param name="a">Число</param>
            <param name="b">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Beta(System.Int32,System.Int32)">
            <summary>
            Возвращает значение бета-функции B(m, n) = (m - 1)! * (n - 1)! / (m + n - 1)!.
            </summary>
            <param name="m">Целое число</param>
            <param name="n">Целое число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Beta(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение неполной бета-функции: Bx(a, b).
            </summary>
            <param name="a">Число</param>
            <param name="b">Число</param>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.BetaDerivative(System.Double,System.Double)">
            <summary>
            Возвращает значение производной бета-функции: B'(a, b).
            </summary>
            <param name="a">Число</param>
            <param name="b">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.BetaIncomplete(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение регуляризованной неполной бета-функции Ix(a, b).
            </summary>
            <param name="a">Число</param>
            <param name="b">Число</param>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Incbcf(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Special.Incbd(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Special.Series(System.Double,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="a"></param>
            <param name="b"></param>
            <param name="x"></param>
            <returns></returns>
        </member>
        <member name="F:UMapx.Core.Special.Px">
            <summary>
            Левые коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.Qx">
            <summary>
            Правые коэффициенты.
            </summary>
        </member>
        <member name="M:UMapx.Core.Special.Gamma(System.Double)">
            <summary>
            Возвращает значение Гамма-функции Эйлера: Г(z).
            </summary>
            <param name="z">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaLog(System.Double)">
            <summary>
            Возвращает значение натурального логарифма Гамма-функции Эйлера: ln[Г(z)].
            </summary>
            <param name="z">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.DiGamma(System.Double)">
            <summary>
            Возвращает значение Дигамма-функции: ψ(z).
            </summary>
            <param name="z">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.TriGamma(System.Double)">
            <summary>
            Возвращает значение Тригамма-функции: ψ1(z).
            </summary>
            <param name="z">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gamma(System.Double,System.UInt32)">
            <summary>
            Возвращает значение степени Гамма-функции Эйлера: Г(z)^p.
            </summary>
            <param name="z">Число</param>
            <param name="p">Степень</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaQ(System.Double,System.Double)">
            <summary>
            Возвращает значение неполной верхней Гамма-функции: Q(s, x) = Γ(s, x) / Γ(s).
            </summary>
            <param name="s">Число</param>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaP(System.Double,System.Double)">
            <summary>
            Возвращает значение неполной нижней Гамма-функции: P(s, x) = γ(s, x) / Γ(s).
            </summary>
            <param name="s">Число</param>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaIncomplete(System.Double,System.Double)">
            <summary>
            Возвращает значение неполной Гамма-функции: γ(s, x).
            </summary>
            <param name="s">Число</param>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaIncomplete(System.Double,System.Double,System.Boolean)">
            <summary>
            Возвращает значение неполной Гамма-функции: γ(s, x).
            </summary>
            <param name="s">Число</param>
            <param name="x">Число</param>
            <param name="complemented">Дополнительная функция или нет</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Polynomials(System.Double,System.Double[],System.Int32)">
            <summary>
            Возвращает значение полиномиала.
            </summary>
            <param name="x">Число</param>
            <param name="coef">Коэффициенты</param>
            <param name="N">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Stirling(System.Double)">
            <summary>
            Возвращает значение логарифма Гамма-функции Эйлера, аппроксимированной по методу Стирлинга.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.GammaLogLanczos(System.Double)">
            <summary>
            Возвращает значение логарифма Гамма-функции Эйлера, аппроксимированной по методу Ланцоша.
            </summary>
            <param name="z">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erf(System.Double)">
            <summary>
            Возвращает значение интеграла Лапласа (функция ошибок).
            Значения интеграла варьируются в пределах [-1, 1].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erf(System.Double,System.Boolean)">
            <summary>
            Возвращает значение интеграла Лапласа (функция ошибок).
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <param name="inverse">Обратная функция или нет</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erfi(System.Double)">
            <summary>
            Возвращает значение мнимой функции ошибок.
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erf(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение интеграла Лапласа (функция ошибок).
            Значения интеграла варьируются в пределах [-1, 1].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <param name="a">Нижняя граница отрезка нормировки</param>
            <param name="b">Верхняя граница отрезка нормировки</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erf(System.Double,UMapx.Core.RangeDouble)">
            <summary>
            Возвращает значение интеграла Лапласа (функция ошибок).
            Значения интеграла варьируются в пределах [-1, 1].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <param name="range">Пара дробных чисел, представляющих отрезок</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erfc(System.Double)">
            <summary>
            Возвращает значение интеграла Лапласа (дополнительная функция ошибок).
            Значения интеграла варьируются в пределах [0, 2].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erfc(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение интеграла Лапласа (дополнительная функция ошибок).
            Значения интеграла варьируются в пределах [0, 2].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <param name="a">Нижняя граница отрезка нормировки</param>
            <param name="b">Верхняя граница отрезка нормировки</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erfc(System.Double,UMapx.Core.RangeDouble)">
            <summary>
            Возвращает значение интеграла Лапласа (дополнительная функция ошибок).
            Значения интеграла варьируются в пределах [0, 2].
            </summary>
            <param name="x">Значение верхнего предела интеграла</param>
            <param name="range">Пара дробных чисел, представляющих отрезок</param>
            <returns>Вероятность того, что случайная величина примет значение, принадлежащее заданному интервалу</returns>
        </member>
        <member name="M:UMapx.Core.Special.Q(System.Double)">
            <summary>
            Возвращает значение Q-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Qinv(System.Double)">
            <summary>
            Возвращает значение обратной Q-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.J0(System.Double)">
            <summary>
            Возвращает значение функции Бесселя нулевого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.J(System.Double)">
            <summary>
            Возвращает значение функции Бесселя первого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.J(System.Double,System.Int32)">
            <summary>
            Возвращает значение функции Бесселя заданного порядка.
            </summary>
            <param name="x">Число</param>
            <param name="a">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Y0(System.Double)">
            <summary>
            Возвращает значение функции Неймана нулевого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Y(System.Double)">
            <summary>
            Возвращает значение функции Неймана первого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Y(System.Double,System.Int32)">
            <summary>
            Возвращает значение функции Неймана заданного порядка.
            </summary>
            <param name="x">Число</param>
            <param name="n">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.I0(System.Double)">
            <summary>
            Возвращает значение гиперболической функции Бесселя нулевого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.I(System.Double)">
            <summary>
            Возвращает значение гиперболической функции Бесселя первого порядка.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.I(System.Double,System.Int32)">
            <summary>
            Возвращает значение гиперболической функции Бесселя заданного порядка.
            </summary>
            <param name="x">Число</param>
            <param name="n">Порядок (>=0)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Owen(System.Double,System.Double)">
            <summary>
            Возвращает значение T-функции Оуэна.
            </summary>
            <param name="h">Первый аргумент</param>
            <param name="a">Второй аргумент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.owenhaah(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение T-функции Оуэна.
            </summary>
            <param name="h">Первый аргумент</param>
            <param name="a">Второй аргумент</param>
            <param name="ah">h * a</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="F:UMapx.Core.Special.arange">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.coefT">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.hrange">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.meth">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.ord">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.pts">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.select">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.wts">
            <summary>
            Коэффициенты.
            </summary>
        </member>
        <member name="M:UMapx.Core.Special.Zeta(System.Double)">
            <summary>
            Возвращает значение ζ-функции Римана для вещественных чисел, при s >= 1.
            </summary>
            <remarks>
            В данном методе использется не сама функция Римана, а ее математическое приближение.
            </remarks>
            <param name="s">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Agd(System.Double)">
            <summary>
            Возвращает значение обратной функции Гудермана.
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gd(System.Double)">
            <summary>
            Возвращает значение функции Гудермана.
            </summary>
            <param name="x">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Cas(System.Double)">
            <summary>
            Возвращает значение функции Cas(x).
            </summary>
            <param name="theta">Тетта</param>
            <returns>Число двойной точности</returns>
        </member>
        <member name="M:UMapx.Core.Special.Sinc(System.Double)">
            <summary>
            Возвращает значение функции нормированного кардинального синуса: f(x) = sin(πx) / (πx).
            </summary>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Sinc(System.Double,System.Double)">
            <summary>
            Возвращает значение функции кардинального синуса с параметром: f(x, a) = sin(ax) / (ax).
            </summary>
            <param name="x">Число</param>
            <param name="a">Параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Binomial(System.Double,System.Double)">
            <summary>
            Возвращает значение биномиальных коэффициентов: C(n, k) = n! / k! / (n-k)! для k > 0.
            </summary>
            <param name="n">Число</param>
            <param name="k">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.LogBinomial(System.Double,System.Double)">
            <summary>
            Возвращает значение натурального логарифма биномиальных коэффициентов: log(C(n, k)) = log(n!) - log(k!) - log(n-k!).
            </summary>
            <param name="n">Число</param>
            <param name="k">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.LogFactorial(System.Double)">
            <summary>
            Возвращает натуральный логарифм факториала числа log(n!).
            </summary>
            <param name="n">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Factorial(System.Double)">
            <summary>
            Возвращает факториал числа.
            </summary>
            <param name="n">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.FactorialDown(System.Double,System.Double)">
            <summary>
            Возвращает убывающий факториал числа.
            </summary>
            <param name="n">Число</param>
            <param name="k">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.FactorialUp(System.Double,System.Double)">
            <summary>
            Возвращает возрастающий факториал числа (символ Погхаммера).
            </summary>
            <param name="n">Число</param>
            <param name="k">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Fibonacci(System.Int32)">
            <summary>
            Возвращает значение числа Фибоначчи.
            </summary>
            <param name="n">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Special.Lucas(System.Int32)">
            <summary>
            Возвращает значение числа Лукаса.
            </summary>
            <param name="n">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Special.Bernoulli(System.Int32)">
            <summary>
            Возвращает число Бернулли.
            </summary>
            <param name="n">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Bernoulli(System.Int32,System.Double)">
            <summary>
            Возвращает значение многочлена Бернулли.
            </summary>
            <param name="n">Порядок</param>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Euler(System.Int32)">
            <summary>
            Возвращает число Эйлера.
            </summary>
            <param name="n">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Euler(System.Int32,System.Double)">
            <summary>
            Возвращает значение многочлена Эйлера.
            </summary>
            <param name="n">Порядок</param>
            <param name="x">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.H(System.Int32)">
            <summary>
            Возвращает гармоническое число.
            </summary>
            <param name="n">Аргумент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.H(System.Int32,System.Double)">
            <summary>
            Возвращает гармоническое число.
            </summary>
            <param name="n">Порядок</param>
            <param name="m">Аргумент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.ChebyshevT(System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Чебышева первого рода.
            </summary>
            <param name="x">Носитель</param>
            <param name="n">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.ChebyshevU(System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Чебышева второго рода.
            </summary>
            <param name="x">Носитель</param>
            <param name="n">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Abel(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Абеля.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Степень многочлена</param>
            <param name="n">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Laguerre(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Лагерра.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Степень многочлена</param>
            <param name="k">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Legendre(System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Лежандра первого рода.
            </summary>
            <param name="x">Носитель</param>
            <param name="m">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gegenbauer(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает значение многочлена Гегенбауэра.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Степень многочлена</param>
            <param name="n">Порядок многочлена</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Mahler(System.Double,System.Double)">
            <summary>
            Возвращает значение полинома Малера.
            </summary>
            <param name="x">Число</param>
            <param name="t">Параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gompertz(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение функции Гомпертца.
            </summary>
            <param name="t">Носитель</param>
            <param name="a">Верхняя асимптота</param>
            <param name="b">Параметр роста</param>
            <param name="c">Темп роста</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Heaviside(System.Double,System.Double)">
            <summary>
            Возвращает значение дельта-функции Хевисайда.
            </summary>
            <param name="x">Носитель</param>
            <param name="k">Коэффициент сглаживания</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Logistic(System.Double,System.Double,System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение логистической функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Нижняя асимптота</param>
            <param name="k">Верхняя асимптота</param>
            <param name="b">Темп роста</param>
            <param name="v">Аффект</param>
            <param name="q">Центральный момент</param>
            <param name="c">Смещение</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Logistic(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение логистической функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Нижняя асимптота</param>
            <param name="k">Верхняя асимптота</param>
            <param name="b">Темп роста</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Logistic(System.Double)">
            <summary>
            Возвращает значение логистической функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Dirac(System.Double,System.Double)">
            <summary>
            Возвращает значение дельта-функции Дирака.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Коэффициент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Dawson(System.Double,System.Boolean)">
            <summary>
            Возвращает значение D-/D+ функции Доусона.
            </summary>
            <param name="x">Носитель</param>
            <param name="positive">D- или D+</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Hypergeom(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение гипергеометрической функции.
            <remarks>
            Данная версия гипергеометрической функции встречается в русскоязычной литературе и обозначается 
            как F(a,b,c,z).
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hypergeometric_function
            </remarks>
            </summary>
            <param name="a">Параметр</param>
            <param name="b">Параметр</param>
            <param name="c">Параметр</param>
            <param name="z">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Hypergeom(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает значение гипергеометрической функции.
            <remarks>
            Гипергеометрическая функция может быть использована в нескольких вариациях:
            F(a,b,z); F(a,~,z); F(~,b,z); F(~,~,z).
            Вместо знака "~" следует использовать значение double.NaN.
            Более подробную информацию можно найти на сайте:
            https://www.mathworks.com/help/symbolic/hypergeom.html#bt1nkmw-2
            </remarks>
            </summary>
            <param name="a">Параметр</param>
            <param name="b">Параметр</param>
            <param name="z">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gerf(System.Double,System.Int32)">
            <summary>
            Возвращает значение генерализированной функции ошибок.
            </summary>
            <param name="x">Носитель (0, +inf)</param>
            <param name="n">Порядок [0, +inf)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Gerf(System.Double)">
            <summary>
            Возвращает значение генерализированной функции ошибок.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Rademacher(System.Double,System.Int32)">
            <summary>
            Возвращает значение функции Радамехера.
            </summary>
            <param name="t">Носитель [0, 1]</param>
            <param name="n">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erlang(System.Double,System.Int32,System.Double)">
            <summary>
            Возвращает значение C-функции Эрланга.
            </summary>
            <param name="y">Первый параметр</param>
            <param name="v">Второй параметр</param>
            <param name="t">Временной параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Erlang(System.Double,System.Int32)">
            <summary>
            Возвращает значение B-функции Эрланга.
            </summary>
            <param name="y">Первый параметр</param>
            <param name="v">Второй параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.LambertW(System.Double,System.Boolean)">
            <summary>
            Возвращает значение W-функции Ламберта.
            </summary>
            <param name="x">Носитель [-1/e,+inf)</param>
            <param name="branch">Ветвь функции</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Ssqrt(System.Double,System.Boolean)">
            <summary>
            Возвращает значение квадратного супер-корня.
            </summary>
            <param name="x">Носитель [1,+inf)</param>
            <param name="branch">Ветвь функции</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Special.Minkowski(System.Double)">
            <summary>
            Возвращает значение функции Минковского.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="F:UMapx.Core.Special.A027641">
            <summary>
            Числа Бернулли четного порядка от 2 до 258.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.A000142">
            <summary>
            Последовательность значений факториалов от 0 до 170.
            </summary>
        </member>
        <member name="F:UMapx.Core.Special.A122045">
            <summary>
            Числа Эйлера четного порядка от 2 до 186.
            </summary>
        </member>
        <member name="T:UMapx.Core.Kernel">
            <summary>
            Используется для работы с кернфункциями.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Kernel_(statistics)
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Core.Kernel.Bicubic(System.Double)">
            <summary>
            Возвращает значение бикубической функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Gaussian(System.Double,System.Double)">
            <summary>
            Возвращает значение функции гауссиана.
            </summary>
            <param name="x">Носитель</param>
            <param name="sigma">Среднеквадратическое отклонение (0, +inf)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Gaussian(System.Double)">
            <summary>
            Возвращает значение функции гауссиана σ = 1.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Lanczos(System.Double,System.Double)">
            <summary>
            Возвращает значение функции Ланцоша.
            </summary>
            <param name="x">Носитель</param>
            <param name="a">Параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Lanczos(System.Double)">
            <summary>
            Возвращает значение функции Ланцоша, при a = 1.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Uniform(System.Double)">
            <summary>
            Возвращает значение равномерной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Triangular(System.Double)">
            <summary>
            Возвращает значение треугольной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Trapezoid(System.Double)">
            <summary>
            Возвращает значение трапециевидная функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Epanechnikov(System.Double)">
            <summary>
            Возвращает значение функции Епанечникова.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Quartic(System.Double)">
            <summary>
            Возвращает значение Q-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Triweight(System.Double)">
            <summary>
            Возвращает значение T-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Tricube(System.Double)">
            <summary>
            Возвращает значение трикубической функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Cosine(System.Double)">
            <summary>
            Возвращает значение косинусной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Logistic(System.Double)">
            <summary>
            Возвращает значение логистической функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Sigmoid(System.Double)">
            <summary>
            Возвращает значение сигмоидальной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Kernel.Silverman(System.Double)">
            <summary>
            Возвращает значение функции Сильвермана.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Core.IDouble">
            <summary>
            Определяет делегат непрерывной функции, зависящей от одного аргумента.
            </summary>
            <param name="x">Аргумент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Core.IComplex">
            <summary>
            Определяет делегат непрерывной функции, зависящей от одного аргумента.
            </summary>
            <param name="x">Аргумент</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="T:UMapx.Core.IDoubleMesh">
            <summary>
            Определяет делегат непрерывной функции, зависящей от двух аргументов.
            </summary>
            <param name="x">Первый аргумент</param>
            <param name="y">Второй аргумент</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Core.IComplexMesh">
            <summary>
            Определяет делегат непрерывной функции, зависящей от двух аргументов.
            </summary>
            <param name="x">Первый аргумент</param>
            <param name="y">Второй аргумент</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="T:UMapx.Colorspace.LAB">
            <summary>
            Определяет цветовую модель CIE Lab.
            </summary>
        </member>
        <member name="T:UMapx.Colorspace.IColorSpace">
            <summary>
            Определяет общий интерфейс цветовых пространств.
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.IColorSpace.ToRGB">
            <summary>
            Возвращает цветовую модель RGB.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.LAB.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры CIE Lab.
            </summary>
            <param name="l">Компонента L [0, 100]</param>
            <param name="a">Компонента a [-127, 127]</param>
            <param name="b">компонента b [-127, 127]</param>
        </member>
        <member name="M:UMapx.Colorspace.LAB.op_Equality(UMapx.Colorspace.LAB,UMapx.Colorspace.LAB)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">CIE Lab структура</param>
            <param name="item2">CIE Lab структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.op_Inequality(UMapx.Colorspace.LAB,UMapx.Colorspace.LAB)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">CIE Lab структура</param>
            <param name="item2">CIE Lab структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.LAB.ToXYZ(System.Double,System.Double,System.Double)">
            <summary>
            Преобразует цветовую модель CIE Lab в модель CIE XYZ.
            </summary>
            <param name="l">Компонента L</param>
            <param name="a">Компонента a</param>
            <param name="b">Компонента b</param>
            <returns>CIE XYZ структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.ToXYZ(UMapx.Colorspace.LAB)">
            <summary>
            Преобразует цветовую модель CIE Lab в модель CIE XYZ.
            </summary>
            <param name="lab">CIE Lab структура</param>
            <returns>CIE XYZ структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.ToLAB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель CIE Lab.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>CIE Lab структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.LAB.ToLAB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель CIE Lab.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>CIE Lab структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.LAB.L">
            <summary>
            Определяет составляющую модели [0, 100].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.LAB.A">
            <summary>
            Определяет составляющую модели [-127, 127].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.LAB.B">
            <summary>
            Определяет составляющую модели [-127, 127].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.LAB.ToRGB">
            <summary>
            Преобразует цветовую модель CIE Lab в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.XYZ">
            <summary>
            Определяет цветовую модель CIE XYZ.
            </summary>
        </member>
        <member name="F:UMapx.Colorspace.XYZ.White">
            <summary>
            Возвращает белый цвет.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры CIE XYZ.
            </summary>
            <param name="x">Компонента X [0, 1]</param>
            <param name="y">Компонента Y [0, 1]</param>
            <param name="z">компонента Z [0, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.op_Equality(UMapx.Colorspace.XYZ,UMapx.Colorspace.XYZ)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">CIE XYZ структура</param>
            <param name="item2">CIE XYZ структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.op_Inequality(UMapx.Colorspace.XYZ,UMapx.Colorspace.XYZ)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">CIE XYZ структура</param>
            <param name="item2">CIE XYZ структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.ToLAB(System.Double,System.Double,System.Double)">
            <summary>
            Преобразует цветовую модель CIE XYZ в модель CIE Lab.
            </summary>
            <param name="x">Компонента X</param>
            <param name="y">Компонента Y</param>
            <param name="z">Компонента Z</param>
            <returns>CIE Lab структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.ToLAB(UMapx.Colorspace.XYZ)">
            <summary>
            Преобразует цветовую модель CIE XYZ в модель CIE Lab.
            </summary>
            <param name="xyz">CIE XYZ структура</param>
            <returns>CIE Lab структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель CIE XYZ.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>CIE XYZ структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель CIE XYZ.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>CIE XYZ структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.XYZ.Fxyz(System.Double)">
            <summary>
            Трансформационная функция между моделями CIE XYZ и CIE Lab.
            </summary>
            <param name="t">Параметр t</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Colorspace.XYZ.X">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.XYZ.Y">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.XYZ.Z">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.XYZ.ToRGB">
            <summary>
            Преобразует цветовую модель CIE XYZ в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.CMYK">
            <summary>
            Определяет цветовую модель СMYK.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры CMYK.
            </summary>
            <param name="c">Голубой [0, 1]</param>
            <param name="m">Пурпурный [0, 1]</param>
            <param name="y">Желтый [0, 1]</param>
            <param name="k">Черный [0, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.op_Equality(UMapx.Colorspace.CMYK,UMapx.Colorspace.CMYK)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">CMYK структура</param>
            <param name="item2">CMYK структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.op_Inequality(UMapx.Colorspace.CMYK,UMapx.Colorspace.CMYK)">
            <summary>
            Проверяет неравенство два объекта класса.
            </summary>
            <param name="item1">CMYK структура</param>
            <param name="item2">CMYK структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель CMYK.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>CMYK структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.CMYK.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель HSB.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>CMYK структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.CMYK.Cyan">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.CMYK.Magenta">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.CMYK.Yellow">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.CMYK.Keycolor">
            <summary>
            Определяет составляющую модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.CMYK.ToRGB">
            <summary>
            Преобразует цветовую модель CMYK в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.HSB">
            <summary>
            Определяет цветовую модель HSB.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.HSB.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры HSB.
            </summary>
            <param name="h">Оттенок [0, 359]</param>
            <param name="s">Насыщенность [0, 1]</param>
            <param name="b">Яркость [0, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.HSB.op_Equality(UMapx.Colorspace.HSB,UMapx.Colorspace.HSB)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">HSB структура</param>
            <param name="item2">HSB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.op_Inequality(UMapx.Colorspace.HSB,UMapx.Colorspace.HSB)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">HSB структура</param>
            <param name="item2">HSB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.HSB.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель HSB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>HSB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSB.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель HSB.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>HSB структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.HSB.Hue">
            <summary>
            Определяет составляющую цветовой модели [0, 359].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSB.Saturation">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSB.Brightness">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSB.ToRGB">
            <summary>
            Преобразует цветовую модель HSB в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.HSL">
            <summary>
            Определяет цветовую модель HSL.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.HSL.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры HSL.
            </summary>
            <param name="h">Оттенок [0, 360]</param>
            <param name="s">Насыщенность [0, 1]</param>
            <param name="l">Световая интенсивность [0, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.HSL.op_Equality(UMapx.Colorspace.HSL,UMapx.Colorspace.HSL)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">HSL структура</param>
            <param name="item2">HSL структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.op_Inequality(UMapx.Colorspace.HSL,UMapx.Colorspace.HSL)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">HSL структура</param>
            <param name="item2">HSL структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.HSL.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель HSL.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>HSL структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.HSL.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель HSL.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>HSL структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.HSL.Hue">
            <summary>
            Определяет составляющую цветовой модели [0, 360].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSL.Saturation">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSL.Lightness">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.HSL.ToRGB">
            <summary>
            Преобразует цветовую модель HSL в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.AHSL">
            <summary>
            Определяет цветовую модель AHSL.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры HSL.
            </summary>
            <param name="h">Оттенок [0, 360]</param>
            <param name="s">Насыщенность [0, 255]</param>
            <param name="l">Световая интенсивность [-100, 100]</param>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.op_Equality(UMapx.Colorspace.AHSL,UMapx.Colorspace.AHSL)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">HSL структура</param>
            <param name="item2">HSL структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.op_Inequality(UMapx.Colorspace.AHSL,UMapx.Colorspace.AHSL)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">HSL структура</param>
            <param name="item2">HSL структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель AHSL.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>HSL структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.AHSL.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель AHSL.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>HSL структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.AHSL.Hue">
            <summary>
            Определяет составляющую цветовой модели [0, 359].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.AHSL.Saturation">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.AHSL.Lightness">
            <summary>
            Определяет составляющую цветовой модели [-100, 100].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.AHSL.ToRGB">
            <summary>
            Преобразует цветовую модель AHSL в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.RGB">
            <summary>
            Определяет цветовую модель RGB.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.RGB.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Создает экземпляр структуры RGB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
        </member>
        <member name="M:UMapx.Colorspace.RGB.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры RGB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
        </member>
        <member name="M:UMapx.Colorspace.RGB.op_Equality(UMapx.Colorspace.RGB,UMapx.Colorspace.RGB)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">RGB структура</param>
            <param name="item2">RGB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.op_Inequality(UMapx.Colorspace.RGB,UMapx.Colorspace.RGB)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">RGB структура</param>
            <param name="item2">RGB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.op_Implicit(UMapx.Colorspace.RGB)~System.Drawing.Color">
            <summary>
            Определяет явное преобразование RGB в System.Drawing.Color.
            </summary>
            <param name="value">RGB структура</param>
            <returns>Цвет в терминах красного, зеленого и синего</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.op_Implicit(System.Drawing.Color)~UMapx.Colorspace.RGB">
            <summary>
            Определяет явное преобразование RGB в System.Drawing.Color.
            </summary>
            <param name="value">Цвет в терминах красного, зеленого и синего</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.GetIntFromHex(System.String)">
            <summary>
            Gets the int equivalent for a hexadecimal value.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.RGB.FromHEX(System.String)">
            <summary>
            Преобразует цветовую модель HEX в модель RGB.
            </summary>
            <param name="hexColor">HEX цвет</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.ToHEX(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель HEX.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.ToHEX(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель HEX.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Average(System.Int32,System.Int32,System.Int32)">
            <summary>
            Вычисляет среднее значение яркости.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Average(System.Double,System.Double,System.Double)">
            <summary>
            Вычисляет среднее значение яркости.
            </summary>
            <param name="red">Красный</param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Average(UMapx.Colorspace.RGB)">
            <summary>
            Вычисляет среднее значение яркости.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Average(UMapx.Colorspace.sRGB)">
            <summary>
            Вычисляет среднее значение яркости.
            </summary>
            <param name="rgb">sRGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.PAL(System.Int32,System.Int32,System.Int32)">
            <summary>
            Вычисляет значение яркости в стандарте (PAL/NTC).
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.PAL(System.Double,System.Double,System.Double)">
            <summary>
            Вычисляет значение яркости в стандарте (PAL/NTC).
            </summary>
            <param name="red">Красный</param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.PAL(UMapx.Colorspace.RGB)">
            <summary>
            Вычисляет значение яркости в стандарте (PAL/NTC).
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.PAL(UMapx.Colorspace.sRGB)">
            <summary>
            Вычисляет значение яркости в стандарте (PAL/NTC).
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.HDTV(System.Int32,System.Int32,System.Int32)">
            <summary>
            Вычисляет значение яркости в стандарте HDTV.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.HDTV(System.Double,System.Double,System.Double)">
            <summary>
            Вычисляет значение яркости в стандарте HDTV.
            </summary>
            <param name="red">Красный</param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.HDTV(UMapx.Colorspace.RGB)">
            <summary>
            Вычисляет значение яркости в стандарте HDTV.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.HDTV(UMapx.Colorspace.sRGB)">
            <summary>
            Вычисляет значение яркости в стандарте HDTV.
            </summary>
            <param name="rgb">sRGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.RYY(System.Int32,System.Int32,System.Int32)">
            <summary>
            Вычисляет значение яркости в стандарте RYY.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.RYY(System.Double,System.Double,System.Double)">
            <summary>
            Вычисляет значение яркости в стандарте RYY.
            </summary>
            <param name="red">Красный</param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.RYY(UMapx.Colorspace.RGB)">
            <summary>
            Вычисляет значение яркости в стандарте RYY.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.RYY(UMapx.Colorspace.sRGB)">
            <summary>
            Вычисляет значение яркости в стандарте RYY.
            </summary>
            <param name="rgb">sRGB структура</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Temp2RGB(System.Double)">
            <summary>
            Преобразует температуру T (в кельвинах) в цвет в терминах красного, зеленого и синего каналов.
            </summary>
            <param name="temperature">Температура [1000К, 10000К]</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Saturation(System.Int32,System.Int32,System.Int32,System.Double)">
            <summary>
            Корректирует насыщенность цвета.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <param name="s">Насыщенность</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Saturation(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Корректирует насыщенность цвета.
            </summary>
            <param name="red">Красный </param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <param name="s">Насыщенность</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Saturation(UMapx.Colorspace.RGB,System.Double)">
            <summary>
            Корректирует насыщенность цвета.
            </summary>
            <param name="rgb">RGB структура</param>
            <param name="s">Насыщенность</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.Saturation(UMapx.Colorspace.sRGB,System.Double)">
            <summary>
            Корректирует насыщенность цвета.
            </summary>
            <param name="rgb">sRGB структура</param>
            <param name="s">Насыщенность</param>
            <returns>RGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RGB.SchemeFromHue(System.Double,System.UInt32)">
            <summary>
            Генерирует цветовую схему.
            </summary>
            <param name="hue">Оттенок [0, 360]</param>
            <param name="length">Размер схемы</param>
            <returns>Цветовая схема</returns>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Red">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Green">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Blue">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.ToRGB">
            <summary>
            Возвращает цветовую модель RGB.
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Cool">
            <summary>
            Возвращает цветовую схему "Холодный".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Hot">
            <summary>
            Возвращает цветовую схему "Теплый".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Copper">
            <summary>
            Возвращает цветовую схему "Медь".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.HSB">
            <summary>
            Возвращает цветовую схему "HSB".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Jet">
            <summary>
            Возвращает цветовую схему "Jet".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Pink">
            <summary>
            Возвращает цветовую схему "Розовый".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Autumn">
            <summary>
            Возвращает цветовую схему "Осень".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Spring">
            <summary>
            Возвращает цветовую схему "Весна".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Summer">
            <summary>
            Возвращает цветовую схему "Лето".
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RGB.Winter">
            <summary>
            Возвращает цветовую схему "Зима".
            </summary>
        </member>
        <member name="T:UMapx.Colorspace.RYB">
            <summary>
            Определяет цветовую модель RYB.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.RYB.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Создает экземпляр структуры RYB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="yellow">Желтый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
        </member>
        <member name="M:UMapx.Colorspace.RYB.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры RYB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="yellow">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
        </member>
        <member name="M:UMapx.Colorspace.RYB.op_Equality(UMapx.Colorspace.RYB,UMapx.Colorspace.RYB)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">RYB структура</param>
            <param name="item2">RYB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.op_Inequality(UMapx.Colorspace.RYB,UMapx.Colorspace.RYB)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">RYB структура</param>
            <param name="item2">RYB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.RYB.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель RYB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>RYB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.RYB.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель RYB.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>RYB структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.RYB.Red">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RYB.Yellow">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RYB.Blue">
            <summary>
            Определяет составляющую цветовой модели [0, 255].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.RYB.ToRGB">
            <summary>
            Преобразует цветовую модель RYB в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.sRGB">
            <summary>
            Определяет цветовую модель sRGB.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры sRGB.
            </summary>
            <param name="red">Красный [0, 1]</param>
            <param name="green">Зеленый [0, 1]</param>
            <param name="blue">Синий [0, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.op_Equality(UMapx.Colorspace.sRGB,UMapx.Colorspace.sRGB)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">sRGB структура</param>
            <param name="item2">sRGB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.op_Inequality(UMapx.Colorspace.sRGB,UMapx.Colorspace.sRGB)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">sRGB структура</param>
            <param name="item2">sRGB структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель sRGB.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>sRGB структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.sRGB.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель sRGB.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>sRGB структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.sRGB.Red">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.sRGB.Green">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.sRGB.Blue">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.sRGB.ToRGB">
            <summary>
            Преобразует цветовую модель sRGB в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YUV">
            <summary>
            Определяет цветовую модель YUV.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YUV.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YUV.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="u">U цветоразностная составляющая [-0.436, 0.436]</param>
            <param name="v">V цветоразностная составляющая [-0.614, 0.614]</param>
        </member>
        <member name="M:UMapx.Colorspace.YUV.op_Equality(UMapx.Colorspace.YUV,UMapx.Colorspace.YUV)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YUV структура</param>
            <param name="item2">YUV структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.op_Inequality(UMapx.Colorspace.YUV,UMapx.Colorspace.YUV)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YUV структура</param>
            <param name="item2">YUV структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YUV.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YUV.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YUV структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YUV.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YUV.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YUV структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YUV.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YUV.U">
            <summary>
            Определяет составляющую цветовой модели [-0.436, 0.436].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YUV.V">
            <summary>
            Определяет составляющую цветовой модели [-0.614, 0.614].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YUV.ToRGB">
            <summary>
            Преобразует цветовую модель YUV в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YIQ">
            <summary>
            Определяет цветовую модель YIQ.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YIQ.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="i">I цветоразностная составляющая [-0.5957, 0.5957]</param>
            <param name="q">Q цветоразностная составляющая [-0.5226, 0.5226]</param>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.op_Equality(UMapx.Colorspace.YIQ,UMapx.Colorspace.YIQ)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YIQ структура</param>
            <param name="item2">YIQ структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.op_Inequality(UMapx.Colorspace.YIQ,UMapx.Colorspace.YIQ)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YIQ структура</param>
            <param name="item2">YIQ структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YIQ.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YIQ структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YIQ.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YIQ.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YIQ структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YIQ.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YIQ.I">
            <summary>
            Определяет составляющую цветовой модели [-0.5957, 0.5957].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YIQ.Q">
            <summary>
            Определяет составляющую цветовой модели [-0.5226, 0.5226].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YIQ.ToRGB">
            <summary>
            Преобразует цветовую модель YIQ в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YCbCr">
            <summary>
            Определяет цветовую модель YCbCr.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YCbCr.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="cb">Cb цветоразностная составляющая [-1, 1]</param>
            <param name="cr">Cr цветоразностная составляющая [-1, 1]</param>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.op_Equality(UMapx.Colorspace.YCbCr,UMapx.Colorspace.YCbCr)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YCbCr структура</param>
            <param name="item2">YCbCr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.op_Inequality(UMapx.Colorspace.YCbCr,UMapx.Colorspace.YCbCr)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YCbCr структура</param>
            <param name="item2">YCbCr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YCbCr.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YCbCr структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCbCr.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YCbCr.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YCbCr структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YCbCr.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCbCr.Cb">
            <summary>
            Определяет составляющую цветовой модели [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCbCr.Cr">
            <summary>
            Определяет составляющую цветовой модели [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCbCr.ToRGB">
            <summary>
            Преобразует цветовую модель YCbCr в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YDbDr">
            <summary>
            Определяет цветовую модель YDbDr.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YDbDr.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="db">Db цветоразностная составляющая [-1.333, 1.333]</param>
            <param name="dr">Dr цветоразностная составляющая [-1.333, 1.333]</param>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.op_Equality(UMapx.Colorspace.YDbDr,UMapx.Colorspace.YDbDr)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YDbDr структура</param>
            <param name="item2">YDbDr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.op_Inequality(UMapx.Colorspace.YDbDr,UMapx.Colorspace.YDbDr)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YDbDr структура</param>
            <param name="item2">YDbDr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YDbDr.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YDbDr структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YDbDr.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YDbDr.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YDbDr структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YDbDr.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YDbDr.Db">
            <summary>
            Определяет составляющую цветовой модели [-1.333, 1.333].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YDbDr.Dr">
            <summary>
            Определяет составляющую цветовой модели [-1.333, 1.333].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YDbDr.ToRGB">
            <summary>
            Преобразует цветовую модель YDbDr в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YCgCo">
            <summary>
            Определяет цветовую модель YCgCo.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YDbDr.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="cg">Cg цветоразностная составляющая [-0.5, 0.5]</param>
            <param name="co">Co цветоразностная составляющая [-0.5, 0.5]</param>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.op_Equality(UMapx.Colorspace.YCgCo,UMapx.Colorspace.YCgCo)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YCgCo структура</param>
            <param name="item2">YCgCo структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.op_Inequality(UMapx.Colorspace.YCgCo,UMapx.Colorspace.YCgCo)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YCgCo структура</param>
            <param name="item2">YCgCo структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YCgCo.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YCgCo структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YCgCo.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YCgCo.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YCgCo структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YCgCo.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCgCo.Cg">
            <summary>
            Определяет составляющую цветовой модели [-0.5, 0.5].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCgCo.Co">
            <summary>
            Определяет составляющую цветовой модели [-0.5, 0.5].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YCgCo.ToRGB">
            <summary>
            Преобразует цветовую модель YCgCo в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.YPbPr">
            <summary>
            Определяет цветовую модель YPbPr.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры YPbPr.
            </summary>
            <param name="y">Y яркостная составляющая [0, 1]</param>
            <param name="pb">Pb цветоразностная составляющая [-0.5, 0.5]</param>
            <param name="pr">Pr цветоразностная составляющая [-0.5, 0.5]</param>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.op_Equality(UMapx.Colorspace.YPbPr,UMapx.Colorspace.YPbPr)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">YPbPr структура</param>
            <param name="item2">YPbPr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.op_Inequality(UMapx.Colorspace.YPbPr,UMapx.Colorspace.YPbPr)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">YPbPr структура</param>
            <param name="item2">YPbPr структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.FromRGB(System.Int32,System.Int32,System.Int32)">
            <summary>
            Преобразует цветовую модель RGB в модель YPbPr.
            </summary>
            <param name="red">Красный [0, 255]</param>
            <param name="green">Зеленый [0, 255]</param>
            <param name="blue">Синий [0, 255]</param>
            <returns>YPbPr структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.YPbPr.FromRGB(UMapx.Colorspace.RGB)">
            <summary>
            Преобразует цветовую модель RGB в модель YPbPr.
            </summary>
            <param name="rgb">RGB структура</param>
            <returns>YPbPr структура</returns>
        </member>
        <member name="P:UMapx.Colorspace.YPbPr.Y">
            <summary>
            Определяет составляющую цветовой модели [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YPbPr.Pb">
            <summary>
            Определяет составляющую цветовой модели [-0.5, 0.5].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YPbPr.Pr">
            <summary>
            Определяет составляющую цветовой модели [-0.5, 0.5].
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.YPbPr.ToRGB">
            <summary>
            Преобразует цветовую модель YPbPr в модель RGB.
            </summary>
            <returns>RGB структура</returns>
        </member>
        <member name="T:UMapx.Colorspace.Unknown">
            <summary>
            Определяет неизвестную цветовую модель.
            Данная цветовая модель может играть роль любого цветового пространства.
            </summary>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Создает экземпляр структуры.
            </summary>
            <param name="x">X составляющая</param>
            <param name="y">Y составляющая</param>
            <param name="z">Z составляющая</param>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Equality(UMapx.Colorspace.Unknown,UMapx.Colorspace.Unknown)">
            <summary>
            Проверяет равенство двух объектов класса.
            </summary>
            <param name="item1">Unknown структура</param>
            <param name="item2">Unknown структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Inequality(UMapx.Colorspace.Unknown,UMapx.Colorspace.Unknown)">
            <summary>
            Проверяет неравенство двух объектов класса.
            </summary>
            <param name="item1">Unknown структура</param>
            <param name="item2">Unknown структура</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.Equals(System.Object)">
            <summary>
            Определяет, равен ли заданный объект System.Object текущему объекту System.Object.
            </summary>
            <param name="obj">Элемент</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.GetHashCode">
            <summary>
            Играет роль хэш-функции определенного типа.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.ToString">
            <summary>
            Возвращает объект System.String, который представляет текущий объект.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.AHSL)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.AHSL">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.LAB)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.LAB">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.XYZ)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.XYZ">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.CMYK)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.CMYK">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.HSB)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.HSB">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.HSL)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.HSL">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.RGB)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.RGB">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.RYB)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.RYB">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.sRGB)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.sRGB">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YCbCr)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YCbCr">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YCgCo)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YCgCo">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YDbDr)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YDbDr">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YIQ)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YIQ">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YPbPr)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YPbPr">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.YUV)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~UMapx.Colorspace.YUV">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(System.Drawing.Color)~UMapx.Colorspace.Unknown">
            <summary>
            Определяет явное преобразование Space в Unknown.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.op_Implicit(UMapx.Colorspace.Unknown)~System.Drawing.Color">
            <summary>
            Определяет явное преобразование Unknown в Space.
            </summary>
            <param name="value">Структура</param>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.System#ICloneable#Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.Clone">
            <summary>
            Создает копию цветовой модели.
            </summary>
            <returns>Структура</returns>
        </member>
        <member name="M:UMapx.Colorspace.Unknown.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Colorspace.Unknown.X">
            <summary>
            Определяет составляющую цветовой модели.
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.Unknown.Y">
            <summary>
            Определяет составляющую цветовой модели.
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.Unknown.Z">
            <summary>
            Определяет составляющую цветовой модели.
            </summary>
        </member>
        <member name="P:UMapx.Colorspace.Unknown.ToRGB">
            <summary>
            Возвращает цветовую модель RGB.
            </summary>
        </member>
        <member name="T:UMapx.Core.Complex">
            <summary>
            Определяет комплексное число.
            </summary>
        </member>
        <member name="F:UMapx.Core.Complex.Re">
            <summary>
            Действительная часть комплексного числа.
            </summary>
        </member>
        <member name="F:UMapx.Core.Complex.Im">
            <summary>
            Мнимая часть комплексного числа.
            </summary>
        </member>
        <member name="M:UMapx.Core.Complex.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует комплексное число.
            </summary>
            <param name="re">Действительная часть комплексного числа</param>
            <param name="im">Мнимая часть комплексного числа</param>
        </member>
        <member name="M:UMapx.Core.Complex.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Complex.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа Complex.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Complex.ToString">
            <summary>
            Преобразует комплексное число в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.Complex.ToString(System.String)">
            <summary>
            Преобразует комплексное число в соответствующее ему строковое представление.
            </summary>
            <param name="format">Строка числового формата</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Equality(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Проверяет равны ли два объекта типа Comlex между собой.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Inequality(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Проверяет не равны ли два объекта типа Complex между собой.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Addition(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Сумма двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Addition(UMapx.Core.Complex,System.Double)">
            <summary>
            Сумма комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Addition(System.Double,UMapx.Core.Complex)">
            <summary>
            Сумма комплексного числа и действительного числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Subtraction(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Разность двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Subtraction(UMapx.Core.Complex,System.Double)">
            <summary>
            Разность комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Subtraction(System.Double,UMapx.Core.Complex)">
            <summary>
            Разность комплексного числа и действительного числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_UnaryNegation(UMapx.Core.Complex)">
            <summary>
            Инвертирует комплексное число.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Multiply(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Произведение двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Multiply(System.Double,UMapx.Core.Complex)">
            <summary>
            Произведение комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Multiply(UMapx.Core.Complex,System.Double)">
            <summary>
            Произведение комплексного числа и действительного числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Division(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Частное двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Division(UMapx.Core.Complex,System.Double)">
            <summary>
            Частное комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Division(System.Double,UMapx.Core.Complex)">
            <summary>
            Частное комплексного числа и действительного числа.
            </summary>
            <param name="a">Числа</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Double)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Single)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Int64)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.UInt64)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Int16)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.UInt16)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Int32)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.UInt32)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Byte)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.SByte)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.op_Implicit(System.Decimal)~UMapx.Core.Complex">
            <summary>
            Определяет явное преобразование числа в комплексное число.
            </summary>
            <param name="value">Значение, преобразуемое в комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.Parse(System.String)">
            <summary>
            Переводит исходную строку в комплексное число.
            <remarks>
            Примеры входной строки: "1 + 2i", "0.321 + 11i", ".1i".
            </remarks>
            </summary>
            <param name="s">Исходная строка</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.Complex.TryParse(System.String,UMapx.Core.Complex@)">
            <summary>
            Пробует перевести исходную строку в комплексное число.
            </summary>
            <param name="complex">Исходная строка</param>
            <param name="result">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Complex.System#ICloneable#Clone">
            <summary>
            Создает копию комплексного числа.
            </summary>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.Clone">
            <summary>
            Создает копию комплексного числа.
            </summary>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Complex.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.Complex.Abs">
            <summary>
            Получает значение модуля.
            </summary>
        </member>
        <member name="P:UMapx.Core.Complex.Angle">
            <summary>
            Получает значение угла фазы (аргумента).
            </summary>
        </member>
        <member name="P:UMapx.Core.Complex.I">
            <summary>
            Возвращает мнимую единицу.
            </summary>
        </member>
        <member name="P:UMapx.Core.Complex.One">
            <summary>
            Возвращает действительную единицу.
            </summary>
        </member>
        <member name="P:UMapx.Core.Complex.Zero">
            <summary>
            Возвращает комплексный ноль.
            </summary>
        </member>
        <member name="P:UMapx.Core.Complex.Conjugate">
            <summary>
            Возвращает комплексно-сопряженное число.
            </summary>
        </member>
        <member name="T:UMapx.Core.Quaternion">
            <summary>
            Определяет кватернион.
            <remarks>
            Кватернион - это система гиперкомплексных чисел, образующая векторное пространство размерностью четыре над полем вещественных чисел.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Core.Quaternion.X">
            <summary>
            Значение X координаты вектора кватерниона.
            </summary>
        </member>
        <member name="F:UMapx.Core.Quaternion.Y">
            <summary>
            Значение Y координаты вектора кватерниона.
            </summary>
        </member>
        <member name="F:UMapx.Core.Quaternion.Z">
            <summary>
            Значение Z координаты вектора кватерниона.
            </summary>
        </member>
        <member name="F:UMapx.Core.Quaternion.W">
            <summary>
            Получает координату поворота кватерниона.
            </summary>
        </member>
        <member name="M:UMapx.Core.Quaternion.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Создает кватернион на основе заданных координат.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
            <param name="z">Координата Z</param>
            <param name="w">Координата поворота</param>
        </member>
        <member name="M:UMapx.Core.Quaternion.FromYPR(System.Double,System.Double,System.Double)">
            <summary>
            Создает новый кватернион на основе заданного значения нутации, прецессии и собственного вращения.
            </summary>
            <param name="yaw">Угол нутации вокруг оси Y в радианах</param>
            <param name="pitch">Угол прецессии вокруг оси X в радианах</param>
            <param name="roll">Угол собственного вращения вокруг оси Z в радианах</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Dot(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Вычисляет скалярное произведение двух кватернионов.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Slerp(UMapx.Core.Quaternion,UMapx.Core.Quaternion,System.Double)">
            <summary>
            Выполняет интерполяцию между двумя кватернионами, используя сферическую линейную интерполяцию.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <param name="amount">Относительный вес второго кватерниона в интерполяции</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Lerp(UMapx.Core.Quaternion,UMapx.Core.Quaternion,System.Double)">
            <summary>
            Выполняет линейную интерполяцию между двумя кватернионами на основе значения, указывающего взвешивание второго кватерниона.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <param name="amount">Относительный вес второго кватерниона в интерполяции</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Concatenate(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Сцепляет два кватерниона.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_UnaryNegation(UMapx.Core.Quaternion)">
            <summary>
            Обращает знак каждой координаты кватерниона.
            </summary>
            <param name="q">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Addition(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Складывает каждый элемент в одном кватернионе с соответствующим элементом во втором кватернионе.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Subtraction(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Вычитает каждый элемент во втором кватернионе из соответствующего элемента в первом кватернионе.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Multiply(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Возвращает кватернион, являющийся результатом перемножения двух кватернионов.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Multiply(UMapx.Core.Quaternion,System.Double)">
            <summary>
            Возвращает кватернион, получаемый в результате масштабирования всех координат заданного кватерниона на скалярный множитель.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Множитель</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Division(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Делит один кватернион на второй кватернион.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Division(UMapx.Core.Quaternion,System.Double)">
            <summary>
            Возвращает кватернион, получаемый в результате масштабирования всех координат заданного кватерниона на скалярный множитель.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Делитель</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Equality(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Проверяет равны ли два объекта типа Кватернион между собой.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.op_Inequality(UMapx.Core.Quaternion,UMapx.Core.Quaternion)">
            <summary>
            Проверяет не равны ли два объекта типа Кватернион между собой.
            </summary>
            <param name="a">Кватернион</param>
            <param name="b">Кватернион</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа Кватернион.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.ToString">
            <summary>
            Преобразует комплексное число в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.ToString(System.String)">
            <summary>
            Преобразует комплексное число в соответствующее ему строковое представление.
            </summary>
            <param name="format">Строка числового формата</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.System#ICloneable#Clone">
            <summary>
            Создает копию кватерниона.
            </summary>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.Clone">
            <summary>
            Создает копию кватерниона.
            </summary>
            <returns>Кватернионо</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="M:UMapx.Core.Quaternion.Parse(System.String)">
            <summary>
            Переводит исходную строку в кватернион.
            </summary>
            <remarks>
            Пример входной строки: "[1, -2; 3.2, -.13]";
            Размерность вектора должна быть равна 4.
            </remarks>
            <param name="s">Исходная строка</param>
            <returns>Кватернион</returns>
        </member>
        <member name="M:UMapx.Core.Quaternion.TryParse(System.String,UMapx.Core.Quaternion@)">
            <summary>
            Пробует перевести исходную строку в кватернион.
            </summary>
            <param name="quaternion">Исходная строка</param>
            <param name="result">Кватернион</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="P:UMapx.Core.Quaternion.Identity">
            <summary>
            Получает кватернион, который представляет отсутствие вращения.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.IsIdentity">
            <summary>
            Получает значение, указывающее, является ли текущий экземпляр единичным кватернионом.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.Abs">
            <summary>
            Возвращает значение модуля кватерниона.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.SquaredAbs">
            <summary>
            Вычисляет модуля кватерниона в квадрате.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.Normalize">
            <summary>
            Делит каждую координату указанного кватерниона на его длину.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.Conjugate">
            <summary>
            Возвращает сопряженный объект заданного кватерниона.
            </summary>
        </member>
        <member name="P:UMapx.Core.Quaternion.Inverse">
            <summary>
            Возвращает инверсный объект кватерниона.
            </summary>
        </member>
        <member name="T:UMapx.Core.StringOptions">
            <summary>
            Определяет класс операций со строками.
            </summary>
        </member>
        <member name="M:UMapx.Core.StringOptions.Disp(System.Double[],System.String,System.String[])">
            <summary>
            Функция преобразования массива чисел в строку.
            </summary>
            <param name="v">Массив чисел</param>
            <param name="format">Строка числового формата</param>
            <param name="symbol">Массив символов</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.StringOptions.Disp(System.Double,System.String,System.Boolean,System.String)">
            <summary>
            Функция преобразования числового значения в строку.
            </summary>
            <param name="v">Число</param>
            <param name="format">Строка числового формата</param>
            <param name="s">Первое в ряду или нет</param>
            <param name="symbol">Символ</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.StringOptions.Matpar(System.String)">
            <summary>
            Определяет общий метод приведения исходной строки к матричному виду.
            </summary>
            <param name="s">Исходная строка</param>
            <returns>Массив строк</returns>
        </member>
        <member name="M:UMapx.Core.StringOptions.Compar(System.String)">
            <summary>
            Переводит исходную строку в комплексное число.
            <remarks>
            Примеры входной строки: "1 + 2i", "0.321 + 11i", ".1i".
            </remarks>
            </summary>
            <param name="s">Исходная строка</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="P:UMapx.Core.StringOptions.C">
            <summary>
            Формат комплексного числа.
            </summary>
        </member>
        <member name="P:UMapx.Core.StringOptions.Q">
            <summary>
            Формат кватерниона.
            </summary>
        </member>
        <member name="T:UMapx.Response.IIR">
            <summary>
            Определяет фильтр с бесконечной импульсной характеристикой.
            <remarks>
            Фильтр с бесконечной импульсной характеристикой (рекурсивный фильтр, БИХ-фильтр или IIR-фильтр) — линейный электронный фильтр, 
            использующий один или более своих выходов в качестве входа, то есть образует обратную связь. Основным свойством таких фильтров 
            является то, что их импульсная переходная характеристика имеет бесконечную длину во временной области, а передаточная функция 
            имеет дробно-рациональный вид.
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Response.IResponse">
            <summary>
            Определяет общий интерфейс фильтров отклика.
            </summary>
        </member>
        <member name="M:UMapx.Response.IResponse.Reaction(System.Double[])">
            <summary>
            Возвращает массив значений реакции фильтра, при подаче дискретной функции.
            </summary>
            <param name="u">Одномерный массив</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IResponse.Amplitude(System.Double[])">
            <summary>
            Возвращает амплитудно-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IResponse.Phase(System.Double[])">
            <summary>
            Возвращает фазо-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IResponse.Amplitude(System.Double)">
            <summary>
            Возвращает значение амплитуды на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.IResponse.Phase(System.Double)">
            <summary>
            Возвращает значение фазы на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.IIR.#ctor">
            <summary>
            Инициализирует фильтр с бесконечной импульсной характеристикой.
            </summary>
        </member>
        <member name="M:UMapx.Response.IIR.#ctor(System.Double[],System.Double[])">
            <summary>
            Инициализирует фильтр с бесконечной импульсной характеристикой.
            </summary>
            <param name="a">Массив коэффициентов обратной связи</param>
            <param name="b">Массив коэффициентов сигнала</param>
        </member>
        <member name="M:UMapx.Response.IIR.Reaction(System.Double[])">
            <summary>
            Возвращает массив значений реакции фильтра, при подаче дискретной функции.
            </summary>
            <param name="u">Одномерный массив</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IIR.Amplitude(System.Double[])">
            <summary>
            Возвращает амплитудно-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IIR.Phase(System.Double[])">
            <summary>
            Возвращает фазо-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.IIR.Amplitude(System.Double)">
            <summary>
            Возвращает значение амплитуды на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.IIR.Phase(System.Double)">
            <summary>
            Возвращает значение фазы на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.IIR.System#ICloneable#Clone">
            <summary>
            Создает копию фильтра.
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:UMapx.Response.IIR.Clone">
            <summary>
            Создает копию фильтра.
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:UMapx.Response.IIR.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Response.IIR.A">
            <summary>
            Получает или задает массив коэффициентов обратной связи.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.B">
            <summary>
            Получает или задает массив коэффициентов сигнала.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.Stability">
            <summary>
            Проверяет является ли заданный фильтр устойчивым.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.LowPass">
            <summary>
            Получает готовый фильтр нижних частот.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.HighPass">
            <summary>
            Получает готовый фильтр верхних частот.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.BandPass">
            <summary>
            Получает готовый полосовой фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Response.IIR.Notch">
            <summary>
            Получает готовый режекторный фильтр.
            </summary>
        </member>
        <member name="T:UMapx.Response.FIR">
            <summary>
            Определяет фильтр с конечной импульсной характеристикой.
            <remarks>
            Фильтр с конечной импульсной характеристикой (трансверсальный фильтр, КИХ-фильтр или FIR-фильтр) — один из видов линейных 
            цифровых фильтров, характерной особенностью которого является ограниченность по времени его импульсной характеристики 
            (с какого-то момента времени она становится точно равной нулю). Такой фильтр называют ещё нерекурсивным из-за отсутствия обратной связи. 
            Знаменатель передаточной функции такого фильтра — некая константа.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Response.FIR.#ctor">
            <summary>
            Инициализирует фильтр с конечной импульсной характеристикой.
            </summary>
        </member>
        <member name="M:UMapx.Response.FIR.#ctor(System.Double[])">
            <summary>
            Инициализирует фильтр с конечной импульсной характеристикой.
            </summary>
            <param name="b">Массив коэффициентов сигнала</param>
        </member>
        <member name="M:UMapx.Response.FIR.Reaction(System.Double[])">
            <summary>
            Возвращает массив значений реакции фильтра, при подаче дискретной функции.
            </summary>
            <param name="u">Одномерный массив</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.FIR.Amplitude(System.Double[])">
            <summary>
            Возвращает амплитудно-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.FIR.Phase(System.Double[])">
            <summary>
            Возвращает фазо-частотную характеристику фильтра.
            </summary>
            <param name="w">Массив частот (рад/с)</param>
            <returns>Дискретная функция в декартовой системе координат</returns>
        </member>
        <member name="M:UMapx.Response.FIR.Amplitude(System.Double)">
            <summary>
            Возвращает значение амплитуды на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.FIR.Phase(System.Double)">
            <summary>
            Возвращает значение фазы на заданной частоте.
            </summary>
            <param name="w">Частота (рад/с)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Response.FIR.System#ICloneable#Clone">
            <summary>
            Создает копию фильтра.
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:UMapx.Response.FIR.Clone">
            <summary>
            Создает копию фильтра.
            </summary>
            <returns>Фильтр</returns>
        </member>
        <member name="M:UMapx.Response.FIR.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Response.FIR.B">
            <summary>
            Получает или задает массив коэффициентов сигнала.
            </summary>
        </member>
        <member name="P:UMapx.Response.FIR.LowPass">
            <summary>
            Получает готовый фильтр нижних частот.
            </summary>
        </member>
        <member name="P:UMapx.Response.FIR.HighPass">
            <summary>
            Получает готовый фильтр верхних частот.
            </summary>
        </member>
        <member name="P:UMapx.Response.FIR.BandPass">
            <summary>
            Получает готовый полосовой фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Response.FIR.Notch">
            <summary>
            Получает готовый режекторный фильтр.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.IBitmapFilter2">
            <summary>
            Определяет общий интерфейс фильтров двух изображений.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.IBitmapFilter2.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.IBitmapFilter2.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="T:UMapx.Imaging.IBitmapFilter">
            <summary>
            Определяет общий интерфейс фильтров.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.IBitmapFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.IBitmapFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="T:UMapx.Imaging.ICanvas">
            <summary>
            Определяет общий вид холстов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ICanvas.Create">
            <summary>
            Создает холст.
            </summary>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="P:UMapx.Imaging.ICanvas.Width">
            <summary>
            Получает ширину холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ICanvas.Height">
            <summary>
            Получает высоту холста.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Rebuilder">
            <summary>
            Определяет абстрактный класс перестроения данных.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Rebuilder.rebuild">
            <summary>
            Использовать перестроение данных класса или нет.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Rebuilder.Rebuild">
            <summary>
            Реализует перестроение данных класса.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Correction">
            <summary>
            Определяет фильтр масочной коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Correction.values">
            <summary>
            Значения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Correction.space">
            <summary>
            Цветовое пространство.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Correction.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Correction.#ctor(System.Double[],UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр масочной коррекции.
            </summary>
            <param name="values">Одномерная маска</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.#ctor">
            <summary>
            Инициализирует фильтр масочной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Correction.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.ApplyRGB(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.ApplyHSL(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.ApplyHSB(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Correction.ApplyYCbCr(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.Correction.Values">
            <summary>
            Получает или задает табулированную маску.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Correction.Space">
            <summary>
            Получает или задает цветовое пространство.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GrayscaleCorrection">
            <summary>
            Определяет фильтр масочной коррекции в оттенках серого.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.GrayscaleCorrection.values">
            <summary>
            Значения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleCorrection.#ctor(System.Double[])">
            <summary>
            Инициализирует фильтр масочной коррекции в оттенках серого.
            </summary>
            <param name="values">Одномерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleCorrection.#ctor">
            <summary>
            Инициализирует фильтр масочной коррекции в оттенках серого.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleCorrection.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleCorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.GrayscaleCorrection.Values">
            <summary>
            Получает или задает табулированную маску.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.RGBACorrection">
            <summary>
            Определяет фильтр масочной коррекции каналов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBACorrection.channel">
            <summary>
            Канал.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBACorrection.values">
            <summary>
            Значения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RGBACorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RGBACorrection.#ctor(System.Double[],UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр масочной коррекции каналов.
            </summary>
            <param name="values">Одномерная маска</param>
            <param name="channel">Канал</param>
        </member>
        <member name="M:UMapx.Imaging.RGBACorrection.#ctor">
            <summary>
            Инициализирует фильтр масочной коррекции каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RGBACorrection.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.RGBACorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.RGBACorrection.Values">
            <summary>
            Получает или задает табулированную маску.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.RGBACorrection.Channel">
            <summary>
            Получает или задает цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalCorrection">
            <summary>
            Определяет фильтр локальной масочной коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalCorrection.gb">
            <summary>
            Фильтр локального усреднения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalCorrection.values">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalCorrection.space">
            <summary>
            Цветовое пространство.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.#ctor">
            <summary>
            Инициализирует фильтр локальной масочной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.#ctor(System.Int32,System.Double[0:,0:],UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.#ctor(System.Int32,System.Int32,System.Double[0:,0:],UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.#ctor(UMapx.Core.SizeInt,System.Double[0:,0:],UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.ApplyRGB(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.ApplyHSL(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.ApplyHSB(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalCorrection.ApplyYCbCr(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.LocalCorrection.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalCorrection.Space">
            <summary>
            Получает или задает цветовое пространство.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalCorrection.Values">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalGrayscaleCorrection">
            <summary>
            Определяет фильтр локальной масочной коррекции в оттенках серого.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalGrayscaleCorrection.gb">
            <summary>
            Фильтр локального усреднения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalGrayscaleCorrection.values">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.#ctor">
            <summary>
            Инициализирует фильтр локальной масочной коррекции в оттенках серого.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.#ctor(System.Int32,System.Double[0:,0:])">
            <summary>
            Инициализирует фильтр локальной масочной коррекции в оттенках серого.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.#ctor(System.Int32,System.Int32,System.Double[0:,0:])">
            <summary>
            Инициализирует фильтр локальной масочной коррекции в оттенках серого.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.#ctor(UMapx.Core.SizeInt,System.Double[0:,0:])">
            <summary>
            Инициализирует фильтр локальной масочной коррекции в оттенках серого.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalGrayscaleCorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.LocalGrayscaleCorrection.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalGrayscaleCorrection.Values">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalRGBACorrection">
            <summary>
            Определяет фильтр локальной масочной коррекции каналов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalRGBACorrection.gb">
            <summary>
            Фильтр локального усреднения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalRGBACorrection.values">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalRGBACorrection.channel">
            <summary>
            Канал.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.#ctor">
            <summary>
            Инициализирует фильтр локальной масочной коррекции каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.#ctor(System.Int32,System.Double[0:,0:],UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции каналов.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="channel">Канал</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.#ctor(System.Int32,System.Int32,System.Double[0:,0:],UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции каналов.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="channel">Канал</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.#ctor(UMapx.Core.SizeInt,System.Double[0:,0:],UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр локальной масочной коррекции каналов.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="channel">Канал</param>
            <param name="values">Двумерная маска</param>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalRGBACorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.LocalRGBACorrection.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalRGBACorrection.Channel">
            <summary>
            Получает или задает цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalRGBACorrection.Values">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.PointAddition">
            <summary>
            Определяет фильтр суммирования точек.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointAddition.points">
            <summary>
            Массив точек.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointAddition.width">
            <summary>
            Ширина изображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointAddition.height">
            <summary>
            Высота изображения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.#ctor(UMapx.Core.PointInt[0:,0:])">
            <summary>
            Инициализирует фильтр суммирования точек.
            </summary>
            <param name="points">Массив упорядоченных пар чисел X и Y</param>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.#ctor">
            <summary>
            Инициализирует фильтр суммирования точек.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.PointAddition.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.PointAddition.Points">
            <summary>
            Получает или задает массив упорядоченных пар чисел X и Y.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.PointMultiplication">
            <summary>
            Определяет фильтр умножения точек.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointMultiplication.points">
            <summary>
            Массив точек.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointMultiplication.width">
            <summary>
            Ширина изображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.PointMultiplication.height">
            <summary>
            Высота изображения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.#ctor(UMapx.Core.PointInt[0:,0:])">
            <summary>
            Инициализирует фильтр умножения точек.
            </summary>
            <param name="points">Массив упорядоченных пар чисел X и Y</param>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.#ctor">
            <summary>
            Инициализирует фильтр умножения точек.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.PointMultiplication.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.PointMultiplication.Points">
            <summary>
            Получает или задает массив упорядоченных пар чисел X и Y.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GrayscaleThreshold">
            <summary>
            Определяет фильтр бинариазции в оттенках серого.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.GrayscaleThreshold.threshold">
            <summary>
            Порог.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleThreshold.#ctor(System.Double)">
            <summary>
            Инициализирует новый фильтр.
            </summary>
            <param name="threshold">Пороговое значение [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleThreshold.#ctor">
            <summary>
            Инициализирует новый фильтр.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleThreshold.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.GrayscaleThreshold.Threshold">
            <summary>
            Получает или задает значение порогового значения [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.InvertChannels">
            <summary>
            Определяет фильтр инверсии яркости.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.InvertChannels.#ctor(UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр инверсии яркости.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.InvertChannels.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ColorThreshold">
            <summary>
            Определяет фильтр бинариазции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ColorThreshold.threshold">
            <summary>
            Порог.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ColorThreshold.#ctor(System.Int32,UMapx.Imaging.Space)">
            <summary>
            Инициализирует новый фильтр.
            </summary>
            <param name="threshold">Пороговое значение [0, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.ColorThreshold.#ctor">
            <summary>
            Инициализирует новый фильтр.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ColorThreshold.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ColorThreshold.Threshold">
            <summary>
            Получает или задает значение порогового значения [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LevelsCorrection">
            <summary>
            Определяет фильтр коррекции уровней.
            <remarks>
            Пример использования фильтра:
            https://digital-photography-school.com/using-levels-photoshop-image-correct-color-contrast/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LevelsCorrection.input">
            <summary>
            Входные значения каналов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LevelsCorrection.output">
            <summary>
            Выходные значения каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LevelsCorrection.#ctor(UMapx.Core.RangeDouble,UMapx.Core.RangeDouble,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр коррекции уровней.
            </summary>
            <param name="input">Входные значения каналов</param>
            <param name="output">Выходные значения каналов</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.LevelsCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции уровней.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LevelsCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LevelsCorrection.Input">
            <summary>
            Получает или задает входные значения каналов.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LevelsCorrection.Output">
            <summary>
            Получает или задает выходные значения каналов.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ExposureCorrection">
            <summary>
            Определяет фильтр экспозиционной коррекции.
            <remarks>
            Более подробное описание фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Exposure_(photography)
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ExposureCorrection.average">
            <summary>
            Среднее число.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ExposureCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр экспозиционной коррекции.
            </summary>
            <param name="average">Среднее число [0, 2500]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.ExposureCorrection.#ctor">
            <summary>
            Инициализирует фильтр экспозиционной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ExposureCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ExposureCorrection.Average">
            <summary>
            Получает или задает значение среднего числа [0, 2500].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LinearCorrection">
            <summary>
            Определяет фильтр линейной коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LinearCorrection.range">
            <summary>
            Граничные значения каналов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LinearCorrection.delta">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LinearCorrection.#ctor(UMapx.Core.RangeDouble,System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр линейной коррекции.
            </summary>
            <param name="range">Граничные значения каналов</param>
            <param name="delta">Дельта [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.LinearCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр линейной коррекции.
            </summary>
            <param name="delta">Дельта [-100, 100]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.LinearCorrection.#ctor">
            <summary>
            Инициализирует фильтр линейной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LinearCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LinearCorrection.Range">
            <summary>
            Получает или задает граничные значения каналов.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LinearCorrection.Delta">
            <summary>
            Получает или задает значение дельты [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.SinCorrection">
            <summary>
            Определяет фильтр синусоидальной коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SinCorrection.delta">
            <summary>
            Дельта.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SinCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр синусоидальной коррекции.
            </summary>
            <param name="delta">Дельта [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.SinCorrection.#ctor">
            <summary>
            Инициализирует фильтр синусоидальной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SinCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.SinCorrection.Delta">
            <summary>
            Получает или задает значение дельты [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.CosCorrection">
            <summary>
            Определяет фильтр косинусоидальной коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.CosCorrection.delta">
            <summary>
            Дельта.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CosCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр косинусоидальной коррекции.
            </summary>
            <param name="delta">Дельта [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.CosCorrection.#ctor">
            <summary>
            Инициализирует фильтр синусоидальной коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CosCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CosCorrection.Delta">
            <summary>
            Получает или задает значение дельты.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LogCorrection">
            <summary>
            Определяет фильтр логарифмической коррекции.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LogCorrection.nbase">
            <summary>
            Основание логарифма.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LogCorrection.delta">
            <summary>
            Дельта.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LogCorrection.#ctor(System.Double,System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр логарифмической коррекции.
            </summary>
            <param name="nbase">Основание логарифма</param>
            <param name="delta">Дельта [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.LogCorrection.#ctor">
            <summary>
            Инициализирует фильтр логарифмической коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LogCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LogCorrection.Base">
            <summary>
            Получает или задает значение основания логарифма.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LogCorrection.Delta">
            <summary>
            Получает или задает значение дельты.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BrightnessCorrection">
            <summary>
            Определяет фильтр коррекции яркости.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            http://esate.ru/uroki/OpenGL/image_processing/_p4106/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BrightnessCorrection.brightness">
            <summary>
            Яркость.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BrightnessCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр коррекции якрости.
            </summary>
            <param name="brightness">Яркость [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.BrightnessCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции якрости.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BrightnessCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.BrightnessCorrection.Brightness">
            <summary>
            Получает или задает значение якрости [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ContrastCorrection">
            <summary>
            Определяет фильтр коррекции контрастности.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            http://esate.ru/uroki/OpenGL/image_processing/_p4106/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ContrastCorrection.contrast">
            <summary>
            Контрастность.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ContrastCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр коррекции контрастности.
            </summary>
            <param name="value">Контрастность [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.ContrastCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции контрастности.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ContrastCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ContrastCorrection.Contrast">
            <summary>
            Получает или задает значение контрастности.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GammaCorrection">
            <summary>
            Определяет фильтр гамма-коррекции.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://en.wikipedia.org/wiki/Gamma_correction
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.GammaCorrection.g">
            <summary>
            Гамма.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GammaCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр гамма-коррекции.
            </summary>
            <param name="g">Гамма [0, 20]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.GammaCorrection.#ctor">
            <summary>
            Инициализирует фильтр гамма-коррекции.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GammaCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.GammaCorrection.Gamma">
            <summary>
            Получает или задает значение гаммы [0, 20].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ShiftCorrection">
            <summary>
            Определяет фильтр коррекции ко смещением.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ShiftCorrection.offset">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ShiftCorrection.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр коррекции ко смещением.
            </summary>
            <param name="offset">Смещение (-0.5, 0.5)</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.ShiftCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ShiftCorrection.Offset">
            <summary>
            Получает или задает значение смещения (-0.5, 0.5).
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ContrastEnhancement">
            <summary>
            Определяет фильтр глобального улучшения контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ContrastEnhancement.contrast">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ContrastEnhancement.#ctor(System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр глобального улучшения контраста.
            </summary>
            <param name="contrast">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.ContrastEnhancement.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ContrastEnhancement.Contrast">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Quantization">
            <summary>
            Определяет фильтр квантования.
            <remarks>
            Примеры работы фильтра можно найти на сайте: 
            http://en.wikipedia.org/wiki/Posterization
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Quantization.levels">
            <summary>
            Количество уровней.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Quantization.#ctor(System.Int32,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр квантования.
            </summary>
            <param name="levels">Количество уровней</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.Quantization.#ctor">
            <summary>
            Инициализирует фильтр квантования.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Quantization.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Quantization.Levels">
            <summary>
            Получает или задает количество уровней.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalContrastEnhancement">
            <summary>
            Определяет фильтр локального улучшения контраста.
            <remarks>
            Данный фильтр также известен под названием "Unsharp Masking".
            
            Подробное описание алгоритма можно найти на сайте:
            http://www.cambridgeincolour.com/tutorials/local-contrast-enhancement.htm
            Примеры использования:
            http://www.knowhowtransfer.com/photoshop-professional-plugins/alce-local-contrast-enhancer/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalContrastEnhancement.contrast">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastEnhancement.#ctor(System.Int32,UMapx.Imaging.Space,System.Double)">
            <summary>
            Инициализирует фильтр локального улучшения контраста.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastEnhancement.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double)">
            <summary>
            Инициализирует фильтр локального улучшения контраста.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastEnhancement.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double)">
            <summary>
            Инициализирует фильтр локального улучшения контраста.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastEnhancement.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalContrastEnhancement.Contrast">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalContrastInversion">
            <summary>
            Определяет фильтр инверсии локального контраста.
            <remarks>
            Данный фильтр используется для выравнивания освещенности изображений путем усреднения яркости.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalContrastInversion.a">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalContrastInversion.b">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastInversion.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр инверсии локального контраста.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastInversion.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр инверсии локального контраста.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastInversion.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр инверсии локального контраста.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.LocalContrastInversion.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalContrastInversion.A">
            <summary>
            Получает или задает значение коэффициента сжатия контраста (0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalContrastInversion.B">
            <summary>
            Получает или задает значение смещения (0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.KsiContrastEnhancement">
            <summary>
            Определяет фильтр повышения контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.KsiContrastEnhancement.a">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.KsiContrastEnhancement.b">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.KsiContrastEnhancement.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр повышения контраста.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.KsiContrastEnhancement.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр повышения контраста.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.KsiContrastEnhancement.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр повышения контраста.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.KsiContrastEnhancement.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.KsiContrastEnhancement.A">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.KsiContrastEnhancement.B">
            <summary>
            Получает или задает значение смещения [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HomomorphicEnhancement">
            <summary>
            Определяет фильтр гомоморфной обработки.
            <remarks>
            Гомоморфный фильтр чаще всего используется для выравнивания освещенности изображений. 
            Он одновременно нормализует яркость изображения и увеличивает контрастность.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Homomorphic_filtering
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HomomorphicEnhancement.a">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HomomorphicEnhancement.b">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HomomorphicEnhancement.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр гомоморфной обработки.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HomomorphicEnhancement.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр гомоморфной обработки.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HomomorphicEnhancement.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр гомоморфной обработки.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HomomorphicEnhancement.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HomomorphicEnhancement.A">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HomomorphicEnhancement.B">
            <summary>
            Получает или задает значение смещения (0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.SingleScaleRetinex">
            <summary>
            Определяет фильтр Single Scale Retinex.
            <remarks>
            Алгоритмы группы Single Scale Retinex предназначены для коррекции неравномерно освещенных изображений. 
            Фильтр данной группы выравнивает освещенность изображения, сохраняя локальный контраст в плохо и ярко освещенных областях.
            
            Более подробную информацию можно найти в статье:
            https://dragon.larc.nasa.gov/background/pubabs/papers/gspx1.pdf
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SingleScaleRetinex.a">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SingleScaleRetinex.b">
            <summary>
            Смещение.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SingleScaleRetinex.nbase">
            <summary>
            Основание логарифма.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SingleScaleRetinex.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр Single Scale Retinex.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="nbase">Основание логарифма</param>
        </member>
        <member name="M:UMapx.Imaging.SingleScaleRetinex.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр Single Scale Retinex.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="nbase">Основание логарифма</param>
        </member>
        <member name="M:UMapx.Imaging.SingleScaleRetinex.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр Single Scale Retinex.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="nbase">Основание логарифма</param>
        </member>
        <member name="M:UMapx.Imaging.SingleScaleRetinex.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.SingleScaleRetinex.A">
            <summary>
            Получает или задает коэффициент сжатия контраста [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.SingleScaleRetinex.B">
            <summary>
            Получает или задает значение смещения (0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.SingleScaleRetinex.Base">
            <summary>
            Получает или задает основание логарифма.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ShadowsHighlightsCorrection">
            <summary>
            Определяет фильтр коррекции теней и светов.
            <remarks>
            Коррекция теней и светов (Shadows-Highlights correction) используется для коррекции неравномерно освещенных изображений. В отличие от других локальных алгоритмов
            (например, Single Scale Retinex, Homomorphic Enhancement, Flat-Field Correction) фильтр позволяет регулировать значения яркости отдельно в темных и светлых областях
            изображения.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ShadowsHighlightsCorrection.shadows">
            <summary>
            Тени.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ShadowsHighlightsCorrection.lights">
            <summary>
            Света.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ShadowsHighlightsCorrection.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр коррекции теней и светов.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="shadows">Тени [0, 1]</param>
            <param name="highlights">Света [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.ShadowsHighlightsCorrection.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр коррекции теней и светов.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="shadows">Тени [0, 1]</param>
            <param name="highlights">Света [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.ShadowsHighlightsCorrection.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр коррекции теней и светов.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="shadows">Тени [0, 1]</param>
            <param name="highlights">Света [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.ShadowsHighlightsCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ShadowsHighlightsCorrection.value2gamma(System.Double)">
            <summary>
            Возвращает значение гамма-параметра.
            </summary>
            <param name="v">Значение фильтра [0, 1]</param>
            <returns>Гамма</returns>
        </member>
        <member name="P:UMapx.Imaging.ShadowsHighlightsCorrection.Shadows">
            <summary>
            Получает или задает значение теней [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ShadowsHighlightsCorrection.Highlights">
            <summary>
            Получает или задает значение светов [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.FlatFieldCorrection">
            <summary>
            Определяет фильтр Flat-Field-коррекции.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://imagej.net/Image_Intensity_Processing
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр "Flat-Field" коррекции.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр "Flat-Field" коррекции.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр "Flat-Field" коррекции.
            </summary>
            <param name="size">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.flatfield(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.FlatFieldCorrection.globalmeans(System.Drawing.Imaging.BitmapData)">
            <summary>
            Получает значения медиан изображения.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Imaging.FlatFieldCorrection.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HSBGrayscaleFilter">
            <summary>
            Определяет фильтр на основе структуры HSB.
            <remarks>
            Фильтр обесцвечивает указанную часть изображения.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSBGrayscaleFilter.#ctor(UMapx.Core.RangeInt)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="hue">Диапазон оттенков [0, 359]</param>
        </member>
        <member name="M:UMapx.Imaging.HSBGrayscaleFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="min">Нижний предел [0, 359]</param>
            <param name="max">Верхний предел [0, 359]</param>
        </member>
        <member name="M:UMapx.Imaging.HSBGrayscaleFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HSBGrayscaleFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.HSBGrayscaleFilter.Hue">
            <summary>
            Получает или задает диапазон оттенков [0, 359].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HSLGrayscaleFilter">
            <summary>
            Определяет фильтр на основе структуры HSL.
            <remarks>
            Фильтр обесцвечивает указанную часть изображения.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSLGrayscaleFilter.#ctor(UMapx.Core.RangeInt)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="hue">Диапазон оттенков [0, 359]</param>
        </member>
        <member name="M:UMapx.Imaging.HSLGrayscaleFilter.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="min">Нижний предел [0, 359]</param>
            <param name="max">Верхний предел [0, 359]</param>
        </member>
        <member name="M:UMapx.Imaging.HSLGrayscaleFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HSLGrayscaleFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.HSLGrayscaleFilter.Hue">
            <summary>
            Получает или задает диапазон оттенков [0, 359].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GrayscaleY">
            <summary>
            Определяет фильтр градаций серого (Y).
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Grayscale">
            <summary>
            Определяет фильтр градаций серого.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Grayscale.cr">
            <summary>
            C(r).
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Grayscale.cg">
            <summary>
            C(g).
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Grayscale.cb">
            <summary>
            C(b).
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Grayscale.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр градаций серого.
            </summary>
            <param name="cr">Коэффициент красного канала</param>
            <param name="cg">Коэффициент зеленого канала</param>
            <param name="cb">Коэффициент синего канала</param>
        </member>
        <member name="M:UMapx.Imaging.Grayscale.#ctor">
            <summary>
            Инициализирует фильтр градаций серого.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Grayscale.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Grayscale.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Grayscale.IsGrayscale(System.Drawing.Bitmap)">
            <summary>
            Проверяет является ли точечный рисунок изображением в оттенках серого.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="P:UMapx.Imaging.Grayscale.Cr">
            <summary>
            Получает или задает значение коэффициента красного канала.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Grayscale.Cg">
            <summary>
            Получает или задает значение коэффициента зеленого канала.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Grayscale.Cb">
            <summary>
            Получает или задает значение коэффициента синего канала.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleY.#ctor">
            <summary>
            Инициализирует фильтр градаций серого (Y).
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GrayscaleRY">
            <summary>
            Определяет фильтр градаций серого (R-Y).
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleRY.#ctor">
            <summary>
            Инициализирует фильтр градаций серого (R-Y).
            </summary>
        </member>
        <member name="T:UMapx.Imaging.GrayscaleBT709">
            <summary>
            Определяет фильтр градаций серого (BT709).
            </summary>
        </member>
        <member name="M:UMapx.Imaging.GrayscaleBT709.#ctor">
            <summary>
            Инициализирует фильтр градаций серого (BT709).
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Photofilter">
            <summary>
            Определяет цветовой фотофильтр.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Photofilter.s">
            <summary>
            Сила фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Photofilter.color">
            <summary>
            Цвет.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Photofilter.blendf">
            <summary>
            Функция смешивания.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Photofilter.#ctor(UMapx.Core.IDoubleMesh,System.Drawing.Color,System.Double)">
            <summary>
            Инициализирует цветовой фотофильтр.
            </summary>
            <param name="blendf">Функция смешивания</param>
            <param name="color">Цвет фильтра</param>
            <param name="strength">Сила фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.Photofilter.#ctor(System.Drawing.Color,System.Double)">
            <summary>
            Инициализирует цветовой фотофильтр.
            </summary>
            <param name="color">Цвет фильтра</param>
            <param name="strength">Сила фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.Photofilter.#ctor">
            <summary>
            Инициализирует цветовой фотофильтр.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Photofilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Photofilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.BlendFunction">
            <summary>
            Получает или задает цвет фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Color">
            <summary>
            Получает или задает цвет фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Strength">
            <summary>
            Получает или задает силу фильтра [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Cold82">
            <summary>
            Инициализирует холодный фильтр (82).
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.ColdLBB">
            <summary>
            Инициализирует холодный фильтр LBB.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Warm81">
            <summary>
            Инициализирует теплый фильтр (81).
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.WarmLBA">
            <summary>
            Инициализирует теплый фильтр LBA.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Sepia">
            <summary>
            Инициализирует фильтр сепии.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Red">
            <summary>
            Инициализирует красный фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Blue">
            <summary>
            Инициализирует синий фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Green">
            <summary>
            Инициализирует зеленый фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Underwater">
            <summary>
            Инициализирует подводный фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Purple">
            <summary>
            Инициализирует пурпурный фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Orange">
            <summary>
            Инициализирует оранжевый фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Photofilter.Yellow">
            <summary>
            Инициализирует желтый фильтр.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.TemperatureCorrection">
            <summary>
            Определяет фильтр коррекции температуры.
            <remarks>
            Фильтр использует аппроксимацию кривой Планка.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.TemperatureCorrection.temperature">
            <summary>
            Температура.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.TemperatureCorrection.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует фильтр коррекции температуры.
            </summary>
            <param name="temperature">Температура [1E3К, 1E4К]</param>
            <param name="strength">Сила фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.TemperatureCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции температуры.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.TemperatureCorrection.Temperature">
            <summary>
            Получает или задает значение температуры [1E3К, 1E4К].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.YUVPhotofilter">
            <summary>
            Определяет цветовой фотофильтр на основе модели YUV.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.YUVPhotofilter.s">
            <summary>
            Сила фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.YUVPhotofilter.color">
            <summary>
            Цвет.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.#ctor(System.Drawing.Color,System.Double)">
            <summary>
            Инициализирует цветовой фотофильтр на основе модели YUV.
            </summary>
            <param name="color">Цвет фильтра</param>
            <param name="strength">Сила фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.#ctor">
            <summary>
            Инициализирует цветовой фотофильтр на основе модели YUV.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.IsGrayColor(System.Drawing.Color)">
            <summary>
            Проверяет является ли цвет оттенком серого.
            </summary>
            <param name="color">Цвет в терминах красного, зеленого и синего каналов</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Imaging.YUVPhotofilter.AddColor(UMapx.Colorspace.YUV,UMapx.Colorspace.YUV)">
            <summary>
            Смешивает два цвета в пространстве YUV.
            </summary>
            <param name="yuv1">Первый цвет</param>
            <param name="yuv2">Второй цвет</param>
            <returns>Результат</returns>
        </member>
        <member name="P:UMapx.Imaging.YUVPhotofilter.Color">
            <summary>
            Получает или задает цвет фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YUVPhotofilter.Strength">
            <summary>
            Получает или задает силу фильтра [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YUVPhotofilter.Sepia">
            <summary>
            Инициализирует фильтр сепии.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YUVPhotofilter.Orange">
            <summary>
            Инициализирует оранжевый фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YUVPhotofilter.Yellow">
            <summary>
            Инициализирует желтый фильтр.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.SaturationCorrection">
            <summary>
            Определяет фильтр коррекции насыщенности.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SaturationCorrection.saturation">
            <summary>
            Насыщенность.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SaturationCorrection.#ctor(System.Double)">
            <summary>
            Инициализирует фильтр коррекции насыщенности.
            </summary>
            <param name="saturation">Насыщенность [-100, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.SaturationCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции насыщенности.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SaturationCorrection.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.SaturationCorrection.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.SaturationCorrection.Saturation">
            <summary>
            Получает или задает значение насыщенности [-100, 100].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ColorReplace">
            <summary>
            Определяет фильтр замены цвета.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ColorReplace.input">
            <summary>
            Входной цвет.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ColorReplace.output">
            <summary>
            Выходной цвет.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ColorReplace.#ctor(System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Инициализирует фильтр замены цвета.
            </summary>
            <param name="input">Входной цвет в терминах каналов красного, зеленого, синего и альфа каналов</param>
            <param name="output">Выходной цвет в терминах каналов красного, зеленого, синего и альфа каналов</param>
        </member>
        <member name="M:UMapx.Imaging.ColorReplace.#ctor">
            <summary>
            Инициализирует фильтр замены цвета.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ColorReplace.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.ColorReplace.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.ColorReplace.Input">
            <summary>
            Входной цвет в терминах каналов красного, зеленого, синего и альфа каналов.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ColorReplace.Output">
            <summary>
            Выходной цвет в терминах каналов красного, зеленого, синего и альфа каналов.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ToneDiffusionDithering">
            <summary>
            Определяет фильтр тонального дитеринга.
            <remarks>
            Примеры работы данного фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Dither
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ToneDiffusionDithering.matrix">
            <summary>
            Матрица диффузии.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.#ctor">
            <summary>
            Инициализирует фильтр тонального дитеринга.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует фильтр тонального дитеринга.
            </summary>
            <param name="matrix">Двумерная матрица</param>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="F:UMapx.Imaging.ToneDiffusionDithering.rand">
            <summary>
            Генератор случайных чисел.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Order(System.Int32)">
            <summary>
            Инициализирует фильтр заказного дитеринга.
            <remarks>
            Подробное описание фильтра можно найти на сайте:
            http://en.wikipedia.org/wiki/Ordered_dithering
            Примеры работы данного фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Dither
            </remarks>
            </summary>
            <param name="radius">Радиус матрицы [0, 255]</param>
            <returns>Фильтр тонального дитеринга</returns>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Random(System.Int32)">
            <summary>
            Инициализирует фильтр случайного дитеринга.
            </summary>
            <param name="radius">Радиус матрицы [0, 255]</param>
            <returns>Фильтр тонального дитеринга</returns>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Basic">
            <summary>
            Инициализирует фильтр классического дитеринга.
            </summary>
            <returns>Фильтр тонального дитеринга</returns>
        </member>
        <member name="M:UMapx.Imaging.ToneDiffusionDithering.Bayer">
            <summary>
            Инициализирует фильтр дитеринга по алгоритму Байера.
            </summary>
            <returns>Фильтр тонального дитеринга</returns>
        </member>
        <member name="P:UMapx.Imaging.ToneDiffusionDithering.Matrix">
            <summary>
            Получает или задает двумерную матрицу.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ErrorDiffusionDithering">
            <summary>
            Определяет фильтр дитеринга диффузии ошибки.
            <remarks>
            Примеры работы данного фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Dither
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.useCaching">
            <summary>
            Сглаживание.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.x">
            <summary>
            Координата X.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.y">
            <summary>
            Координата Y.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.width">
            <summary>
            Ширина изображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.height">
            <summary>
            Высота изображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.stride">
            <summary>
            Шаг изображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.pixelSize">
            <summary>
            Размер пикселя
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.table">
            <summary>
            Таблица цветов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.matrix">
            <summary>
            Матрица.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.ErrorDiffusionDithering.summary">
            <summary>
            Суммарное значение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ErrorDiffusionDithering.#ctor(System.Int32[][])">
            <summary>
            Инициализирует фильтр дитеринга диффузии ошибки.
            </summary>
            <param name="matrix">Матрица</param>
        </member>
        <member name="M:UMapx.Imaging.ErrorDiffusionDithering.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.ErrorDiffusionDithering.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.ErrorDiffusionDithering.Diffuse(System.Int32,System.Int32,System.Int32,System.Byte*)">
            <summary>
            Выполняет диффузию ошибки.
            </summary>
            <param name="rError">Ошибка красного канала</param>
            <param name="gError">Ошибка зеленого канала</param>
            <param name="bError">Ошибка синего канала</param>
            <param name="ptr">Текущий пиксель</param>
        </member>
        <member name="M:UMapx.Imaging.ErrorDiffusionDithering.GetClosestColor(System.Int32,System.Int32,System.Int32,System.Byte@)">
            <summary>
            Вычисляет ближайший цвет для заданных значений каналов.
            </summary>
            <param name="red">Красный</param>
            <param name="green">Зеленый</param>
            <param name="blue">Синий</param>
            <param name="index">Индекс</param>
            <returns>Цвет в терминах красного, зеленого и синего каналов</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Matrix">
            <summary>
            Получает или задает матрицу преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Table">
            <summary>
            Таблица цветов дитеринга изображения, размерность таблицы должна быть в пределах 2-256.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Caching">
            <summary>
            Использовать кеширование цвета во время сглаживания цвета или нет.
            </summary> 
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Atkinson">
            <summary>
            Инициализирует фильтр дитеринга Эткинсона.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Burkes">
            <summary>
            Инициализирует фильтр дитеринга Буркеса.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Fan">
            <summary>
            Инициализирует фильтр дитеринга Фэна.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.SierraLite">
            <summary>
            Инициализирует фильтр дитеринга Сиерры.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Sierra">
            <summary>
            Инициализирует фильтр дитеринга Сиерры.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.SierraTowsRows">
            <summary>
            Инициализирует фильтр дитеринга Сиерры.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.FloydSteinberg">
            <summary>
            Инициализирует фильтр дитеринга Флойда-Стеинберга.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.JarvisJudiceNinke">
            <summary>
            Инициализирует фильтр дитеринга Джарвиса-Джадиса-Нинке.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Stevenson">
            <summary>
            Инициализирует фильтр дитеринга Стивенсона.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Shiau">
            <summary>
            Инициализирует фильтр дитеринга Шиау.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="P:UMapx.Imaging.ErrorDiffusionDithering.Stucki">
            <summary>
            Инициализирует фильтр дитеринга Стаки.
            </summary>
            <returns>Фильтр дитеринга диффузии ошибки</returns>
        </member>
        <member name="T:UMapx.Imaging.AdditiveNoise">
            <summary>
            Определяет фильтр аддитивного Гауссова шума.
            <remarks>
            Гауссовский шум представляет собой статистический шум, имеющий функцию плотности вероятности (PDF), равную функции нормального распределения, 
            которая также известна как распределение Гаусса. Другими словами, значения, которые может принимать шум, распределены по Гауссу.
            Примеры работы данного фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Gaussian_noise
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.AdditiveNoise.amount">
            <summary>
            Сила.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.AdditiveNoise.generator">
            <summary>
            Генератор случайных чисел.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.AdditiveNoise.#ctor">
            <summary>
            Инициализирует фильтр аддитивного Гауссова шума.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.AdditiveNoise.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр аддитивного Гауссова шума.
            </summary>
            <param name="amount">Процентная доля шума [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.AdditiveNoise.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.AdditiveNoise.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.AdditiveNoise.Amount">
            <summary>
            Получает или задает процентную долю шума [0, 100].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.SaltAndPepper">
            <summary>
            Определяет фильтр шума "соль и перец".
            <remarks>
            Salt and pepper (англ. "соль с черным перцем", то есть чередование серых и белых частиц) - одна из форм шума, который как правило встречается 
            на графических и видео изображениях. Он представляет собой случайно возникающие белые и черные пиксели. Очень часто для проверки видео фильтров 
            данный шум используют как тестовый, добавляя к сигналу. В обычных же условиях шум Salt and Pepper возникает в изображения при быстрых переходных 
            процессах, таких как неправильная коммутация. Эффективным способом подавления этого типа шума является использование медианного фильтра.
            Примеры работы данного фильтра можно найти на сайте:
            https://en.wikipedia.org/wiki/Salt-and-pepper_noise
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SaltAndPepper.amount">
            <summary>
            Сила.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.SaltAndPepper.generator">
            <summary>
            Генератор случайных чисел.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SaltAndPepper.#ctor">
            <summary>
            Инициализирует фильтр шума "соль и перец".
            </summary>
        </member>
        <member name="M:UMapx.Imaging.SaltAndPepper.#ctor(System.Double)">
            <summary>
            Инициализирует фильтр шума "соль и перец".
            </summary>
            <param name="amount">Процентная доля шума [0, 100].</param>
        </member>
        <member name="M:UMapx.Imaging.SaltAndPepper.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.SaltAndPepper.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.SaltAndPepper.Amount">
            <summary>
            Получает или задает процентную долю шума [0, 100].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.TransparencyCorrection">
            <summary>
            Определяет фильтр коррекции прозрачности.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.TransparencyCorrection.transparency">
            <summary>
            Прозрачность.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.TransparencyCorrection.#ctor(System.Double)">
            <summary>
            Инициализирует фильтр коррекции прозрачности.
            </summary>
            <param name="transparency">Прозрачность [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.TransparencyCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции прозрачности.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.TransparencyCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.TransparencyCorrection.Transparency">
            <summary>
            Получает или задает значение прозрачности [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LevelsChannelCorrection">
            <summary>
            Определяет фильтр коррекции уровней канала.
            <remarks>
            Пример использования фильтра:
            https://digital-photography-school.com/using-levels-photoshop-image-correct-color-contrast/
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LevelsChannelCorrection.input">
            <summary>
            Входные значения каналов.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LevelsChannelCorrection.output">
            <summary>
            Выходные значения каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LevelsChannelCorrection.#ctor(UMapx.Imaging.RGBA,UMapx.Core.RangeDouble,UMapx.Core.RangeDouble)">
            <summary>
            Инициализирует фильтр коррекции уровней.
            </summary>
            <param name="channel">Цветовой канал модели RGBA</param>
            <param name="input">Входные значения каналов</param>
            <param name="output">Выходные значения каналов</param>
        </member>
        <member name="M:UMapx.Imaging.LevelsChannelCorrection.#ctor">
            <summary>
            Инициализирует фильтр коррекции уровней.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LevelsChannelCorrection.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LevelsChannelCorrection.Input">
            <summary>
            Получает или задает входные значения каналов.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LevelsChannelCorrection.Output">
            <summary>
            Получает или задает выходные значения каналов.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.RotateChannel">
            <summary>
            Определяет фильтр поворота каналов.
            <remarks>
            Каналы изображения меняются местами: B = R, G = B, R = G.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RotateChannel.#ctor">
            <summary>
            Инициализирует фильтр поворота каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RotateChannel.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.RotateChannel.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="T:UMapx.Imaging.EqualizeChannel">
            <summary>
            Определяет фильтр эквализации каналов.
            <remarks>
            Каналы изображения эквализируются в соотвествии с выбранным каналом C: R = G = B = C.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.EqualizeChannel.#ctor(UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр эквализации каналов.
            </summary>
            <param name="channel">Цветовой канал модели RGBA</param>
        </member>
        <member name="M:UMapx.Imaging.EqualizeChannel.#ctor">
            <summary>
            Инициализирует фильтр эквализации каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.EqualizeChannel.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.EqualizeChannel.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.EqualizeChannel.Channel">
            <summary>
            Получает или задает цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HideChannel">
            <summary>
            Определяет фильтр скрытия канала.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HideChannel.#ctor(UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр скрытия канала.
            </summary>
            <param name="channel">Цветовой канал модели RGBA</param>
        </member>
        <member name="M:UMapx.Imaging.HideChannel.#ctor">
            <summary>
            Инициализирует фильтр скрытия канала.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HideChannel.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HideChannel.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.HideChannel.Channel">
            <summary>
            Получает или задает цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.ShowChannel">
            <summary>
            Определяет фильтр отображения каналов.
            <remarks>
            Каналы изображения скрываются в соотвествии с выбранным каналом.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ShowChannel.#ctor(UMapx.Imaging.RGBA)">
            <summary>
            Инициализирует фильтр отображения каналов.
            </summary>
            <param name="channel">Цветовой канал модели RGBA</param>
        </member>
        <member name="M:UMapx.Imaging.ShowChannel.#ctor">
            <summary>
            Инициализирует фильтр отображения каналов.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.ShowChannel.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.ShowChannel.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.ShowChannel.Channel">
            <summary>
            Получает или задает цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.CanvasColor">
            <summary>
            Определяет класс цветного холста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CanvasColor.#ctor">
            <summary>
            Инициализирует класс цветного холста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CanvasColor.#ctor(System.Int32,System.Int32,System.Drawing.Color)">
            <summary>
            Инициализирует класс цветного холста.
            </summary>
            <param name="width">Ширина холста</param>
            <param name="height">Высота холста</param>
            <param name="color">Цвет в терминах каналов красного, зеленого и синего</param>
        </member>
        <member name="M:UMapx.Imaging.CanvasColor.Create">
            <summary>
            Создает холст.
            </summary>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="P:UMapx.Imaging.CanvasColor.Color">
            <summary>
            Получает или задает цвет холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasColor.Width">
            <summary>
            Получает или задает ширину холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasColor.Height">
            <summary>
            Получает или задает высоту холста.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.CanvasGradient">
            <summary>
            Определяет класс градиентного холста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CanvasGradient.#ctor">
            <summary>
            Инициализирует класс градиентного холста.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CanvasGradient.#ctor(System.Int32,System.Int32,System.Double,System.Drawing.Color,System.Drawing.Color)">
            <summary>
            Инициализирует класс градиентного холста.
            </summary>
            <param name="width">Ширина холста</param>
            <param name="height">Высота холста</param>
            <param name="angle">Направление линейного градиента</param>
            <param name="color1">Первый цвет</param>
            <param name="color2">Второй цвет</param>
        </member>
        <member name="M:UMapx.Imaging.CanvasGradient.Create">
            <summary>
            Создает холст.
            </summary>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="P:UMapx.Imaging.CanvasGradient.Color1">
            <summary>
            Получает или задает первый цвет холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasGradient.Color2">
            <summary>
            Получает или задает второй цвет холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasGradient.Angle">
            <summary>
            Получает или задает направление линейного градиента.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasGradient.Width">
            <summary>
            Получает или задает ширину холста.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CanvasGradient.Height">
            <summary>
            Получает или задает высоту холста.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Pixelate">
            <summary>
            Определяет фильтр пикселизации.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/Articles/2122/Image-Processing-for-Dummies-with-C-and-GDI-Part
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Pixelate.value">
            <summary>
            Параметр фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Pixelate.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр пикселизации.
            </summary>
            <param name="value">Глубина [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.Pixelate.#ctor">
            <summary>
            Инициализирует фильтр пикселизации.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Pixelate.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Pixelate.Value">
            <summary>
            Получает или задает значение глубины пикселизации.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Grid">
            <summary>
            Определяет фильтр разбиения на сетку.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/Articles/2122/Image-Processing-for-Dummies-with-C-and-GDI-Part
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Grid.value">
            <summary>
            Параметр фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Grid.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр разбиения на сетку.
            </summary>
            <param name="value">Глубина [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.Grid.#ctor">
            <summary>
            Инициализирует фильтр разбиения на сетку.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Grid.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Grid.Value">
            <summary>
            Получает или задает значение глубины разбиения.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Jitter">
            <summary>
            Определяет фильтр дрожания.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/Articles/2122/Image-Processing-for-Dummies-with-C-and-GDI-Part
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Jitter.value">
            <summary>
            Параметр фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Jitter.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр дрожания.
            </summary>
            <param name="value">Глубина [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.Jitter.#ctor">
            <summary>
            Инициализирует фильтр дрожания.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Jitter.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Jitter.Value">
            <summary>
            Получает или задает значение глубины дрожания.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Water">
            <summary>
            Определяет водный фильтр.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/Articles/2122/Image-Processing-for-Dummies-with-C-and-GDI-Part
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Water.value">
            <summary>
            Параметр фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Water.#ctor(System.Int32)">
            <summary>
            Инициализирует водный фильтр.
            </summary>
            <param name="value">Глубина [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.Water.#ctor">
            <summary>
            Инициализирует водный фильтр.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Water.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Water.Value">
            <summary>
            Получает или задает значение глубины фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Noise">
            <summary>
            Определяет фильтр шума.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/Articles/2122/Image-Processing-for-Dummies-with-C-and-GDI-Part
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Noise.value">
            <summary>
            Параметр фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Noise.#ctor(System.Int32)">
            <summary>
            Инициализирует водный фильтр.
            </summary>
            <param name="value">Глубина [0, 100]</param>
        </member>
        <member name="M:UMapx.Imaging.Noise.#ctor">
            <summary>
            Инициализирует водный фильтр.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Noise.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Noise.Value">
            <summary>
            Получает или задает значение глубины фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Shift">
            <summary>
            Определяет фильтр сдвига.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Shift.x">
            <summary>
            Смещение по оси X.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Shift.y">
            <summary>
            Смещение по оси Y.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Shift.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр сдвига.
            </summary>
            <param name="x">Значение смещения по оси X</param>
            <param name="y">Значение смещения по оси Y</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.#ctor(UMapx.Core.PointInt)">
            <summary>
            Инициализирует фильтр сдвига.
            </summary>
            <param name="point">Пара целых чисел, представляющих упорядоченную пару координат X и Y</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.#ctor">
            <summary>
            Инициализирует фильтр сдвига по оси X.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Shift.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.ShiftY(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32,System.Int32)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="stride">Ширина шага по индексу</param>
        </member>
        <member name="M:UMapx.Imaging.Shift.ShiftX(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Int32,System.Int32,System.Int32)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="stride">Ширина шага по индексу</param>
        </member>
        <member name="P:UMapx.Imaging.Shift.X">
            <summary>
            Получает или задает значение смещения по оси X.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Shift.Y">
            <summary>
            Получает или задает значение смещения по оси Y.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Flip">
            <summary>
            Определяет фильтр отображения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Flip.x">
            <summary>
            По оси X.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Flip.y">
            <summary>
            По оси Y.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Flip.#ctor">
            <summary>
            Инициализирует фильтр отображения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Flip.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Инициализирует фильтр отображения.
            </summary>
            <param name="x">Отображение по оси X</param>
            <param name="y">Отображение по оси Y</param>
        </member>
        <member name="M:UMapx.Imaging.Flip.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Flip.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Flip.X">
            <summary>
            Получает или задает отображение по оси X.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Flip.Y">
            <summary>
            Получает или задает отображение по оси Y.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Rotate">
            <summary>
            Определяет фильтр поворота.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Rotate.#ctor(System.Double,System.Drawing.Color)">
            <summary>
            Инициализирует фильтр поворота.
            </summary>
            <param name="angle">Угол поворота</param>
            <param name="color">Цвет фона</param>
        </member>
        <member name="M:UMapx.Imaging.Rotate.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Rotate.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Rotate.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Rotate.Angle">
            <summary>
            Получает или задает угол поворота.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Rotate.Color">
            <summary>
            Получает или задает цвет фона.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Crop">
            <summary>
            Определяет фильтр вырезания.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Crop.#ctor(System.Drawing.Rectangle)">
            <summary>
            Инициализирует фильтр вырезания.
            </summary>
            <param name="rectangle">Прямоугольная область</param>
        </member>
        <member name="M:UMapx.Imaging.Crop.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр вырезания.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
            <param name="width">Ширина</param>
            <param name="height">Высота</param>
        </member>
        <member name="M:UMapx.Imaging.Crop.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Crop.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Crop.Rectangle">
            <summary>
            Получает или задает прямоугольную область.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Resize">
            <summary>
            Определяет фильтр изменения размеров изображения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Resize.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр изменения размеров изображения.
            </summary>
            <param name="width">Ширина</param>
            <param name="height">Высота</param>
        </member>
        <member name="M:UMapx.Imaging.Resize.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр изменения размеров изображения.
            </summary>
            <param name="size">Ширина и высота</param>
        </member>
        <member name="M:UMapx.Imaging.Resize.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Resize.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Resize.Size">
            <summary>
            Получает или задает новый размер изображения.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Merge">
            <summary>
            Определяет фильтр наложения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Merge.transparency">
            <summary>
            Прозрачность.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Merge.point">
            <summary>
            Координаты X и Y.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Merge.#ctor(UMapx.Core.PointInt,System.Int32)">
            <summary>
            Инициализирует фильтр наложения.
            </summary>
            <param name="point">Пара целых чисел, представляющих упорядоченную пару координат X и Y</param>
            <param name="transparency">Прозрачность [0, 255]</param>
        </member>
        <member name="M:UMapx.Imaging.Merge.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр наложения.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
            <param name="transparency">Прозрачность [0, 255]</param>
        </member>
        <member name="M:UMapx.Imaging.Merge.#ctor">
            <summary>
            Инициализирует фильтр наложения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Merge.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Merge.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Merge.merge(System.Byte,System.Byte,System.Int32,System.Int32)">
            <summary>
            Реализует слияние двух случайных величин с заданными параметрами.
            </summary>
            <param name="x">Первая случайная величина</param>
            <param name="y">Вторая случайная величина</param>
            <param name="a0">Первый параметр</param>
            <param name="a1">Второй параметр</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="P:UMapx.Imaging.Merge.Transparency">
            <summary>
            Получает или задает значение прозрачности [0, 255]
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Merge.Point">
            <summary>
            Получает или задает пару целых чисел, представляющих упорядоченную пару координат X и Y.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Rectification">
            <summary>
            Определяет фильтр ректификации.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Image_rectification
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Rectification.#ctor(System.Double[0:,0:],System.Drawing.Color)">
            <summary>
            Инициализирует фильтр ректификации.
            </summary>
            <param name="homography">Матрица гомографии [3, 3]</param>
            <param name="color">Цвет фона</param>
        </member>
        <member name="M:UMapx.Imaging.Rectification.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Rectification.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Rectification.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Rectification.Homography">
            <summary>
            Получает или задает матрицу гомографии [3, 3], используемую для сопоставления изображения, 
            переданного фильтру, на накладываемое изображение.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Rectification.Color">
            <summary>
            Получает или задает цвет фона.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Texturer">
            <summary>
            Определяет фильтры текстуризации.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Texturer.#ctor(System.Double[0:,0:])">
            <summary>
            Инициализирует фильтры текстуризации.
            </summary>
            <param name="texture">Матрица-текстура</param>
        </member>
        <member name="M:UMapx.Imaging.Texturer.#ctor(System.Double[0:,0:],System.Double)">
            <summary>
            Инициализирует фильтры текстуризации.
            </summary>
            <param name="texture">Матрица-текстура</param>
            <param name="depth">Глубина фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="F:UMapx.Imaging.Texturer.rand">
            <summary>
            Генератор случайных чисел.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Texturer.r">
            <summary>
            Случайное значение.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Wood(System.Int32,System.Int32,System.Double)">
            <summary>
            Реализует построение текстуры дерева заданного размера.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="rings">Количество колец</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Textile(System.Int32,System.Int32)">
            <summary>
            Реализует построение текстуры ткани заданного размера.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Marble(System.Int32,System.Int32,System.Double,System.Double)">
            <summary>
            Реализует построение текстуры мрамора заданного размера.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="yPeriod">Период по высоте</param>
            <param name="xPeriod">Период по ширине</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Labyrinth(System.Int32,System.Int32)">
            <summary>
            Реализует построение текстуры лабиринта заданного размера.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Texturer.Clouds(System.Int32,System.Int32)">
            <summary>
            Реализует построение текстуры облаков заданного размера.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="P:UMapx.Imaging.Texturer.Texture">
            <summary>
            Получает или задает матрицу-текстуру.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Texturer.Depth">
            <summary>
            Получает или задает глубину фильтра [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Operation">
            <summary>
            Определяет фильтр линейной операции.
            <remarks>
            Данный фильтр работает по следующему алгоритму: C(x,y) = a * A(x,y) + b * B(x,y), где A, B - исходные изображения, 
            a, b - коэффициенты.
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Operation.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует фильтр линейной операции.
            </summary>
            <param name="a">Коэффициент первого изображения</param>
            <param name="b">Коэффициент второго изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Operation.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Operation.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Operation.A">
            <summary>
            Получает или задает коэффициент первого изображения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Operation.B">
            <summary>
            Получает или задает коэффициент второго изображения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Operation.Addition">
            <summary>
            Возвращает фильтр операции сложения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Operation.Subtraction">
            <summary>
            Возвращает фильтр операции вычитания.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Operation.Averaging">
            <summary>
            Возвращает фильтр операции усреднения.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.StereoAnaglyph">
            <summary>
            Определяет фильтр создания стереоэффекта для пары изображений.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://www.3dtv.at/Knowhow/AnaglyphComparison_en.aspx
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.algorithm">
            <summary>
            Алгоритм.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.StereoAnaglyph.#ctor(UMapx.Imaging.StereoAnaglyph.Anaglyph)">
            <summary>
            Инициализирует фильтр создания стереоэффекта для пары изображений.
            </summary>
            <param name="algorithm">Алгоритм</param>
        </member>
        <member name="M:UMapx.Imaging.StereoAnaglyph.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения (левое изображение)</param>
            <param name="bmSrc">Атрибуты точечного изображения (правое изображение)</param>
        </member>
        <member name="M:UMapx.Imaging.StereoAnaglyph.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.StereoAnaglyph.Algorithm">
            <summary>
            Получает или задает алгоритм.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.StereoAnaglyph.Anaglyph">
            <summary>
            Определяет алгоритм создания стереоэффекта.
            </summary>
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://www.3dtv.at/Knowhow/AnaglyphComparison_en.aspx
            </remarks>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.Anaglyph.True">
            <summary>
            Создает стереоэффект для пары изображений согласно следующим вычислениям:
            <list type="bullet">
            <item>R<sub>a</sub>=0.299*R<sub>l</sub>+0.587*G<sub>l</sub>+0.114*B<sub>l</sub>;</item>
            <item>G<sub>a</sub>=0;</item>
            <item>B<sub>a</sub>=0.299*R<sub>r</sub>+0.587*G<sub>r</sub>+0.114*B<sub>r</sub>.</item>
            </list>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.Anaglyph.Gray">
            <summary>
            Создает стереоэффект для пары изображений согласно следующим вычислениям:
            <list type="bullet">
            <item>R<sub>a</sub>=0.299*R<sub>l</sub>+0.587*G<sub>l</sub>+0.114*B<sub>l</sub>;</item>
            <item>G<sub>a</sub>=0.299*R<sub>r</sub>+0.587*G<sub>r</sub>+0.114*B<sub>r</sub>;</item>
            <item>B<sub>a</sub>=0.299*R<sub>r</sub>+0.587*G<sub>r</sub>+0.114*B<sub>r</sub>.</item>
            </list>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.Anaglyph.Color">
            <summary>
            Создает стереоэффект для пары изображений согласно следующим вычислениям:
            <list type="bullet">
            <item>R<sub>a</sub>=R<sub>l</sub>;</item>
            <item>G<sub>a</sub>=G<sub>r</sub>;</item>
            <item>B<sub>a</sub>=B<sub>r</sub>.</item>
            </list>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.Anaglyph.HalfColor">
            <summary>
            Создает стереоэффект для пары изображений согласно следующим вычислениям:
            <list type="bullet">
            <item>R<sub>a</sub>=0.299*R<sub>l</sub>+0.587*G<sub>l</sub>+0.114*B<sub>l</sub>;</item>
            <item>G<sub>a</sub>=G<sub>r</sub>;</item>
            <item>B<sub>a</sub>=B<sub>r</sub>.</item>
            </list>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.StereoAnaglyph.Anaglyph.Optimized">
            <summary>
            Создает стереоэффект для пары изображений согласно следующим вычислениям:
            <list type="bullet">
            <item>R<sub>a</sub>=0.7*G<sub>l</sub>+0.3*B<sub>l</sub>;</item>
            <item>G<sub>a</sub>=G<sub>r</sub>;</item>
            <item>B<sub>a</sub>=B<sub>r</sub>.</item>
            </list>
            </summary>
        </member>
        <member name="T:UMapx.Imaging.OilPainting">
            <summary>
            Определяет фильтр рисунка маслом.
            <remarks>
            Данный фильтр был портирован с языка C++.
            Подробное описание алгоритма можно найти на сайте:
            https://www.codeproject.com/articles/471994/oilpainteffect
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует фильтр рисунка маслом.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="depth">Глубина [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.#ctor(System.Int32,System.Int32,System.Double)">
            <summary>
            Инициализирует фильтр рисунка маслом.
            </summary>
            <param name="height">Радиус по высоте</param>
            <param name="width">Радиус по ширине</param>
            <param name="depth">Глубина [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.#ctor(UMapx.Core.SizeInt,System.Double)">
            <summary>
            Инициализирует фильтр рисунка маслом.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="depth">Глубина [0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.OilPainting.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.OilPainting.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.OilPainting.Depth">
            <summary>
            Получает или задает значение глубины [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Convolution">
            <summary>
            Определяет фильтр на основе матрицы свертки.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Convolution.#ctor(System.Double[0:,0:],System.Double,System.Boolean)">
            <summary>
            Инициализирует фильтр на основе двумерной матрицы свертки.
            </summary>
            <param name="m">Матричный оператор</param>
            <param name="offset">Значение смещения</param>
            <param name="twoside">Двусторонняя обработка или нет</param>
        </member>
        <member name="M:UMapx.Imaging.Convolution.#ctor">
            <summary>
            Инициализирует фильтр на основе двумерной матрицы свертки.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Data(System.Double[0:,0:])">
            <summary>
            Устанавливает значения параметров свертки.
            </summary>
            <param name="m">Матричный оператор</param>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Convolution.G(System.Double,System.Double)">
            <summary>
            Получает значение оператора градиента.
            </summary>
            <param name="Gx">Случайная величина</param>
            <param name="Gy">Случайная величина</param>
            <returns>Число двойной точности</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Tetta(System.Double,System.Double)">
            <summary>
            Получает направление оператора градиента.
            </summary>
            <param name="Gx">Случайная величина</param>
            <param name="Gy">Случайная величина</param>
            <returns>Число двойной точности</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.LoGaussian(System.Int32,System.Int32,System.Double)">
            <summary>
            Реализует построение перевернутого оператора Гаусса.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="sigma">Отклонение (!=0)</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Gaussian(System.Int32,System.Int32,System.Double)">
            <summary>
            Реализует построение оператора Гаусса.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="sigma">Отклонение (!=0)</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Unsharp(System.Int32,System.Int32,System.Double)">
            <summary>
            Реализует построение оператора "нерезкого маскирования".
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="sigma">Отклонение (!=0)</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.HighPass(System.Int32,System.Int32,System.Double)">
            <summary>
            Реализует построение оператора выделения верхних частот.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="boost">Усиление</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.LowPass(System.Int32,System.Int32)">
            <summary>
            Реализует построение оператора выделения нижних частот.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Emboss(System.Int32)">
            <summary>
            Реализует построение оператора выделения рельефа.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Roberts">
            <summary>
            Реализует построение оператора Робертса [2 x 2].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Prewitt">
            <summary>
            Реализует построение оператора Прюитта [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Sobel">
            <summary>
            Реализует построение оператора Собеля [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Scharr">
            <summary>
            Реализует построение оператора Щарра [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Laplacian">
            <summary>
            Реализует построение оператора Лапласа [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.LaplacianDiagonal">
            <summary>
            Реализует построение диагонального оператора Лапласа [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.LaplacianInvert">
            <summary>
            Реализует построение обратного оператора Лапласа [3 x 3].
            </summary>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Kirsh(UMapx.Imaging.Gradient)">
            <summary>
            Реализует построение оператора-компаса Кирша [3 x 3].
            </summary>
            <param name="direction">Направление оператора градиента</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="M:UMapx.Imaging.Convolution.Roberts(UMapx.Imaging.Gradient)">
            <summary>
            Реализует построение оператора-компаса Робертса [2 x 2].
            </summary>
            <param name="direction">Направление оператора градиента</param>
            <returns>Матричный оператор</returns>
        </member>
        <member name="P:UMapx.Imaging.Convolution.Matrix">
            <summary>
            Получает или задает матричный оператор.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Convolution.Offset">
            <summary>
            Получает или задает значение смещения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Convolution.Twoside">
            <summary>
            Двусторонняя обработка или нет.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Morphology">
            <summary>
            Определяет фильтр морфологических операций.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Morphology.threshold">
            <summary>
            Пороговое значение.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Morphology.rw">
            <summary>
            Ширина фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Morphology.rh">
            <summary>
            Высота фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Morphology.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="threshold">Пороговое значение</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="threshold">Пороговое значение</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.#ctor(UMapx.Core.SizeInt,System.Int32)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="size">Размеры фильтра</param>
            <param name="threshold">Пороговое значение</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.ApplyVertical(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.ApplyHorizontal(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Median(System.Int32)">
            <summary>
            Инициализирует фильтр медианы.
            </summary>
            <param name="radius">Радиус</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Erosion(System.Int32)">
            <summary>
            Инициализирует фильтр эрозии.
            </summary>
            <param name="radius">Радиус</param>
        </member>
        <member name="M:UMapx.Imaging.Morphology.Dilatation(System.Int32)">
            <summary>
            Инициализирует фильтр расширения.
            </summary>
            <param name="radius">Радиус</param>
        </member>
        <member name="P:UMapx.Imaging.Morphology.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.Morphology.Threshold">
            <summary>
            Получает или задает пороговое значение.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Dilatation">
            <summary>
            Определяет фильтр расширения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Dilatation.rw">
            <summary>
            Ширина фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Dilatation.rh">
            <summary>
            Высота фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр расширения.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр расширения.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр расширения.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.ApplyVertical(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Dilatation.ApplyHorizontal(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.Dilatation.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Erosion">
            <summary>
            Определяет фильтр эрозии.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Erosion.rw">
            <summary>
            Ширина фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Erosion.rh">
            <summary>
            Высота фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Erosion.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр эрозии.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр эрозии.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр эрозии.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.ApplyVertical(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Erosion.ApplyHorizontal(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.Erosion.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.TopHat">
            <summary>
            Определяет фильтр Top-Hat.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.TopHat.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр Top-Hat.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.TopHat.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр Top-Hat.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.TopHat.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр Top-Hat.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.TopHat.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.TopHat.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.TopHat.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.TopHat.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BottomHat">
            <summary>
            Определяет фильтр Bottom-Hat.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр Bottom-Hat.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр Bottom-Hat.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр Bottom-Hat.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.BottomHat.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.BottomHat.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Closing">
            <summary>
            Определяет фильтр закрытия.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Closing.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр закрытия.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Closing.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр закрытия.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Closing.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр закрытия.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Closing.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Closing.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Closing.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Closing.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Opening">
            <summary>
            Определяет фильтр открытия.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Opening.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр открытия.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Opening.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр открытия.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Opening.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр открытия.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.Opening.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.Opening.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.Opening.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.Opening.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.EdgeGlow">
            <summary>
            Определяет фильтр свечения краев.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр свечения краев.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр свечения краев.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр свечения краев.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.EdgeGlow.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.EdgeGlow.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BoxBlur">
            <summary>
            Определяет фильтр квадратного размытия.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BoxBlur.rw">
            <summary>
            Ширина фильтра.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BoxBlur.rh">
            <summary>
            Высота фильтра.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="radius">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр квадратного размытия.
            </summary>
            <param name="size">Размеры фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.ApplyVertical(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BoxBlur.ApplyHorizontal(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.BoxBlur.Size">
            <summary>
            Получает или задает размеры фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BradleyLocalThreshold">
            <summary>
            Определяет фильтр локальной бинаризации Брэдли.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BradleyLocalThreshold.gb">
            <summary>
            Фильтр локального усреднения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BradleyLocalThreshold.difference">
            <summary>
            Предел разницы яркости между пикселем обработки и средним значением локальных пикселей.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BradleyLocalThreshold.averaging">
            <summary>
            Усреднять значения пикселей или нет.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.#ctor(System.Int32,System.Double,System.Boolean)">
            <summary>
            Инициализирует фильтр локальной бинаризации Брэдли.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="difference">Предел разницы яркости между пикселем обработки и средним значением локальных пикселей [0, 1]</param>
            <param name="averaging">Усреднять значения пикселей или нет</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.#ctor(System.Int32,System.Int32,System.Double,System.Boolean)">
            <summary>
            Инициализирует фильтр локальной бинаризации Брэдли.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="difference">Предел разницы яркости между пикселем обработки и средним значением локальных пикселей [0, 1]</param>
            <param name="averaging">Усреднять значения пикселей или нет</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.#ctor(UMapx.Core.SizeInt,System.Double,System.Boolean)">
            <summary>
            Инициализирует фильтр локальной бинаризации Брэдли.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="difference">Предел разницы яркости между пикселем обработки и средним значением локальных пикселей [0, 1]</param>
            <param name="averaging">Усреднять значения пикселей или нет</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.BradleyLocalThreshold.bradley(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.BradleyLocalThreshold.Difference">
            <summary>
            Получает или задает предел разницы яркости между пикселем обработки и средним значением локальных пикселей.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.BradleyLocalThreshold.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.BradleyLocalThreshold.Averaging">
            <summary>
            Усреднять значения пикселей или нет.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HSBFilter">
            <summary>
            Определяет фильтр на основе структуры HSB.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSBFilter.#ctor(System.Int32,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="hue">Оттенок [0, 359]</param>
            <param name="saturation">Насыщенность [-1, 1]</param>
            <param name="brightness">Яркость [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HSBFilter.#ctor">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSBFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HSBFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.HSBFilter.Hue">
            <summary>
            Оттенок [0, 359].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HSBFilter.Saturation">
            <summary>
            Насыщенность [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HSBFilter.Brightness">
            <summary>
            Яркость [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HSLFilter">
            <summary>
            Определяет фильтр на основе структуры HSL.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSLFilter.#ctor(System.Int32,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
            <param name="hue">Оттенок [0, 359]</param>
            <param name="saturation">Насыщенность [-1, 1]</param>
            <param name="lightness">Световая интенсивность [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HSLFilter.#ctor">
            <summary>
            Инициализирует фильтр на основе структуры HSB.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HSLFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.HSLFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.HSLFilter.Hue">
            <summary>
            Оттенок [0, 359].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HSLFilter.Saturation">
            <summary>
            Насыщенность [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HSLFilter.Lightness">
            <summary>
            Световая интенсивность [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.YCbCrFilter">
            <summary>
            Определяет фильтр на основе структуры YCbCr.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.YCbCrFilter.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр на основе структуры YCbCr.
            </summary>
            <param name="y">Y [-1, 1]</param>
            <param name="cb">Cb [-1, 1]</param>
            <param name="cr">Cr [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.YCbCrFilter.#ctor">
            <summary>
            Инициализирует фильтр на основе структуры YCbCr.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.YCbCrFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.YCbCrFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.YCbCrFilter.Y">
            <summary>
            Y [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YCbCrFilter.Cb">
            <summary>
            Cb [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.YCbCrFilter.Cr">
            <summary>
            Cr [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.CMYKFilter">
            <summary>
            Определяет фильтр на основе структуры CMYK.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CMYKFilter.#ctor(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует фильтр на основе структуры CMYK.
            </summary>
            <param name="cyan">Голубой [-1, 1]</param>
            <param name="magenta">Пурпурный [-1, 1]</param>
            <param name="yellow">Желтый [-1, 1]</param>
            <param name="keycolor">Черный [-1, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.CMYKFilter.#ctor">
            <summary>
            Инициализирует фильтр на основе структуры CMYK.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.CMYKFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.CMYKFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.CMYKFilter.Cyan">
            <summary>
            Голубой [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CMYKFilter.Magenta">
            <summary>
            Пурпурный [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CMYKFilter.Yellow">
            <summary>
            Желтый [-1, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.CMYKFilter.Keycolor">
            <summary>
            Черный [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.RGBFilter">
            <summary>
            Определяет фильтр на основе структуры RGB.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RGBFilter.#ctor(System.Int32,System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр на основе структуры RGB.
            </summary>
            <param name="red">Красный [-255, 255]</param>
            <param name="green">Зеленый [-255, 255]</param>
            <param name="blue">Синий [-255, 255]</param>
        </member>
        <member name="M:UMapx.Imaging.RGBFilter.#ctor">
            <summary>
            Инициализирует фильтр на основе структуры RGB.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.RGBFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.RGBFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.RGBFilter.Red">
            <summary>
            Красный [-255, 255].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.RGBFilter.Green">
            <summary>
            Зеленый [-255, 255].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.RGBFilter.Blue">
            <summary>
            Синий [-255, 255].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HistogramEqualization">
            <summary>
            Определяет фильтр глобальной эквализации гистограммы.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            http://www.cromwell-intl.com/3d/histogram/
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HistogramEqualization.#ctor">
            <summary>
            Инициализирует фильтр глобальной эквализации гистограммы.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HistogramEqualization.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HistogramEqualization.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="T:UMapx.Imaging.LocalHistogramEqualization">
            <summary>
            Определяет фильтр локальной эквализации гистограммы.
            <remarks>
            Подробное описание алгоритма можно найти на сайте:
            http://angeljohnsy.blogspot.com/2011/06/local-histogram-equalization.html
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.#ctor(System.Int32)">
            <summary>
            Инициализирует фильтр локальной эквализации гистограммы.
            </summary>
            <param name="radius">Радиус матрицы</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует фильтр локальной эквализации гистограммы.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.#ctor(UMapx.Core.SizeInt)">
            <summary>
            Инициализирует фильтр локальной эквализации гистограммы.
            </summary>
            <param name="size">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.Data(UMapx.Core.SizeInt)">
            <summary>
            Устанавливает значения параметров свертки.
            </summary>
            <param name="size">Размер фильтра</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmSrc">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.Apply(System.Drawing.Bitmap,System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="Src">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramEqualization.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="P:UMapx.Imaging.LocalHistogramEqualization.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HistogramStretch">
            <summary>
            Определяет фильтр глобального сжатия гистограммы.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HistogramStretch.range">
            <summary>
            { Min, Max }.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HistogramStretch.#ctor(System.Double,System.Double,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр глобального сжатия гистограммы.
            </summary>
            <param name="min">Минимальное значение яркости [0, 1]</param>
            <param name="max">Максимально значение яркости [0, 1]</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.HistogramStretch.#ctor(UMapx.Core.RangeDouble,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр глобального сжатия гистограммы.
            </summary>
            <param name="range">Диапазон значений яркости</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.HistogramStretch.Rebuild">
            <summary>
            Реализует перестроение данных фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HistogramStretch.Range">
            <summary>
            Получает или задает диапазон значений, которые принимает сигнал.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.LocalHistogramStretch">
            <summary>
            Определяет класс фильтра локального сжатия гистограммы.
            <remarks>
            Фильтр используется для коррекции неравномерно освещенных изображений и повышения детализации.
            Более подробную информацию можно найти на сайте:
            http://www.academia.edu/7629047/Image_enhancement_by_local_histogram_stretching
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.gb">
            <summary>
            Фильтр локального усреднения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.er">
            <summary>
            Фильтр эрозии.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.di">
            <summary>
            Фильтр приращения.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.space">
            <summary>
            Цветовое пространство.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.contrast">
            <summary>
            Коэффициент сжатия контраста.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.LocalHistogramStretch.smoothing">
            <summary>
            Сглаживание.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.#ctor(System.Int32,UMapx.Imaging.Space,System.Double,System.Boolean)">
            <summary>
            Иницилазирует класс фильтра локального сжатия гистограммы.
            </summary>
            <param name="radius">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [0, 1]</param>
            <param name="smoothing">Использовать сглаживание или нет</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.#ctor(System.Int32,System.Int32,UMapx.Imaging.Space,System.Double,System.Boolean)">
            <summary>
            Иницилазирует класс фильтра локального сжатия гистограммы.
            </summary>
            <param name="width">Ширина фильтра</param>
            <param name="height">Высота фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [0, 1]</param>
            <param name="smoothing">Использовать сглаживание или нет</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.#ctor(UMapx.Core.SizeInt,UMapx.Imaging.Space,System.Double,System.Boolean)">
            <summary>
            Иницилазирует класс фильтра локального сжатия гистограммы.
            </summary>
            <param name="size">Размер фильтра</param>
            <param name="space">Цветовое пространство</param>
            <param name="contrast">Коэффициент сжатия контраста [0, 1]</param>
            <param name="smoothing">Использовать сглаживание или нет</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.Apply(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmMax">Атрибуты точечного изображения</param>
            <param name="bmMin">Атрибуты точечного изображения</param> 
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.ApplyRGB(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmMax">Атрибуты точечного изображения</param>
            <param name="bmMin">Атрибуты точечного изображения</param> 
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.ApplyHSB(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmMax">Атрибуты точечного изображения</param>
            <param name="bmMin">Атрибуты точечного изображения</param> 
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.ApplyHSL(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmMax">Атрибуты точечного изображения</param>
            <param name="bmMin">Атрибуты точечного изображения</param> 
        </member>
        <member name="M:UMapx.Imaging.LocalHistogramStretch.ApplyYCbCr(System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData,System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="bmMax">Атрибуты точечного изображения</param>
            <param name="bmMin">Атрибуты точечного изображения</param> 
        </member>
        <member name="P:UMapx.Imaging.LocalHistogramStretch.Size">
            <summary>
            Получает или задает размер фильтра.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalHistogramStretch.Space">
            <summary>
            Получает или задает цветовое пространство.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalHistogramStretch.Contrast">
            <summary>
            Получает или задает значение коэффициента сжатия контраста [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Imaging.LocalHistogramStretch.Smoothing">
            <summary>
            Использовать сглаживание или нет.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BitmapFilter">
            <summary>
            Определяет фильтр обработки изображений.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BitmapFilter.filter">
            <summary>
            Направленный фильтр.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BitmapFilter.space">
            <summary>
            Цветовое пространство.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.#ctor(UMapx.Transform.IFilter,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр обработки изображений.
            </summary>
            <param name="filter">Фильтр</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.ApplyRGB(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.ApplyHSB(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.ApplyHSL(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapFilter.ApplyYCbCr(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="P:UMapx.Imaging.BitmapFilter.Filter">
            <summary>
            Получает или задает фильтр.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.BitmapFilter.Space">
            <summary>
            Получает или задает цветовое пространство.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BitmapBlender">
            <summary>
            Определяет фильтр смешивания изображений.
            <remarks>
            Данный фильтр усредняет несколько входных изображений одинакового размера, получая тем самым единственное
            выходное изображение. Фильтр может использоваться для реализации эффектов HDR.
            Более подробную информацию можно найти на сайте:
            https://web.stanford.edu/class/cs231m/lectures/lecture-5-stitching-blending.pdf
            (стр. 65-75)
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BitmapBlender.filter">
            <summary>
            Фильтр смешивания.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.BitmapBlender.space">
            <summary>
            Цветовое пространство.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.#ctor(UMapx.Transform.IBlendFilter,UMapx.Imaging.Space)">
            <summary>
            Инициализирует фильтр смешивания изображений.
            </summary>
            <param name="filter">Фильтр смешивания</param>
            <param name="space">Цветовое пространство</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.Apply(System.Drawing.Bitmap[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="images">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.Apply(System.Drawing.Imaging.BitmapData[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="images">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyRGB(System.Drawing.Bitmap[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="Data">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyRGB(System.Drawing.Imaging.BitmapData[])">
            <summary>
            Применяет фильтр к массиву атрибутов точечных рисунков.
            </summary>
            <param name="bmData">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyYCbCr(System.Drawing.Bitmap[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="Data">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyYCbCr(System.Drawing.Imaging.BitmapData[])">
            <summary>
            Применяет фильтр к массиву атрибутов точечных рисунков.
            </summary>
            <param name="bmData">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyHSB(System.Drawing.Bitmap[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="Data">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyHSB(System.Drawing.Imaging.BitmapData[])">
            <summary>
            Применяет фильтр к массиву атрибутов точечных рисунков.
            </summary>
            <param name="bmData">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyHSL(System.Drawing.Bitmap[])">
            <summary>
            Применяет фильтр к массиву точечных рисунков.
            </summary>
            <param name="Data">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapBlender.ApplyHSL(System.Drawing.Imaging.BitmapData[])">
            <summary>
            Применяет фильтр к массиву атрибутов точечных рисунков.
            </summary>
            <param name="bmData">Массив точечных рисунков</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="P:UMapx.Imaging.BitmapBlender.Filter">
            <summary>
            Получает или задает фильтр смешивания.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.BitmapBlender.Space">
            <summary>
            Получает или задает цветовое пространство.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HoughLine">
            <summary>
            Определяет линию Хафа.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughLine.Theta">
            <summary>
            Наклон линии - угол между полярной осью и радиусом линии θ ∈ [0, 180).
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughLine.Radius">
            <summary>
            Расстояние линии от центра изображения (-inf, +inf).
            <remarks>
            Отрицательный радиус линии означает, что линия находится в нижней части системы полярных координат. Поэтому 
            угол θ должен быть увеличен на 180 градусов, а радиус должен быть положительным.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughLine.Intensity">
            <summary>
            Абсолютная интенсивность линии (0, +inf).
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughLine.RelativeIntensity">
            <summary>
            Относительная интенсивность линии (0, 1].
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughLine.#ctor(System.Double,System.Int16,System.Int16,System.Double)">
            <summary>
            Инициализирует линию Хафа.
            </summary>
            <param name="theta">Наклон линии θ ∈ [0, 180)</param>
            <param name="radius">Расстояние линии от центра изображения (-inf, +inf)</param>
            <param name="intensity">Абсолютная интенсивность линии (0, +inf)</param>
            <param name="relativeIntensity">Относительная интенсивность линии (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HoughLine.CompareTo(System.Object)">
            <summary>
            Сравнивает объект с другим экземпляром этого класса.
            </summary>
            <param name="value">Объект</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="T:UMapx.Imaging.HoughCircle">
            <summary>
            Определяет окружность Хафа.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughCircle.X">
            <summary>
            Координата X.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughCircle.Y">
            <summary>
            Координата Y.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughCircle.Radius">
            <summary>
            Радиус окружности.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughCircle.Intensity">
            <summary>
            Абсолютная интенсивность линии (0, +inf).
            </summary>
        </member>
        <member name="F:UMapx.Imaging.HoughCircle.RelativeIntensity">
            <summary>
            Относительная интенсивность линии (0, 1].
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughCircle.#ctor(System.Int32,System.Int32,System.Int32,System.Int16,System.Double)">
            <summary>
            Инициализирует окружность Хафа.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
            <param name="radius">Радиус окружности</param>
            <param name="intensity">Абсолютная интенсивность линии (0, +inf)</param>
            <param name="relativeIntensity">Относительная интенсивность линии (0, 1]</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircle.CompareTo(System.Object)">
            <summary>
            Сравнивает объект с другим экземпляром этого класса.
            </summary>
            <param name="value">Объект</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="T:UMapx.Imaging.HoughLineTransform">
            <summary>
            Определяет фильтр преобразования Хафа.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.#ctor">
            <summary>
            Иницилизирует фильтр преобразования Хафа.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.GetMostIntensiveLines(System.Int32)">
            <summary>
            Возвращает массив линий с абсолютной интенсивностью.
            </summary>
            <param name="count">Количество</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.GetLinesByRelativeIntensity(System.Double)">
            <summary>
            Возвращает массив линий с относительной интенсивностью.
            </summary>
            <param name="minRelativeIntensity">Минимальная относительная интесивность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.ToBitmap">
            <summary>
            Возвращает синограмму Хафа.
            </summary>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HoughLineTransform.CollectLines">
            <summary>
            Collect lines with intesities greater or equal then specified.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughLineTransform.StepsPerDegree">
            <summary>
            Шаг в грудасах.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughLineTransform.MinLineIntensity">
            <summary>
            Получает минимальную интенсивность линий.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughLineTransform.MaxIntensity">
            <summary>
            Получает максимальную интенсивность линий.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughLineTransform.LocalPeakRadius">
            <summary>
            Получает или задает радиус поиска локального пикового значения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughLineTransform.LinesCount">
            <summary>
            Получает количество найденных линий.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.HoughCircleTransform">
            <summary>
            Определяет фильтр преобразования Хафа.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.#ctor(System.Int32)">
            <summary>
            Иницилизирует фильтр преобразования Хафа.
            </summary>
            <param name="radiusToDetect">Радиус поиска</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.GetMostIntensiveCircles(System.Int32)">
            <summary>
            Возвращает массив окружностей с абсолютной интенсивностью.
            </summary>
            <param name="count">Количество</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.GetCirclesByRelativeIntensity(System.Double)">
            <summary>
            Возвращает массив окружностей с относительной интенсивностью.
            </summary>
            <param name="minRelativeIntensity">Минимальная относительная интесивность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.Apply(System.Drawing.Bitmap)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="Data">Точечный рисунок</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.Apply(System.Drawing.Imaging.BitmapData)">
            <summary>
            Применяет фильтр к точечному рисунку.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.ToBitmap">
            <summary>
            Возвращает синограмму Хафа.
            </summary>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.CollectCircles">
            <summary>
            Collect circles with intesities greater or equal then specified.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.DrawHoughCircle(System.Int32,System.Int32)">
            <summary>
            Draw Hough circle:
            http://www.cs.unc.edu/~mcmillan/comp136/Lecture7/circle.html
            TODO: more optimizations of circle drawing could be done.
            </summary>
            <param name="xCenter">Co. X</param>
            <param name="yCenter">Co. Y</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.SetHoughCirclePoints(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Set circle points.
            </summary>
            <param name="cx">Cx</param>
            <param name="cy">Cy</param>
            <param name="x">Co. X</param>
            <param name="y">Co. Y</param>
        </member>
        <member name="M:UMapx.Imaging.HoughCircleTransform.SetHoughPoint(System.Int32,System.Int32)">
            <summary>
            Set point.
            </summary>
            <param name="x">Co. X</param>
            <param name="y">Co. Y</param>
        </member>
        <member name="P:UMapx.Imaging.HoughCircleTransform.MinCircleIntensity">
            <summary>
            Получает или задает минимальную интенсивность окружности.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughCircleTransform.LocalPeakRadius">
            <summary>
            Получает или задает радиус поиска локального пикового значения.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughCircleTransform.MaxIntensity">
            <summary>
            Получает максимальную интенсивность линий.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.HoughCircleTransform.CirclesCount">
            <summary>
            Получает количество найденных окружностей.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.BitmapConverter">
            <summary>
            Используется для работы с точечными изображениями.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Ico(System.Drawing.Bitmap,System.Int32)">
            <summary>
            Конвертирует точечный рисунок в файл значка.
            </summary>
            <param name="b">Точечный рисунок</param>
            <param name="size">Размер (ширина = высота)</param>
            <returns>Файл значка</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Jpeg(System.Drawing.Bitmap)">
            <summary>
            Конвертирует точечный рисунок в JPEG формат.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Bmp(System.Drawing.Bitmap)">
            <summary>
            Конвертирует точечный рисунок в BMP формат.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Gif(System.Drawing.Bitmap)">
            <summary>
            Конвертирует точечный рисунок в GIF формат.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Png(System.Drawing.Bitmap)">
            <summary>
            Конвертирует точечный рисунок в Png формат.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2Tiff(System.Drawing.Bitmap)">
            <summary>
            Конвертирует точечный рисунок в Tiff формат.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap(System.Drawing.Imaging.BitmapData)">
            <summary>
            Получает точечный рисунок из атрибутов точечного изображения.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap(System.Drawing.Bitmap,System.Drawing.Imaging.PixelFormat)">
            <summary>
            Конвертирует точечный рисунок в определенный формат
            </summary>
            <param name="b">Точечный рисунок</param>
            <param name="pixelformat">Формат данных о цвете для каждой точки точечного рисунка</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Lock32bpp(System.Drawing.Bitmap)">
            <summary>
            Блокирует точечный рисунок в системной памяти.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Атрибуты точечного изображения</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Lock8bpp(System.Drawing.Bitmap)">
            <summary>
            Блокирует точечный рисунок в системной памяти.
            </summary>
            <param name="b">Точечный рисунок</param>
            <returns>Атрибуты точечного изображения</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Unlock(System.Drawing.Bitmap,System.Drawing.Imaging.BitmapData)">
            <summary>
            Разблокирует точечный рисунок из системной памяти.
            </summary>
            <param name="b">Точечный рисунок</param>
            <param name="bmData">Атрибуты точечного изображения</param>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2RGB(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в RGBA-структуру.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>RGBA-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2RGB(System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в RGBA-структуру.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>RGBA-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.RGB2Bitmap(System.Double[][0:,0:])">
            <summary>
            Преобразовывает RGBA-структуру в цветное изображение.
            </summary>
            <param name="array">RGBA-структура</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2HSB(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в HSB-структуру.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>HSB-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2HSB(System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в HSB-структуру.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>HSB-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.HSB2Bitmap(System.Double[][0:,0:])">
            <summary>
            Преобразовывает HSB-структуру в цветное изображение.
            </summary>
            <param name="array">HSB-структура</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2HSL(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в HSL-структуру.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>HSL-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2HSL(System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в HSL-структуру.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>HSL-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.HSL2Bitmap(System.Double[][0:,0:])">
            <summary>
            Преобразовывает HSL-структуру в цветное изображение.
            </summary>
            <param name="array">HSL-структура</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2YCbCr(System.Drawing.Bitmap,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в YCbCr-структуру.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>YCbCr-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Bitmap2YCbCr(System.Drawing.Imaging.BitmapData,System.Boolean)">
            <summary>
            Преобразовывает точечный рисунок в YCbCr-структуру.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="alpha">Учитывать альфа-канал или нет</param>
            <returns>YCbCr-структура</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.YCbCr2Bitmap(System.Double[][0:,0:])">
            <summary>
            Преобразовывает YCbCr-структуру в цветное изображение.
            </summary>
            <param name="array">YCbCr-структура</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Imaging.BitmapConverter.Dim(System.Int32,System.Int32,System.Int32)">
            <summary>
            Возвращает набор матриц в соответствии с заданными параметрами.
            </summary>
            <param name="length">Длина набора</param>
            <param name="height">Высота матриц</param>
            <param name="width">Ширина матриц</param>
            <returns>Набор матриц</returns>
        </member>
        <member name="T:UMapx.Imaging.Intensity">
            <summary>
            Используется для работы с яркостью, представленной в виде значения, принадлежащего интервалу [0, 1].
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Intensity.log05">
            <summary>
            Натуральный логарифм от 0.5.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Intensity.logEpsilon">
            <summary>
            Погрешность вычисления логарифма.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Intensity.SingleScaleRetinex(System.Double,System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует алгоритм коррекции яркости Single Scale Retinex.
            </summary>
            <param name="x">Яркость</param>
            <param name="xlow">Яркость под воздействием фильтра</param>
            <param name="nbase">Основание логарифма</param>
            <param name="a">Коэффициент сжатия [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.SingleScaleRetinex(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает маску коррекции яркости Single Scale Retinex.
            </summary>
            <param name="nbase">Основание логарифма</param>
            <param name="a">Коэффициент сжатия (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LocalContrastInversion(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует алгоритм инверсии локального контраста.
            </summary>
            <param name="x">Яркость</param>
            <param name="xlow">Яркость под воздействием НЧ-фильтра</param>
            <param name="a">Коэффициент сжатия (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LocalContrastInversion(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает маску инверсии локального контраста.
            </summary>
            <param name="a">Коэффициент сжатия (0, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LocalContrastEnhancement(System.Double,System.Double,System.Double)">
            <summary>
            Реализует алгоритм локального улучшения контраста.
            </summary>
            <param name="x">Яркость</param>
            <param name="xlow">Яркость под воздействием НЧ-фильтра</param>
            <param name="a">Коэффициент сжатия [-1, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LocalContrastEnhancement(System.Double,System.Int32)">
            <summary>
            Возвращает маску локального улучшения контраста.
            </summary>
            <param name="a">Коэффициент сжатия [-1, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.HomomorphicEnhancement(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует алгоритм гомоморфной обработки.
            </summary>
            <param name="x">Яркость</param>
            <param name="mu">Яркость под воздействием НЧ-фильтра</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.HomomorphicEnhancement(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает маску гомоморфной обработки.
            </summary>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение (0, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.KsiContrastEnchancement(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует алгоритм ξ-функции повышения контраста.
            </summary>
            <param name="x">Яркость</param>
            <param name="mu">Математическое ожидание</param>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение [-1, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.KsiContrastEnchancement(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает маску ξ-функции повышения контраста.
            </summary>
            <param name="a">Коэффициент сжатия контраста [-1, 1]</param>
            <param name="b">Смещение [-1, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.SAUCE(System.Double,System.Double,System.Double)">
            <summary>
            Реализует SAUCE-алгоритм.
            </summary>
            <param name="x">Яркость</param>
            <param name="mu">Математическое ожидание</param>
            <param name="d">Степень отличия [0, 1]</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.SAUCE(System.Double,System.Int32)">
            <summary>
            Возвращает маску SAUCE-алгоритма.
            </summary>
            <param name="a">Коэффициент сжатия [-1, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LogStretch(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует логарифимическое сжатие случайной величины.
            </summary>
            <param name="x">Яркость</param>
            <param name="mu">Математическое ожидание</param>
            <param name="s">Уровень теней</param>
            <param name="l">Уровень светов</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LogStretch(System.Double,System.Double,System.Int32)">
            <summary>
            Возвращает маску логарифимического сжатия.
            </summary>
            <param name="s">Уровень теней</param>
            <param name="l">Уровень светов</param>
            <param name="length">Размерность массива</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LogPow(System.Double,System.Double)">
            <summary>
            Возвращает число, возведенное в логарифмическую степень.
            </summary>
            <param name="a">Число</param>
            <param name="power">Степень</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Gamma(System.Double,System.Int32)">
            <summary>
            Получает маску для гамма-коррекции.
            </summary>
            <param name="g">Гамма</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Gamma(System.Double,System.Double)">
            <summary>
            Реализует гамму-коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="g">Гамма</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Shift(System.Double,System.Int32)">
            <summary>
            Получает маску для коррекции ко смещением случайной величины.
            </summary>
            <param name="b">Сдвиг (-0.5, 0.5)</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Shift(System.Double,System.Double)">
            <summary>
            Реализует коррекцию ко смещением случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="b">Сдвиг (-0.5, 0.5)</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Bin(System.Double,System.Int32)">
            <summary>
            Получает маску для бинаризации.
            </summary>
            <param name="threshold">Пороговое значение [0, 1]</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Bin(System.Double,System.Double)">
            <summary>
            Реализует бинаризацию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="threshold">Пороговое значение [0, 1]</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Exposure(System.Double,System.Int32)">
            <summary>
            Получает маску для экспозиционной коррекции.
            </summary>
            <param name="average">Среднее число</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Exposure(System.Double,System.Double)">
            <summary>
            Реализует экспозиционную коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="average">Среднее число</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Sin(System.Double,System.Int32)">
            <summary>
            Получает маску для синусоидальной коррекции.
            </summary>
            <param name="delta">Дельта</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Sin(System.Double,System.Double)">
            <summary>
            Реализует синусоидальную коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="delta">Дельта</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Cos(System.Double,System.Int32)">
            <summary>
            Получает маску для косинусоидальной коррекции.
            </summary>
            <param name="delta">Дельта</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Cos(System.Double,System.Double)">
            <summary>
            Реализует косинусоидальную коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="delta">Дельта</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Log(System.Double,System.Double,System.Int32)">
            <summary>
            Получает маску для логарифмической коррекции.
            </summary>
            <param name="a">Основание логарифма</param>
            <param name="delta">Дельта</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Log(System.Double,System.Double,System.Double)">
            <summary>
            Реализует логарифмическую коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="a">Основание логарифма</param>
            <param name="delta">Дельта</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Add(System.Double,System.Int32)">
            <summary>
            Получает маску для коррекции по значению Y = (X + V).
            </summary>
            <param name="value">Значение</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Contrast(System.Double,System.Int32)">
            <summary>
            Получает маску для коррекции контрастности.
            </summary>
            <param name="value">Значение</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Contrast(System.Double,System.Double)">
            <summary>
            Реализует коррекцию контрастности случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="value">Контрастность</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LogContrast(System.Double,System.Int32)">
            <summary>
            Получает маску для коррекции контрастности.
            </summary>
            <param name="power">Значение</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.LogContrast(System.Double,System.Double)">
            <summary>
            Реализует алгоритм глобальной коррекции контраста.
            </summary>
            <param name="x">Яркость</param>
            <param name="power">Степень</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Invert(System.Int32)">
            <summary>
            Получает маску инверсии.
            </summary>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Invert(System.Double)">
            <summary>
            Инвертирует случайную величину.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Equalize(System.Double,System.Double,System.Double)">
            <summary>
            Эквализирует случайную величину относительно {min, max} диапазона.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="max">Максимальное значение, которое принимает случайная величина</param>
            <param name="min">Минимальное значение, которое принимает случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Equalize(System.Double,System.Double,System.Int32)">
            <summary>
            Получает маску для эквализации случайной величины относительно {min, max} диапазона.
            </summary>
            <param name="max">Максимальное значение, которое принимает случайная величина</param>
            <param name="min">Минимальное значение, которое принимает случайная величина</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Linear(UMapx.Core.RangeDouble,System.Double,System.Int32)">
            <summary>
            Получает маску для линейной коррекции.
            </summary>
            <param name="range">Пара чисел Max и Min</param>
            <param name="delta">Дельта</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Linear(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Получает маску для линейной коррекции.
            </summary>
            <param name="xmax">Максимальное значение, принимаемое случайной величиной</param>
            <param name="xmin">Минимальное значение, принимаемое случайной величиной</param>
            <param name="delta">Дельта</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Linear(System.Double,System.Double,System.Double,System.Double)">
            <summary>
            Реализует линейную коррекцию случайной величины.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="xmax">Максимальное значение, принимаемое случайной величиной</param>
            <param name="xmin">Минимальное значение, принимаемое случайной величиной</param>
            <param name="delta">Дельта</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Levels(System.Double,System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Получает маску для коррекции уровней.
            </summary>
            <param name="xmin">Минимальное значение входного параметра</param>
            <param name="xmax">Максимальное значение входного параметра</param>
            <param name="ymin">Минимальное значение выходного параметра</param>
            <param name="ymax">Максимальное значение выходного параметра</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Levels(UMapx.Core.RangeDouble,UMapx.Core.RangeDouble,System.Int32)">
            <summary>
            Получает маску для коррекции уровней.
            </summary>
            <param name="input">Входные значения</param>
            <param name="output">Выходные значения</param>
            <param name="length">Размерность массива</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Intensity.Quantize(System.Int32,System.Int32)">
            <summary>
            Получает маску для квантования по уровню.
            </summary>
            <param name="levels">Количество уровней квантования</param>
            <param name="length">Количество уровней представления</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Imaging.BlendMode">
            <summary>
            Используется для смешивания слоев.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://www.pegtop.net/delphi/articles/blendmodes/index.htm
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Average(System.Double,System.Double)">
            <summary>
            Реализует функцию усреднения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Screen(System.Double,System.Double)">
            <summary>
            Реализует функцию экранирования.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Difference(System.Double,System.Double)">
            <summary>
            Реализует функцию вычитания.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Negation(System.Double,System.Double)">
            <summary>
            Реализует функцию обращения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Exclusion(System.Double,System.Double)">
            <summary>
            Реализует функцию исключения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Overlay(System.Double,System.Double)">
            <summary>
            Реализует функцию наложения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.HardLight(System.Double,System.Double)">
            <summary>
            Реализует функцию "жесткий свет".
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Dodge(System.Double,System.Double)">
            <summary>
            Реализует функцию поворота цвета.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.SoftDodge(System.Double,System.Double)">
            <summary>
            Реализует функцию "умного" поворота цвета.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Burn(System.Double,System.Double)">
            <summary>
            Реализует функцию обратного экранирования.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.SoftBurn(System.Double,System.Double)">
            <summary>
            Реализует функцию "умного" обратного экранирования.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Reflect(System.Double,System.Double)">
            <summary>
            Реализует функцию отражения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Glow(System.Double,System.Double)">
            <summary>
            Реализует функцию свечения.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Stamp(System.Double,System.Double)">
            <summary>
            Реализует функцию печати.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Freeze(System.Double,System.Double)">
            <summary>
            ВРеализует функцию "freeze".
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Heat(System.Double,System.Double)">
            <summary>
            Реализует функцию "heat".
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Interpolation(System.Double,System.Double)">
            <summary>
            Реализует функцию интерполяции.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Photoshop(System.Double,System.Double)">
            <summary>
            Реализует функцию "умный свет" Adobe Photoshop.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Illusions(System.Double,System.Double)">
            <summary>
            Реализует функцию "умный свет" Illusions.hu.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Pegtop(System.Double,System.Double)">
            <summary>
            Реализует функцию "умный свет" Pegtop.
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Fw3c(System.Double,System.Double)">
            <summary>
            Реализует функцию "Cairo".
            </summary>
            <param name="a">Первый слой</param>
            <param name="b">Второй слой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.BlendMode.Gw3c(System.Double)">
            <summary>
            Реализует функцию "Cairo".
            </summary>
            <param name="a">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Imaging.Statistics">
            <summary>
            Используется для работы со статистическими характеристиками изображения.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Histogram(System.Drawing.Imaging.BitmapData)">
            <summary>
            Получает гистограмму изображения.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Histogram(System.Drawing.Imaging.BitmapData,UMapx.Imaging.RGBA)">
            <summary>
            Получает гистограмму изображения.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <param name="channel">Цветовой канал модели RGBA</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Histogram(System.Drawing.Bitmap)">
            <summary>
            Получает данные одновременно о красном, зеленом и синем каналах.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Histogram(System.Drawing.Bitmap,UMapx.Imaging.RGBA)">
            <summary>
            Получает данные одновременно о красном, зеленом и синем каналах.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <param name="channel">Цветовой канал модели RGBA</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.CDF(System.Int32[])">
            <summary>
            Получает массив значений общей функции плотности яркости.
            </summary>
            <param name="H">Гистограмма</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Equalize(System.Int32[])">
            <summary>
            Получает массив значений эквализированной гистограммы путем пересчета функции плотности яркости.
            </summary>
            <param name="H">Гистограмма</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.OtsuThreshold(System.Drawing.Imaging.BitmapData)">
            <summary>
            Вычисляет оптимальный порог методом Оцу для исходного точечного рисунка.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.OtsuThreshold(System.Drawing.Bitmap)">
            <summary>
            Вычисляет оптимальный порог методом Оцу для исходного точечного рисунка.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.SISThreshold(System.Drawing.Imaging.BitmapData)">
            <summary>
            Вычисляет оптимальный порог для исходного точечного рисунка.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.SISThreshold(System.Drawing.Bitmap)">
            <summary>
            Вычисляет оптимальный порог для исходного точечного рисунка.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.MaxIndex(System.Double[])">
            <summary>
            Получает индекс максимального элемента массива.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.MaxIndex(System.Int32[])">
            <summary>
            Получает индекс максимального элемента массива.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.MinIndex(System.Double[])">
            <summary>
            Получает индекс минимального элемента массива.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.MinIndex(System.Int32[])">
            <summary>
            Получает индекс минимального элемента массива.
            </summary>
            <param name="data">Одномерный массив</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Omega(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Получает значение вероятности класса.
            </summary>
            <param name="init">Начальный момент</param>
            <param name="end">Конечный момент</param>
            <param name="h">Гистограмма точечного рисунка</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.Statistics.Mu(System.Int32,System.Int32,System.Int32[])">
            <summary>
            Получает значение среднего арифметического класса.
            </summary>
            <param name="init">Начальный момент</param>
            <param name="end">Конечный момент</param>
            <param name="h">Гистограмма точечного рисунка</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Imaging.PointMatrix">
            <summary>
            Используется для работы с матрицами точек.
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.FlipY(System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта отображения по оси Y.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.FlipX(System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта отображения по оси X.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.ShiftX(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта сдвига по оси X.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Сдвиг</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.ShiftY(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта сдвига по оси Y.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Сдвиг</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.Noise(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта шума.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Плотность [0, 100]</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.Pixelate(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Плотность [0, 100]</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.Grid(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта мозаики.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Плотность [0, 100]</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="M:UMapx.Imaging.PointMatrix.Water(System.Int32,System.Int32,System.Int32)">
            <summary>
            Получает массив упорядоченных пар чисел X и Y для эффекта воды.
            </summary>
            <param name="width">Ширина изображения</param>
            <param name="height">Высота изображения</param>
            <param name="value">Плотность [0, 100]</param>
            <returns>Массив упорядоченных пар чисел X и Y</returns>
        </member>
        <member name="T:UMapx.Imaging.PerlinNoise">
            <summary>
            Определяет шум Перлина.
            <remarks>
            Perlin noise (Шум Перлина, также иногда Классический шум Перлина) — математический алгоритм по генерированию процедурной текстуры 
            псевдо-случайным методом. Используется в компьютерной графике для увеличения реализма или графической сложности поверхности геометрических объектов. 
            Также может использоваться для генерации эффектов дыма, тумана и т.д.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Perlin_noise
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.#ctor(System.Int32,System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует шум Перлина.
            </summary>
            <param name="octaves">Количество октав [1, 32]</param>
            <param name="persistence">Продолжительность</param>
            <param name="frequency">Частота</param>
            <param name="amplitude">Амплитуда</param>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.Function(System.Double)">
            <summary>
            Одномерная функция шума Перлина.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.Function2D(System.Double,System.Double)">
            <summary>
            Двумерная функция шума Перлина.
            </summary>
            <param name="x">Носитель</param>
            <param name="y">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.Noise(System.Int32)">
            <summary>
            Одномерная функция шума.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.Noise(System.Int32,System.Int32)">
            <summary>
            Двумерная функция шума.
            </summary>
            <param name="x">Носитель</param>
            <param name="y">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.SmoothedNoise(System.Double)">
            <summary>
            Одномерная функция сглаженного шума.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.SmoothedNoise(System.Double,System.Double)">
            <summary>
            Двумерная функция сглаженного шума.
            </summary>
            <param name="x">Носитель</param>
            <param name="y">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Imaging.PerlinNoise.CosineInterpolate(System.Double,System.Double,System.Double)">
            <summary>
            Косинусная интерполяция.
            </summary>
            <param name="x1">Неизвестно</param>
            <param name="x2">Неизвестно</param>
            <param name="a">Параметр</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Imaging.PerlinNoise.Frequency">
            <summary>
            Получает или задает частоту.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.PerlinNoise.Amplitude">
            <summary>
            Получает или задает амплитуду.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.PerlinNoise.Persistence">
            <summary>
            Получает или задает продолжительность.
            </summary>
        </member>
        <member name="P:UMapx.Imaging.PerlinNoise.Octaves">
            <summary>
            Получает или задает количество октав [1, 32].
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Space">
            <summary>
            Определеяет цветовое пространство.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Space.RGB">
            <summary>
            Цветовое пространство RGB.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Space.HSB">
            <summary>
            Цветовое пространство HSB.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Space.HSL">
            <summary>
            Цветовое пространство HSB.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Space.YCbCr">
            <summary>
            Цветовое пространство YCbCr.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.RGBA">
            <summary>
            Определяет цветовой канал модели RGBA.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBA.Alpha">
            <summary>
            Альфа-канал.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBA.Red">
            <summary>
            Красный.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBA.Green">
            <summary>
            Зеленый.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.RGBA.Blue">
            <summary>
            Синий.
            </summary>
        </member>
        <member name="T:UMapx.Imaging.Gradient">
            <summary>
            Указывает направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.North">
            <summary>
            Северное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.NorthWest">
            <summary>
            Северо-Западное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.West">
            <summary>
            Западное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.SouthWest">
            <summary>
            Юго-Западное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.South">
            <summary>
            Южное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.SouthEast">
            <summary>
            Юго-Восточное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.East">
            <summary>
            Восточное направление вектора градиента.
            </summary>
        </member>
        <member name="F:UMapx.Imaging.Gradient.NorthEast">
            <summary>
            Северо-Восточное направление вектора градиента.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.TrapezoidIntegralSolution">
            <summary>
            Определяет класс, реализующий численное интегрирование методом трапеций.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.INumericSolution">
            <summary>
            Определяет общий интерфейс численных методов.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.INumericSolution.Compute(System.Double,System.Double)">
            <summary>
            Возвращает значение функции.
            </summary>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="F:UMapx.Analysis.TrapezoidIntegralSolution.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.TrapezoidIntegralSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.TrapezoidIntegralSolution.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий численное интегрирование методом трапеций.
            </summary>
            <param name="function">Делегат непрерывной фукнции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.TrapezoidIntegralSolution.Compute(System.Double,System.Double)">
            <summary>
            Возвращает значение интеграла функции.
            </summary>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.TrapezoidIntegralSolution.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.TrapezoidIntegralSolution.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.SimpsonIntegralSolution">
            <summary>
            Определяет класс, реализующий численное интегрирование методом Симпсона.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.SimpsonIntegralSolution.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.SimpsonIntegralSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.SimpsonIntegralSolution.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий численное интегрирование методом Симпсона.
            </summary>
            <param name="function">Делегат непрерывной функции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.SimpsonIntegralSolution.Compute(System.Double,System.Double)">
            <summary>
            Возвращает значение интеграла функции.
            </summary>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.SimpsonIntegralSolution.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.SimpsonIntegralSolution.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.RungeKuttaSolution">
            <summary>
            Определяет класс, реализующий решение дифференциального уравнения методом Рунге-Кутты.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.RungeKuttaSolution.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.RungeKuttaSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.RungeKuttaSolution.y0">
            <summary>
            Значение функции.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.RungeKuttaSolution.#ctor(UMapx.Core.IDoubleMesh,System.Double,System.Double)">
            <summary>
            Инициализирует класс, реализующий решение дифференциального уравнения методом Рунге-Кутты.
            </summary>
            <param name="function">Делегат непрерывной функции, зависящей от двух переменных</param>
            <param name="y0">Значение функции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.RungeKuttaSolution.Compute(System.Double,System.Double)">
            <summary>
            Возвращает значение дифференциального уравнения.
            </summary>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Analysis.RungeKuttaSolution.rk4(System.Double,System.Double,System.Double,System.Int32)">
            <summary>
            Реализует алгоритм Рунге-Кутты для решения дифференциального уравнения.
            </summary>
            <param name="x0">Аргумент</param>
            <param name="y0">Функция</param>
            <param name="h">Шаг</param>
            <param name="m">Порядок</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Analysis.RungeKuttaSolution.Function">
            <summary>
            Получает или задает делегат непрерывной функции, зависящей от двух переменных.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.RungeKuttaSolution.Y0">
            <summary>
            Получает или задает значение функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.RungeKuttaSolution.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.BisectionNonlinearSolution">
            <summary>
            Определяет класс, реализующий решение нелинейного уравнения методом половинного деления.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.BisectionNonlinearSolution.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.BisectionNonlinearSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.BisectionNonlinearSolution.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий решение нелинейного уравнения методом половинного деления.
            </summary>
            <param name="function">Делегат непрерывной функции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.BisectionNonlinearSolution.Compute(System.Double,System.Double)">
            <summary>
            Получает значения корня нелинейного уравнения.
            </summary>
            <param name="a">Начало отрезка</param>
            <param name="b">Конец отрезка</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.BisectionNonlinearSolution.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.BisectionNonlinearSolution.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.ChordNonlinearSolution">
            <summary>
            Определяет класс, реализующий решение нелинейного уравнения методом хорд.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.ChordNonlinearSolution.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.ChordNonlinearSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.ChordNonlinearSolution.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий решение нелинейного уравнения методом хорд.
            </summary>
            <param name="function">Делегат непрерывной функции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.ChordNonlinearSolution.Compute(System.Double,System.Double)">
            <summary>
            Возвращает значения корня нелинейного уравнения.
            </summary>
            <param name="a">Начало отрезка</param>
            <param name="b">Конец отрезка</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.ChordNonlinearSolution.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.ChordNonlinearSolution.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.LagrangeInterpolation">
            <summary>
            Определяет класс для интерполяции методом Лагранжа.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.IInterpolation">
            <summary>
            Определяет общий интерфейс методов интерполяции.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.IInterpolation.Compute(System.Double)">
            <summary>
            Возвращает значение функции в точке.
            </summary>
            <param name="xl">Значение аргумента для вычисления</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.IInterpolation.X">
            <summary>
            Получает или задает массив значений аргумента.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.IInterpolation.Y">
            <summary>
            Получает или задает массив значений функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.IInterpolation.Iterations">
            <summary>
            Получает или задает количество итераций.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.LagrangeInterpolation.x">
            <summary>
            Массив значений аргумента.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.LagrangeInterpolation.y">
            <summary>
            Массив значений функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.LagrangeInterpolation.iterations">
            <summary>
            Количество итераций.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.LagrangeInterpolation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс для интерполяции методом Лагранжа.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="M:UMapx.Analysis.LagrangeInterpolation.Compute(System.Double)">
            <summary>
            Возвращает значение функции в точке.
            </summary>
            <param name="xl">Значение аргумента для вычисления</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.LagrangeInterpolation.X">
            <summary>
            Получает или задает массив значений аргумента.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.LagrangeInterpolation.Y">
            <summary>
            Получает или задает массив значений функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.LagrangeInterpolation.Iterations">
            <summary>
            Получает или задает количество итераций.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.NewtonInterpolation">
            <summary>
            Определяет класс для интерполяции по первой формуле Ньютона.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.NewtonInterpolation.x">
            <summary>
            Массив значений аргумента.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.NewtonInterpolation.y">
            <summary>
            Массив значений функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.NewtonInterpolation.iterations">
            <summary>
            Количество итераций.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.NewtonInterpolation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс для интерполяции по первой формуле Ньютона.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="M:UMapx.Analysis.NewtonInterpolation.Compute(System.Double)">
            <summary>
            Возвращает значение функции в точке.
            </summary>
            <param name="xl">Значение аргумента для вычисления</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.NewtonInterpolation.X">
            <summary>
            Получает или задает массив значений аргумента.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.NewtonInterpolation.Y">
            <summary>
            Получает или задает массив значений функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.NewtonInterpolation.Iterations">
            <summary>
            Получает или задает количество итераций.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.GoldenOptimization">
            <summary>
            Определяет класс, реализующий поиск минимума методом золотого сечения.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.GoldenOptimization.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.GoldenOptimization.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.GoldenOptimization.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий поиск минимума методом золотого сечения.
            </summary>
            <param name="function">Делегат непрерывной фукнции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.GoldenOptimization.Compute(System.Double,System.Double)">
            <summary>
            Возвращает соответствующий минимум функции на отреке.
            </summary>
            <param name="a">Начало отрезка</param>
            <param name="b">Конец отрезка</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="P:UMapx.Analysis.GoldenOptimization.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.GoldenOptimization.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.DichotomyOptimization">
            <summary>
            Определяет класс, реализующий поиск минимума методом дихотомии.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.DichotomyOptimization.f">
            <summary>
            Делегат непрерывной функции.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.DichotomyOptimization.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.DichotomyOptimization.#ctor(UMapx.Core.IDouble,System.Double)">
            <summary>
            Инициализирует класс, реализующий поиск минимума методом дихотомии.
            </summary>
            <param name="function">Делегат непрерывной функции</param>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.DichotomyOptimization.Compute(System.Double,System.Double)">
            <summary>
            Возвращает соответствующий минимум функции на отреке.
            </summary>
            <param name="c">Нижний предел</param>
            <param name="d">Верхний предел</param>
            <returns>Пара дробных чисел X, Y</returns>
        </member>
        <member name="P:UMapx.Analysis.DichotomyOptimization.Function">
            <summary>
            Получает или задает делегат непрерывной функции.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.DichotomyOptimization.Eps">
            <summary>
            Получает или задает значение погрешности [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.GaussJordanElimination">
            <summary>
            Определяет класс, реализующий решение квадратных систем линейных алгебраических уравнений методом Гаусса-Йордана (метод полного исключения неизвестных).
            <remarks>
            Метод является модификацией метода Гаусса. Назван в честь Карла Фридриха Гаусса и Вильгельма Йордана. 
            Этот метод также может быть использован для нахождения ранга матрицы, вычисления определителя матрицы и вычисления обратного к обратимой квадратной матрице. 
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Gauss%E2%80%93Jordan_elimination
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Analysis.IMatrixSolution">
            <summary>
            Определяет общий интерфейс решений системы линейных алгебраических уравнений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.IMatrixSolution.Compute(System.Double[0:,0:])">
            <summary>
            Возвращает вектор-столбец, соотвествующий решению системы линейных алгебраических уравнений: Ax = b.
            </summary>
            <param name="A">Расширенная матрица</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="M:UMapx.Analysis.IMatrixSolution.Compute(System.Double[0:,0:],System.Double[])">
            <summary>
            Возвращает вектор-столбец, соотвествующий решению системы линейных алгебраических уравнений: Ax = b.
            </summary>
            <param name="A">Квадратная матрица</param>
            <param name="b">Вектор-столбец</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="M:UMapx.Analysis.GaussJordanElimination.#ctor">
            <summary>
            Инициализирует класс, реализующий решение квадратных систем линейных алгебраических уравнений методом Гаусса-Йордана.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.GaussJordanElimination.Compute(System.Double[0:,0:])">
            <summary>
            Возвращает вектор-столбец, соотвествующий решению системы линейных алгебраических уравнений: Ax = b.
            <remarks>
            По завершению процедуры исходная расширенная матрица A будет представлять собой верхнеугольную матрицу.
            </remarks>
            </summary>
            <param name="A">Расширенная матрица</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="M:UMapx.Analysis.GaussJordanElimination.Compute(System.Double[0:,0:],System.Double[])">
            <summary>
            Возвращает вектор-столбец, соотвествующий решению системы линейных алгебраических уравнений: Ax = b.
            <remarks>
            По завершению процедуры исходная расширенная матрица A будет представлять собой верхнеугольную матрицу.
            </remarks>
            </summary>
            <param name="A">Квадратная матрица</param>
            <param name="b">Вектор-столбец</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="T:UMapx.Analysis.EigenRootsSolution">
            <summary>
            Определяет класс решения уравнений с использованием спектрального разложения матрицы.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://www.mathworks.com/help/matlab/ref/roots.html
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Analysis.IRootsSolution">
            <summary>
            Определяет общий интерфейс решения уравнений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.IRootsSolution.Compute(System.Double[])">
            <summary>
            Возвращает вектор-столбец, соотвествующий численному полинома: p(1)*x^n + ... + p(n)*x + p(n+1) = 0.
            </summary>
            <param name="polynomial">Полином</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="M:UMapx.Analysis.IRootsSolution.Compute(UMapx.Core.Complex[])">
            <summary>
            Возвращает вектор-столбец коэффициентов полинома: p(1)*x^n + ... + p(n)*x + p(n+1) = 0.
            </summary>
            <param name="roots">Корни полинома</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="F:UMapx.Analysis.EigenRootsSolution.eig">
            <summary>
            Спектральное разложение матрицы.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.EigenRootsSolution.eps">
            <summary>
            Погрешность вычислений.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.EigenRootsSolution.#ctor(System.Double)">
            <summary>
            Инициализирует класс решения уравнений с использованием спектрального разложения матрицы.
            </summary>
            <param name="eps">Погрешность [0, 1]</param>
        </member>
        <member name="M:UMapx.Analysis.EigenRootsSolution.Compute(System.Double[])">
            <summary>
            Возвращает вектор-столбец, соотвествующий численному решению полинома: p(1)*x^n + ... + p(n)*x + p(n+1) = 0.
            </summary>
            <param name="polynomial">Полином</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="M:UMapx.Analysis.EigenRootsSolution.Compute(UMapx.Core.Complex[])">
            <summary>
            Возвращает вектор-столбец коэффициентов полинома: p(1)*x^n + ... + p(n)*x + p(n+1) = 0.
            </summary>
            <param name="roots">Корни полинома</param>
            <returns>Вектор-столбец</returns>
        </member>
        <member name="P:UMapx.Analysis.EigenRootsSolution.Eps">
            <summary>
            Получает или задает погрешность [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Analysis.PolynomialApproximation">
            <summary>
            Определяет класс полиномиальной аппроксимации.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://simenergy.ru/math-analysis/digital-processing/85-ordinary_least_squares
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Analysis.IApproximation">
            <summary>
            Определяет общий интерфейс методов аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.IApproximation.Error">
            <summary>
            Возвращает значение погрешности аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.IApproximation.Coefficients">
            <summary>
            Возвращает коэффициенты полинома.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.IApproximation.Approximation">
            <summary>
            Возвращает аппроксимацию функции.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.PolynomialApproximation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс полиномиальной аппроксимации.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="power">Степень полинома</param>
        </member>
        <member name="M:UMapx.Analysis.PolynomialApproximation.ToString">
            <summary>
            Возвращает уравнение аппроксимации.
            </summary>
            <returns>Текст как последовательность знаков юникода</returns>
        </member>
        <member name="P:UMapx.Analysis.PolynomialApproximation.Error">
            <summary>
            Возвращает значение погрешности аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.PolynomialApproximation.Coefficients">
            <summary>
            Возвращает коэффициенты полинома.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.PolynomialApproximation.Approximation">
            <summary>
            Возвращает аппроксимацию функции.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.LogarithmicApproximation">
            <summary>
            Определяет класс логарифмической аппроксимации.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://simenergy.ru/math-analysis/digital-processing/85-ordinary_least_squares
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Analysis.LogarithmicApproximation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс логарифмической аппроксимации.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="power">Степень полинома</param>
        </member>
        <member name="M:UMapx.Analysis.LogarithmicApproximation.ToString">
            <summary>
            Возвращает уравнение аппроксимации.
            </summary>
            <returns>Текст как последовательность знаков юникода</returns>
        </member>
        <member name="P:UMapx.Analysis.LogarithmicApproximation.Error">
            <summary>
            Возвращает значение погрешности аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.LogarithmicApproximation.Coefficients">
            <summary>
            Возвращает коэффициенты полинома.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.LogarithmicApproximation.Approximation">
            <summary>
            Возвращает аппроксимацию функции.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.ExponentialApproximation">
            <summary>
            Определяет класс экспоненциальной аппроксимации.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://simenergy.ru/math-analysis/digital-processing/85-ordinary_least_squares
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Analysis.ExponentialApproximation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс экспоненциальной аппроксимации.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="power">Степень полинома</param>
        </member>
        <member name="M:UMapx.Analysis.ExponentialApproximation.ToString">
            <summary>
            Возвращает уравнение аппроксимации.
            </summary>
            <returns>Текст как последовательность знаков юникода</returns>
        </member>
        <member name="P:UMapx.Analysis.ExponentialApproximation.Error">
            <summary>
            Возвращает значение погрешности аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.ExponentialApproximation.Coefficients">
            <summary>
            Возвращает коэффициенты полинома.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.ExponentialApproximation.Approximation">
            <summary>
            Возвращает аппроксимацию функции.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.PowerApproximation">
            <summary>
            Определяет класс степенной аппроксимации.
            <remarks>
            Более подробную информацию можно найти на сайте:
            http://simenergy.ru/math-analysis/digital-processing/85-ordinary_least_squares
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Analysis.PowerApproximation.#ctor(System.Double[],System.Double[],System.Int32)">
            <summary>
            Инициализирует класс степенной аппроксимации.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="y">Массив значений функции</param>
            <param name="power">Степень полинома</param>
        </member>
        <member name="M:UMapx.Analysis.PowerApproximation.ToString">
            <summary>
            Возвращает уравнение аппроксимации.
            </summary>
            <returns>Текст как последовательность знаков юникода</returns>
        </member>
        <member name="P:UMapx.Analysis.PowerApproximation.Error">
            <summary>
            Возвращает значение погрешности аппроксимации.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.PowerApproximation.Coefficients">
            <summary>
            Возвращает коэффициенты полинома.
            </summary>
        </member>
        <member name="P:UMapx.Analysis.PowerApproximation.Approximation">
            <summary>
            Возвращает аппроксимацию функции.
            </summary>
        </member>
        <member name="T:UMapx.Analysis.LeastSquares">
            <summary>
            Определяет класс, реализующий метод наименьших квадратов.
            </summary>
        </member>
        <member name="F:UMapx.Analysis.LeastSquares.gje">
            <summary>
            Метод Гаусса-Йордана.
            </summary>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Polynomial(System.Double,System.Double[])">
            <summary>
            Возвращает значение полиномиала.
            </summary>
            <param name="x">Аргумент</param>
            <param name="c">Коэффициенты аппроксимации</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Polynomial(System.Double[],System.Double[])">
            <summary>
            Возвращает массив значений полиномиала.
            </summary>
            <param name="x">Массив значений аргумента</param>
            <param name="c">Коэффициенты аппроксимации</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Coefficients(System.Double[],System.Double[],System.Int32)">
            <summary>
            Возвращает коэффициенты аппроксимации.
            </summary>
            <param name="x">Массив значений аргмента</param>
            <param name="y">Массив значений функции</param>
            <param name="iterations">Количество итераций</param>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.SummaryPow(System.Double[],System.Double)">
            <summary>
            Возвращает значение выражения: s += v(i) ^ pow.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="pow">Степень</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.SummaryPow(System.Double[],System.Double[],System.Double,System.Double)">
            <summary>
            Возвращает значение выражения: s += {x(i) ^ powx} * {y(i) ^ powy}.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <param name="powx">Степень</param>
            <param name="powy">Степень</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Error(System.Double[],System.Double[])">
            <summary>
            Возвращает погрешность аппроксимации функции.
            </summary>
            <param name="a">Аппроксимация</param>
            <param name="b">Функция</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Equation(System.Double[])">
            <summary>
            Возвращает уравнение полинома, представленного в виде строки.
            </summary>
            <param name="p">Коэффициенты полинома</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Analysis.LeastSquares.Equation(System.Double[],System.String)">
            <summary>
            Возвращает уравнение полинома, представленного в виде строки.
            </summary>
            <param name="p">Коэффициенты полинома</param>
            <param name="function">Функция</param>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="T:UMapx.Distribution.Gaussian">
            <summary>
            Определяет распределение Гаусса.
            <remarks>
            Нормальное распределение, также называемое распределением Гаусса или Гаусса — Лапласа. 
            Носитель x ∈ (-inf, +inf), параметры: μ - математическое ожидание, σ > 0 - среднеквадратическое отклонение.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Normal_distribution
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Distribution.IDistribution">
            <summary>
            Определяет общий интерфейс распределений.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.IDistribution.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.#ctor">
            <summary>
            Инициализирует распределение Гаусса.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Гаусса.
            </summary>
            <param name="sigma">Среднеквадратическое отклонение</param>
            <param name="mu">Коэффициент сдвига</param>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gaussian.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Mu">
            <summary>
            Получает или задает значение коэффициента сдвига.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gaussian.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.LogGaussian">
            <summary>
            Определяет логарифмическое распределение Гаусса.
            <remarks>
            Двухпараметрическое семейство абсолютно непрерывных распределений. 
            Если случайная величина имеет логнормальное распределение, то её логарифм имеет нормальное распределение.
            Носитель x ∈ (0, +inf), параметры: μ - математическое ожидание, σ >= 0 - среднеквадратическое отклонение.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Log-normal_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.#ctor">
            <summary>
            Инициализирует логарифмическое распределение Гаусса.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует логарифмическое распределение Гаусса.
            </summary>
            <param name="sigma">Среднеквадратическое отклонение</param>
            <param name="mu">Коэффициент сдвига</param>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.LogGaussian.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Mu">
            <summary>
            Получает или задает значение коэффициента сдивга.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogGaussian.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Wigner">
            <summary>
            Определяет полукруговое распределение Винера.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Wigner_semicircle_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Wigner.#ctor(System.Double)">
            <summary>
            Инициализирует полукруговое распределение Винера.
            </summary>
            <param name="r">Радиус</param>
        </member>
        <member name="M:UMapx.Distribution.Wigner.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Wigner.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Wigner.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Wigner.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Wigner.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Wigner.R">
            <summary>
            Получает или задает значение радиуса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Wigner.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Rayleigh">
            <summary>
            Определяет логарифмическое распределение Рэлея.
            <remarks>
            Распределение вероятностей случайной величины, введенное впервые в 1880 г. Джоном Уильямом Стреттом (лордом Рэлеем) 
            в связи с задачей сложения гармонических колебаний со случайными фазами.
            Носитель x ∈ [0, +inf), параметры: σ > 0 - параметр масштаба.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Rayleigh_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.#ctor">
            <summary>
            Инициализирует логарифмическое распределение Рэлея.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.#ctor(System.Double)">
            <summary>
            Инициализирует логарифмическое распределение Рэлея.
            </summary>
            <param name="sigma">Параметр мастаба</param>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Rayleigh.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Sigma">
            <summary>
            Получает или задает значение параметра мастаба.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rayleigh.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Exponential">
            <summary>
            Определяет экспоненциальное распределение.
            <remarks>
            Экспоненциальное распределение — абсолютно непрерывное распределение, моделирующее время между двумя последовательными 
            свершениями одного и того же события.
            Носитель x ∈ [0, +inf), параметры: λ > 0 - интенсивность.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Exponential_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Exponential.#ctor">
            <summary>
            Инициализирует экспоненциальное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Exponential.#ctor(System.Double)">
            <summary>
            Инициализирует экспоненциальное распределение.
            </summary>
            <param name="lambda">Параметр интенсивности (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Exponential.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Exponential.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Exponential.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Exponential.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Exponential.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Lambda">
            <summary>
            Получает или задает значение параметра интенсивности (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Exponential.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Cauchy">
            <summary>
            Определяет распределение Коши.
            <remarks>
            Класс абсолютно непрерывных распределений. 
            Случайная величина, имеющая распределение Коши, является стандартным примером величины, не имеющей математического ожидания и дисперсии.
            Носитель x ∈ (-inf, +inf), параметры: γ > 0 - коэффициент масштаба, x0 - коэффициент сдвига.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Cauchy_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.#ctor">
            <summary>
            Инициализирует распределение Коши.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Коши.
            </summary>
            <param name="gamma">Коэффициент масштаба (0, +inf)</param>
            <param name="x0">Коэффициент сдвига</param>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Cauchy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Gamma">
            <summary>
            Получает или задает значение коэффициента масштаба (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.X0">
            <summary>
            Получает или задает значение коэффициента сдвига.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Cauchy.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Weibull">
            <summary>
            Определяет распределение Вейбулла.
            <remarks>
            Распределение Вейбулла в теории вероятностей — двухпараметрическое семейство абсолютно непрерывных распределений. 
            Названо в честь Валодди Вейбулла, детально охарактеризовавшего его в 1951, хотя впервые его определил Фреше в 1927, 
            а применено оно было ещё в 1933 для описания распределения размеров частиц.
            Носитель x ∈ [0, +inf), параметры: λ > 0 - коэффициент масштаба, k - коэффициент формы.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Weibull_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Weibull.#ctor">
            <summary>
            Инициализирует распределение Вейбулла.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Weibull.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Вейбулла.
            </summary>
            <param name="lambda">Коэффициент масштаба (0, +inf)</param>
            <param name="k">Коэффициент формы (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Weibull.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Weibull.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Weibull.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Weibull.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Weibull.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Lambda">
            <summary>
            Получает или задает значение коэффициента масштаба (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.K">
            <summary>
            Получает или задает значение коэффициента формы (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Weibull.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Laplace">
            <summary>
            Определяет распределение Лапласа.
            <remarks>
            В теории вероятностей и статистике распределение Лапласа является непрерывным распределением вероятностей, 
            названным по имени Пьера-Симона Лапласа. Его также иногда называют двойным экспоненциальным распределением, 
            потому что его можно рассматривать как два экспоненциальных распределения (с дополнительным параметром местоположения), 
            соединенных вместе друг с другом, хотя термин «двойное экспоненциальное распределение» также иногда используется для обозначения 
            Распределение Гумбеля.
            Носитель x ∈ (-inf, +inf), параметры: a > 0 - коэффициент масштаба, b - коэффициент сдвига.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Laplace_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Laplace.#ctor">
            <summary>
            Инициализирует распределение Лапласа.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Laplace.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Лапласа.
            </summary>
            <param name="alfa">Коэффициент масштаба (0, +inf)</param>
            <param name="beta">Коэффициент сдвига</param>
        </member>
        <member name="M:UMapx.Distribution.Laplace.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Laplace.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Laplace.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Laplace.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Laplace.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Alfa">
            <summary>
            Получает или задает значение коэффициента масштаба (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Beta">
            <summary>
            Получает или задает значение коэффициента сдвига.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Laplace.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Geometric">
            <summary>
            Определяет геометрическое распределение.
            <remarks>
            Распределение дискретной случайной величины равной количеству испытаний случайного эксперимента до наблюдения первого «успеха».
            Носитель x ∈ [0, +inf), параметры: p ∈ [0, 1] - вероятность успеха.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Geometric_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Geometric.#ctor">
            <summary>
            Инициализирует геометрическое распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Geometric.#ctor(System.Double)">
            <summary>
            Инициализирует геометрическое распределение.
            </summary>
            <param name="p">Вероятность "успеха" [0, 1]</param>
        </member>
        <member name="M:UMapx.Distribution.Geometric.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Geometric.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Geometric.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Geometric.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Geometric.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Geometric.P">
            <summary>
            Получает или задает значение вероятности "успеха" [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Geometric.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Poisson">
            <summary>
            Определяет распределение Пуассона.
            <remarks>
            Вероятностное распределение дискретного типа, моделирует случайную величину, представляющую собой число событий, произошедших за фиксированное
            время, при условии, что данные события происходят с некоторой фиксированной средней интенсивностью и независимо друг от друга.
            Распределение Пуассона играет ключевую роль в теории массового обслуживания.
            Носитель x ∈ [0, +inf), параметры: λ > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Poisson_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Poisson.#ctor">
            <summary>
            Инициализирует распределение Пуассона.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Poisson.#ctor(System.Double)">
            <summary>
            Инициализирует распределение Пуассона.
            </summary>
            <param name="lambda">Параметр λ (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Poisson.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Poisson.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Poisson.Row(System.Double)">
            <summary>
            Возвращает значение суммы ряда энтропии.
            </summary>
            <param name="l">Лямба</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Poisson.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Poisson.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Poisson.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Lambda">
            <summary>
            Получает или задает значение параметра λ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Poisson.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Uniform">
            <summary>
            Определяет равномерное распределение.
            <remarks>
            В теории вероятностей и статистике непрерывное равномерное распределение или прямоугольное распределение представляет собой семейство симметричных 
            вероятностных распределений, так что для каждого члена семейства все интервалы одинаковой длины на носителе распределения равновероятны. Опора 
            определяется двумя параметрами: a и b, которые являются его минимальными и максимальными значениями. Распределение часто сокращается U (a, b). 
            Это максимальное распределение вероятности энтропии для случайной переменной X при отсутствии каких-либо ограничений, кроме того, что она содержится 
            в поддержке распределения.
            Носитель x ∈ (-inf, +inf), параметры: a, b ∈ (-inf, inf).
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Uniform_distribution_(continuous)
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Uniform.#ctor">
            <summary>
            Инициализирует равномерное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Uniform.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует равномерное распределение.
            </summary>
            <param name="a">Параметр сдвига a</param>
            <param name="b">Параметр сдвига b</param>
        </member>
        <member name="M:UMapx.Distribution.Uniform.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Uniform.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Uniform.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Uniform.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Uniform.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Uniform.A">
            <summary>
            Получает или задает параметр сдвига a.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.B">
            <summary>
            Получает или задает параметр сдвига b.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Uniform.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Beta">
            <summary>
            Определяет бета-распределение.
            <remarks>
            В теории вероятностей и статистике бета-распределение представляет собой семейство непрерывных вероятностных распределений, определенных на 
            интервале [0, 1], параметризованных двумя положительными параметрами формы, обозначенными как α и β, которые фигурируют как показатели случайной 
            величины и управляют формой распределения.
            Носитель x ∈ [0, 1], параметры: a > 0, b > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Beta_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Beta.#ctor">
            <summary>
            Инициализирует бета-распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Beta.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует бета-распределение.
            </summary>
            <param name="a">Параметр a</param>
            <param name="b">Параметр b</param>
        </member>
        <member name="M:UMapx.Distribution.Beta.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Beta.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Beta.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Beta.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Beta.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Beta.A">
            <summary>
            Получает или задает параметр a.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.B">
            <summary>
            Получает или задает параметр b.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Beta.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Gamma">
            <summary>
            Определяет Г-распределение.
            <remarks>
            Г-распределение является двухпараметрическим семейством непрерывных вероятностных распределений, определенных на интервале (0, +inf), параметризованных 
            двумя положительными параметрами формы, обозначенными как θ и k, которые фигурируют как показатели случайной величины и управляют формой распределения.
            Носитель x ∈ [0, +inf), параметры: k > 0, θ > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Gamma_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Gamma.#ctor">
            <summary>
            Инициализирует Г-распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Gamma.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует Г-распределение.
            </summary>
            <param name="thetta">Параметр θ (0, +inf)</param>
            <param name="k">Параметр k (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Gamma.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gamma.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gamma.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gamma.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gamma.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Thetta">
            <summary>
            Получает или задает параметр θ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.K">
            <summary>
            Получает или задает параметр k (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gamma.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Pareto">
            <summary>
            Определяет распределение Парето.
            <remarks>
            Двухпараметрическое семейство абсолютно непрерывных распределений, являющихся степенными. Называется по имени Вилфредо Парето. Встречается при исследовании 
            различных явлений, в частности, социальных, экономических, физических и других. Вне области экономики иногда называется также распределением Брэдфорда.
            Носитель x ∈ [0, +inf), параметры: Xm > 0 - коэффицимент масштаба, k > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Pareto_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Pareto.#ctor">
            <summary>
            Инициализирует распределение Парето.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Pareto.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Парето.
            </summary>
            <param name="xm">Коэффициент масштаба θ (0, +inf)</param>
            <param name="k">Параметр k (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Pareto.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Pareto.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Pareto.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Pareto.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Pareto.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Xm">
            <summary>
            Получает или задает коэффициент масштаба Xm (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.K">
            <summary>
            Получает или задает параметр k (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Pareto.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Bernoulli">
            <summary>
            Определяет распределение Бернулли.
            <remarks>
            Дискретное распределение вероятностей, моделирующее случайный эксперимент произвольной природы, при заранее известной вероятности успеха или неудачи.
            Носитель x ∈ {0, 1}, параметры: p ∈ [0, 1].
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Bernoulli_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.#ctor">
            <summary>
            Инициализирует распределение Бернулли.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.#ctor(System.Double)">
            <summary>
            Инициализирует распределение Бернулли.
            </summary>
            <param name="p">Вероятность "успеха" [0, 1]</param>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Bernoulli.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.P">
            <summary>
            Получает или задает значение вероятности "успеха" [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bernoulli.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.LogLogistic">
            <summary>
            Определяет лог-логистическое распределение.
            <remarks>
            Распределение вероятности случайной величины, логарифм которой имеет логистическое распределение. По форме оно похоже на логарифмически нормальное распределение, 
            но имеет более тяжелые хвосты. В отличие от логарифмически нормального распределения, его кумулятивная функция распределения может быть записана в закрытом виде.
            Носитель x ∈ [0, +inf], параметры: a > 0, b > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Log-logistic_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.#ctor">
            <summary>
            Инициализирует лог-логистическое распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует лог-логистическое распределение.
            </summary>
            <param name="a">Параметр a</param>
            <param name="b">Параметр b</param>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.LogLogistic.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.A">
            <summary>
            Получает или задает значение параметра a.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.B">
            <summary>
            Получает или задает значение параметра b.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.LogLogistic.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Binomial">
            <summary>
            Определяет биномиальное распределение.
            <remarks>
            Распределение количества «успехов» в последовательности из n независимых случайных экспериментов, таких, что вероятность «успеха» в каждом из них постоянна и равна p.
            Носитель x ∈ [0, n], параметры: n >= 0, p ∈ [0, 1].
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Binomial_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Binomial.#ctor">
            <summary>
            Инициализирует биномиальное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Binomial.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует биномиальное распределение.
            </summary>
            <param name="n">Число испытаний (>0)</param>
            <param name="p">Вероятность успеха [0, 1]</param>
        </member>
        <member name="M:UMapx.Distribution.Binomial.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Binomial.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Binomial.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Binomial.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Binomial.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Binomial.N">
            <summary>
            Число испытаний.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.P">
            <summary>
            Вероятность успеха [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Binomial.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Hypergeometric">
            <summary>
            Определяет гипергеометрическое распределение.
            <remarks>
            Гипергеометрическое распределение в теории вероятностей моделирует количество удачных выборок без возвращения из конечной совокупности.
            Носитель x ∈ [0, K], параметры: N ∈ [0, +inf], D ∈ [0, N], K ∈ [0, N].
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hypergeometric_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.#ctor">
            <summary>
            Инициализирует гипергеометрическое распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует гипергеометрическое распределение.
            </summary>
            <param name="n">Параметр N [0, +inf]</param>
            <param name="k">Параметр D [0, N]</param>
            <param name="d">Параметр K [0, N]</param>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Hypergeometric.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.N">
            <summary>
            Получает или задает значение параметра N [0, +inf].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.D">
            <summary>
            Получает или задает значение параметра D [0, N].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.K">
            <summary>
            Получает или задает значение параметра k [0, N].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Mode">
            <summary>
            Получает значени моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Hypergeometric.Entropy">
            <summary>
            Получает значение энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.Logistic">
            <summary>
            Определяет логистическое распределение.
            <remarks>
            Один из видов абсолютно непрерывных распределений. Формой напоминает нормальное распределение, но имеет более «тяжёлые» концы и больший коэффициент 
            эксцесса.
            Носитель x ∈ (-inf, +inf), параметры: μ ∈ (-inf, +inf), s ∈ (0, +inf).
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Logistic_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Logistic.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует логистическое распределение.
            </summary>
            <param name="mu">Параметр μ</param>
            <param name="s">Параметра s (0, +inf]</param>
        </member>
        <member name="M:UMapx.Distribution.Logistic.#ctor">
            <summary>
            Инициализирует логистическое распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Logistic.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Logistic.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Logistic.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Logistic.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Logistic.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Mu">
            <summary>
            Получает или задает значение параметра μ.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.S">
            <summary>
            Получает или задает значение параметра s (0, +inf].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logistic.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Rademacher">
            <summary>
            Определяет распределение Радемахера.
            <remarks>
            В теории вероятности и статистике распределение Радемахера (названное в честь Ганса Радемахера) представляет собой дискретное распределение 
            вероятности, при котором случайная величина x имеет 50%-ный шанс быть либо +1, либо -1.
            Носитель x ∈ {-1, +1}.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Rademacher_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Rademacher.#ctor">
            <summary>
            Инициализирует распределение Радемахера.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Rademacher.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Rademacher.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Rademacher.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Rademacher.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Rademacher.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Triangular">
            <summary>
            Определяет треугольное распределение.
            <remarks>
            Треугольное распределение представляет собой непрерывное распределение вероятности с нижним пределом a, верхним пределом b и модой c.
            Носитель x ∈ [a, b], параметры: a, b, c.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Triangular_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Triangular.#ctor">
            <summary>
            Инициализирует треугольное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Triangular.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует треугольное распределение.
            </summary>
            <param name="a">Параметр a ∈ (-inf, +inf)</param>
            <param name="b">Параметр b ∈ (-inf, +inf)</param>
            <param name="c">Параметр c ∈ (-inf, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Triangular.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Triangular.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Triangular.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Triangular.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Triangular.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Triangular.A">
            <summary>
            Получает или задает значение параметра a ∈ (-inf, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.B">
            <summary>
            Получает или задает значение параметра b ∈ (-inf, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.C">
            <summary>
            Получает или задает значение параметра c ∈ (-inf, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Triangular.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Nakagami">
            <summary>
            Определяет распределение Накагами.
            <remarks>
            Распределение Накагами или распределение Накагами-м является распределением вероятности, связанным с гамма-распределением. Он имеет два 
            параметра: параметр формы μ ≥ 0.5 и второй параметр, управляющий разбросом Ω > 0.
            Носитель x ∈ [0, +inf), параметры: μ ≥ 0.5, Ω > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Nakagami_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.#ctor">
            <summary>
            Инициализирует распределение Накагами.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Накагами.
            </summary>
            <param name="mu">Коэффициент формы</param>
            <param name="omega">Коэффициент распространения</param>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.Initialize(System.Double,System.Double)">
            <summary>
            Инициализация распределения.
            </summary>
            <param name="mu">Коэффициент формы</param>
            <param name="omega">Коэффициент распространения</param>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Nakagami.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Mu">
            <summary>
            Получает или задает значение коэффициента формы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Omega">
            <summary>
            Получает или задает значение коэффициента распространения.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Nakagami.Entropy">
            <summary>
             Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Levy">
            <summary>
            Определяет распределение Леви.
            <remarks>
            Распределение Леви, названное в честь Пола Леви, является непрерывным распределением вероятностей для неотрицательной случайной величины. 
            В спектроскопии это распределение с частотой как зависимая переменная известно как профиль Ван-дер-Ваальса. Это частный случай обратного 
            гамма-распределения.
            Носитель x ∈ [μ, +inf), параметры: μ ∈ (-inf, +inf), c > 0 - коэффициент масштаба.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/L%C3%A9vy_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Levy.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Леви.
            </summary>
            <param name="mu">Коэффициент сдвига μ</param>
            <param name="c">Коэффициент масштаба (>0)</param>
        </member>
        <member name="M:UMapx.Distribution.Levy.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Levy.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Levy.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Levy.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Levy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Levy.Mu">
            <summary>
            Получает или задает коэффициент сдвига.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.C">
            <summary>
            Получает или задает коэффициент масштаба (>0).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Levy.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Logarithmic">
            <summary>
            Определяет логарифмическое распределение.
            <remarks>
            Класс дискретных распределений. Логарифмическое распределение используется в различных приложениях, включая математическую генетику и физику.
            Носитель x ∈ [1, +inf), параметры: p ∈ (0, 1].
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Logarithmic_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.#ctor(System.Double)">
            <summary>
            Инициализирует логарифмическое распределение.
            </summary>
            <param name="p">Параметр</param>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Logarithmic.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.P">
            <summary>
            Получает или задает значение параметра p ∈ (0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Logarithmic.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.BetaPrime">
            <summary>
            Определяет бета распределение второго рода.
            <remarks>
            В теории вероятностей и статистике бета-распределение (также известное как инвертированное бета-распределение или бета-распределение второго рода)
            представляет собой абсолютно непрерывное распределение вероятностей, определенное для x ∈ (0, +inf) и двух коэффициентов формы: α > 0, β > 0.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Beta_prime_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует бета распределение второго рода.
            </summary>
            <param name="alpha">Параметр α (0, +inf)</param>
            <param name="beta">Параметр β (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.BetaPrime.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Alpha">
            <summary>
            Получает или задает значение параметра α ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Beta">
            <summary>
            Получает или задает значение параметра β ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BetaPrime.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.BirnbaumSaunders">
            <summary>
            Определяет распределение Барнибаума-Сондерса.
            <remarks>
            Распределение Барнибаума-Сондерса представляет собой распределение вероятности, широко используемое в приложениях надежности для моделирования 
            времен сбоев. В литературе имеется несколько альтернативных формулировок этого распределения. Оно названо в честь З. У. Бирнбаума и С. С. Сондерса.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Birnbaum–Saunders_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует распределение Барнибаума-Сондерса.
            </summary>
            <param name="mu">Коэффициент сдвига μ ∈ (0, +inf)</param>
            <param name="beta">Коэффициент масштаба β ∈ (0, +inf).</param>
            <param name="gamma">Коэффициент формы γ ∈ (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.BirnbaumSaunders.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Mu">
            <summary>
            Получает или задает коэффициент сдвига μ ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Beta">
            <summary>
            Получает или задает коэффициент масштаба β ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Gamma">
            <summary>
            Получает или задает коэффициент формы γ ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.BirnbaumSaunders.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.ChiSquare">
            <summary>
            Определяет кси-квадрат распределение.
            <remarks>
            Распределение xи-квадрат - это распределение суммы квадратов k независимых стандартных нормальных случайных величин.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Chi-squared_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.#ctor(System.Int32)">
            <summary>
            Инициализирует кси-квадрат распределение.
            </summary>
            <param name="k">Число степеней свободы (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ChiSquare.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.K">
            <summary>
            Получает или задает число степеней свободы (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChiSquare.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Gumbel">
            <summary>
            Определяет распределение распределение Гамбела.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Gumbel_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Гамбела.
            </summary>
            <param name="mu">Коэффициент сдвига μ ∈ (-inf, +inf)</param>
            <param name="beta">Коэффициент масштаба β ∈ (0, +inf).</param>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gumbel.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Mu">
            <summary>
            Получает или задает коэффициент сдвига μ ∈ (-inf, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Beta">
            <summary>
            Получает или задает коэффициент масштаба β ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gumbel.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Student">
            <summary>
            Определяет распределение Стьюдента.
            <remarks>
            Распределение Стьюдента (t-распределение) в теории вероятностей — это однопараметрическое семейство абсолютно непрерывных распределений. 
            Названо в честь Уильяма Сили Госсета, который первым опубликовал работы, посвящённые этому распределению, под псевдонимом «Стьюдент».
            Распределение Стьюдента играет важную роль в некоторых широко используемых системах статистического анализа.
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Student%27s_t-distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Student.#ctor(System.Double)">
            <summary>
            Инициализирует распределение Стьюдента.
            </summary>
            <param name="n">Число степеней свободы n ∈ (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Student.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Student.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Student.LogFunction(System.Double)">
            <summary>
            Логарифмическая плотность вероятности.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Student.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Student.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Student.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Student.N">
            <summary>
            Получает или задает число степеней свободы n ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Student.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.UQuadratic">
            <summary>
            Определяет U-квадратическое распределение.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/U-quadratic_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует U-квадратическое распределение.
            </summary>
            <param name="a">Параметр a ∈ (0, +inf)</param>
            <param name="b">Параметр b ∈ (a, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.UQuadratic.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.A">
            <summary>
            Получает или задает значение параметра a ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.B">
            <summary>
            Получает или задает значение параметра b ∈ (a, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.UQuadratic.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="T:UMapx.Distribution.FisherSnedecor">
            <summary>
            Определяет распределение Фишера.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/F-distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует распределение Фишера.
            </summary>
            <param name="d1">Первая степень свободы</param>
            <param name="d2">Вторая степень свободы</param>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherSnedecor.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.D1">
            <summary>
            Получает значение первой степени свободы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.D2">
            <summary>
            Получает значение второй степени свободы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherSnedecor.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Erlang">
            <summary>
            Определяет распределение Эрланга.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Erlang_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Erlang.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует распределение Эрланга.
            </summary>
            <param name="k">Параметр формы k ∈ (0, +inf)</param>
            <param name="lambda">λ-параметр λ ∈ (0, +inf)</param>
        </member>
        <member name="M:UMapx.Distribution.Erlang.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Erlang.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Erlang.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Erlang.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Erlang.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Erlang.K">
            <summary>
            Получает или задает значение параметра k ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Lambda">
            <summary>
            Получает или задает значение параметра λ ∈ (0, +inf).
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Erlang.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Distribution.WrappedCauchy">
            <summary>
            Определяет компактное распределение Коши.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Wrapped_Cauchy_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.#ctor(System.Double,System.Double)">
            <summary>
            Инициалазирует компактное распределение Коши.
            </summary>
            <param name="mu">Параметр μ</param>
            <param name="gamma">Параметр γ > 0</param>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.WrappedCauchy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Mu">
            <summary>
            Получает или задает значение параметра μ.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Gamma">
            <summary>
            Получает или задает значение параметра γ > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.WrappedCauchy.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Kumaraswamy">
            <summary>
            Определяет распределение Кумарасвы.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Kumaraswamy_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Кумарасвы.
            </summary>
            <param name="a">Параметр формы распределения a > 0</param>
            <param name="b">Параметр формы распределения b > 0</param>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.momentGeneratingFunction(System.Int32,System.Double,System.Double)">
            <summary>
            
            </summary>
            <param name="n"></param>
            <param name="a"></param>
            <param name="b"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Kumaraswamy.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.A">
            <summary>
            Получает или задает параметр формы распределения a > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.B">
            <summary>
            Получает или задает параметр формы распределения b > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Kumaraswamy.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Gompertz">
            <summary>
            Определяет распределение Гомперца.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Gompertz_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Гомперца.
            </summary>
            <param name="eta">Параметр формы η > 0</param>
            <param name="b">Параметр масштаба b > 0</param>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Gompertz.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Eta">
            <summary>
            Получает или задает значение параметра формы η > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.B">
            <summary>
            Получает или задает значение параметра масштаба b > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Gompertz.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="T:UMapx.Distribution.HyperbolicSecant">
            <summary>
            Определяет гиперболическое секансное распределение.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Hyperbolic_secant_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.#ctor">
            <summary>
            Ицинициализирует гиперболическое секансное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.HyperbolicSecant.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.HyperbolicSecant.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Arcsine">
            <summary>
            Определяет арксинусное распределение.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Arcsine_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.#ctor">
            <summary>
            Ицинициализирует арксинусное распределение.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Arcsine.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Arcsine.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Burr">
            <summary>
            Определяет распределение Бюрра.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Burr_distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Burr.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует распределение Бюрра.
            </summary>
            <param name="c">Параметр формы c > 0</param>
            <param name="k">Параметр масштаба k > 0</param>
        </member>
        <member name="M:UMapx.Distribution.Burr.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Burr.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.Burr.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Burr.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.Burr.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.Burr.C">
            <summary>
            Получает или задает значение параметра формы c > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.K">
            <summary>
            Получает или задает значение параметра масштаба k > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Burr.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="T:UMapx.Distribution.FisherZ">
            <summary>
            Определяет Z-распределение Фишера.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Fisher%27s_z-distribution
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует Z-распределение Фишера.
            </summary>
            <param name="d1">Степень свободы d1 > 0</param>
            <param name="d2">Степень свободы d2 > 0</param>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.Distribution(System.Double)">
            <summary>
            Возвращает значение функции распределения вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.Function(System.Double)">
            <summary>
            Возвращает значение функции плотности вероятности.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.FisherZ.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.D1">
            <summary>
            Получает или задает значение степени свободы d1 > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.D2">
            <summary>
            Получает или задает значение степени свободы d2 > 0.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Entropy">
            <summary>
            Возвращает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.FisherZ.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="T:UMapx.Distribution.ConeShape">
            <summary>
            Определяет распределение конической формы.
            <remarks>
            Более подробную информацию можно получить на сайте:
            https://en.wikipedia.org/wiki/Cone-shape_distribution_function
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.#ctor(System.Double)">
            <summary>
            Инициализирует распределение конической формы.
            </summary>
            <param name="a">Коэффициент</param>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.Function(System.Double,System.Double)">
            <summary>
            Возвращает значение функции плотности ядра.
            </summary>
            <param name="eta">Носитель</param>
            <param name="tau">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.Distribution(System.Double,System.Double)">
            <summary>
            Возвращает значение функции распределения ядра.
            </summary>
            <param name="t">Носитель</param>
            <param name="tau">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ConeShape.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.A">
            <summary>
            Получает или задает значение коэффициента.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ConeShape.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.ChoiWilliams">
            <summary>
            Определяет распределение Чой-Вильямса.
            <remarks>
            Более подробную информацию можно получить на сайте:
            https://en.wikipedia.org/wiki/Choi%E2%80%93Williams_distribution_function
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.#ctor(System.Double)">
            <summary>
            Инициализирует распределение Чой-Вильямса.
            </summary>
            <param name="a">Коэффициент</param>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.Function(System.Double,System.Double)">
            <summary>
            Возвращает значение функции плотности ядра.
            </summary>
            <param name="eta">Носитель</param>
            <param name="tau">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.Distribution(System.Double,System.Double)">
            <summary>
            Возвращает значение функции распределения ядра.
            </summary>
            <param name="t">Носитель</param>
            <param name="tau">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.System#ICloneable#Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.Clone">
            <summary>
            Создает копию распределения.
            </summary>
            <returns>Распределение</returns>
        </member>
        <member name="M:UMapx.Distribution.ChoiWilliams.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.A">
            <summary>
            Получает или задает значение коэффициента.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Mean">
            <summary>
            Получает значение математического ожидания.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Variance">
            <summary>
            Получает значение дисперсии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Median">
            <summary>
            Получает значение медианы.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Mode">
            <summary>
            Получает значение моды.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Skewness">
            <summary>
            Получает значение коэффициента ассиметрии.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Excess">
            <summary>
            Получает значение коэффициента эксцесса.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Support">
            <summary>
            Получает интервал носителя функции. 
            </summary>
        </member>
        <member name="P:UMapx.Distribution.ChoiWilliams.Entropy">
            <summary>
            Получает значение дифференциальной энтропии.
            </summary>
        </member>
        <member name="T:UMapx.Distribution.Bayes">
            <summary>
            Определяет класс вероятностей Байеса.
            </summary>
        </member>
        <member name="M:UMapx.Distribution.Bayes.#ctor(System.Double[],System.Double[])">
            <summary>
            Инициализирует класс вероятностей Байеса.
            </summary>
            <param name="stat">Массив статистических вероятностей</param>
            <param name="prior">Массив априорных вероятностей (до опыта)</param>
        </member>
        <member name="P:UMapx.Distribution.Bayes.General">
            <summary>
            Возвращает значение полной вероятности.
            </summary>
        </member>
        <member name="P:UMapx.Distribution.Bayes.Probabilities">
            <summary>
            Возвращает массив значений апостериорных вероятностей (после опыта).
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.WaveletTransform">
            <summary>
            Определяет дискретное вейвлет-преобразование.
            <remarks>
            Для корректного вейвлет-преобразования исходного сигнала необходимо, чтобы его размерность была степенью 2.
            
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Discrete_wavelet_transform
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.IWaveletTransform">
            <summary>
            Определяет общий интерфейс вейвлет-преобразований.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.IWaveletTransform.Wavelet">
            <summary>
            Получает или задает дискретный вейвлет.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.#ctor(UMapx.Wavelet.WaveletPack,System.Int32,System.Boolean)">
            <summary>
            Инициализирует дискретное вейвлет-преобразование.
            </summary>
            <param name="wavelet">Дискретный вейвлет</param>
            <param name="levels">Количество уровней</param>
            <param name="normalized">Нормализованное преобразование или нет</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Forward(System.Double[])">
            <summary>
            Прямое вейвлет-преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Backward(System.Double[])">
            <summary>
            Обратное вейвлет-преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое вейвлет-преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное вейвлет-преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое вейвлет-преобразование.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное вейвлет-преобразование.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое вейвлет-преобразование.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное вейвлет-преобразование.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.dwt(System.Double[],System.Int32)">
            <summary>
            Forward discrete wavelet transform.
            </summary>
            <param name="input">Input signal</param>
            <param name="level">Current level of transform</param>
            <returns>Output data</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.idwt(System.Double[],System.Int32)">
            <summary>
            Backward discrete wavelet transform.
            </summary>
            <param name="input">Input signal</param>
            <param name="level">Current level of transform</param>
            <returns>Output data</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.dwt(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Forward discrete wavelet transform.
            </summary>
            <param name="input">Input signal</param>
            <param name="level">Current level of transform</param>
            <returns>Output data</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletTransform.idwt(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Backward discrete wavelet transform.
            </summary>
            <param name="input">Input signal</param>
            <param name="level">Current level of transform</param>
            <returns>Output data</returns>
        </member>
        <member name="P:UMapx.Wavelet.WaveletTransform.Levels">
            <summary>
            Получает или задает количество уровней преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletTransform.Wavelet">
            <summary>
            Получает или задает дискретный вейвлет.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.WaveletPack">
            <summary>
            Определяет дискретный вейвлет.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Wavelet
            </remarks>
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.#ctor(System.Double[],System.Double[],System.Double[],System.Double[])">
            <summary>
            Инициализирует дискретный вейвлет.
            </summary>
            <param name="lp">Масштабирующая функция прямого преобразования</param>
            <param name="hp">Вейвлет-функция прямого преобразования</param>
            <param name="ilp">Масштабирующая функция обратного преобразования</param>
            <param name="ihp">Вейвлет-функция обратного преобразования</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.InvertOdds(System.Double[])">
            <summary>
            Инвертирует нечетные элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.InvertEvens(System.Double[])">
            <summary>
            Инвертирует четные элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.GetWavelet(System.Double[])">
            <summary>
            Возвращает вейвлет-функцию Добеши.
            </summary>
            <param name="scaling">Масштабирующая функция</param>
            <returns>Вейвлет-функция</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.Create(System.Double[])">
            <summary>
            Создает дискретный вейвлет.
            </summary>
            <param name="scaling">Масштабирующая функция</param>
            <returns>Вейвлет-фильтр</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.Create(System.Double[],System.Double[])">
            <summary>
            Создает дискретный вейвлет.
            </summary>
            <param name="scaling">Масштабирующая функция</param>
            <param name="wavelet">Вейвлет-функция</param>
            <returns>Вейвлет-фильтр</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.System#ICloneable#Clone">
            <summary>
            Создает копию дискретного вейвлета.
            </summary>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.Clone">
            <summary>
            Создает копию дискретного вейвлета.
            </summary>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletPack.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.LowPass">
            <summary>
            Получает или задает масштабирующую функцию прямого преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.HighPass">
            <summary>
            Получает или задает вейвлет-функцию прямого преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.iLowPass">
            <summary>
            Получает или задает масштабирующую функцию обратного преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.iHighPass">
            <summary>
            Получает или задает вейвлет-функцию обратного преобразования.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior11">
            <summary>
            Возвращает биортогональный вейвлет 1.1.
            <remarks>
            Вейвлет Хаара.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior13">
            <summary>
            Возвращает биортогональный вейвлет 1.3.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior15">
            <summary>
            Возвращает биортогональный вейвлет 1.5.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior22">
            <summary>
            Возвращает биортогональный вейвлет 2.2.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior24">
            <summary>
            Возвращает биортогональный вейвлет 2.4.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior26">
            <summary>
            Возвращает биортогональный вейвлет 2.6.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior28">
            <summary>
            Возвращает биортогональный вейвлет 2.8.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior31">
            <summary>
            Возвращает биортогональный вейвлет 3.1.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior33">
            <summary>
            Возвращает биортогональный вейвлет 3.3.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior35">
            <summary>
            Возвращает биортогональный вейвлет 3.5.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Bior37">
            <summary>
            Возвращает биортогональный вейвлет 3.7.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D1">
            <summary>
            Возвращает вейвлет Добеши 1-го порядка.
            <remarks>
            Вейвлет Хаара.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D2">
            <summary>
            Возвращает вейвлет Добеши 2-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D3">
            <summary>
            Возвращает вейвлет Добеши 3-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D4">
            <summary>
            Возвращает вейвлет Добеши 4-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D5">
            <summary>
            Возвращает вейвлет Добеши 5-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D6">
            <summary>
            Возвращает вейвлет Добеши 6-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D7">
            <summary>
            Возвращает вейвлет Добеши 7-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D8">
            <summary>
            Возвращает вейвлет Добеши 8-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D9">
            <summary>
            Возвращает вейвлет Добеши 9-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D10">
            <summary>
            Возвращает вейвлет Добеши 10-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D11">
            <summary>
            Возвращает вейвлет Добеши 11-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D12">
            <summary>
            Возвращает вейвлет Добеши 12-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D13">
            <summary>
            Возвращает вейвлет Добеши 13-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D14">
            <summary>
            Возвращает вейвлет Добеши 14-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D15">
            <summary>
            Возвращает вейвлет Добеши 15-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D16">
            <summary>
            Возвращает вейвлет Добеши 16-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D17">
            <summary>
            Возвращает вейвлет Добеши 17-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D18">
            <summary>
            Возвращает вейвлет Добеши 18-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D19">
            <summary>
            Возвращает вейвлет Добеши 19-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D20">
            <summary>
            Возвращает вейвлет Добеши 20-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D21">
            <summary>
            Возвращает вейвлет Добеши 21-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D22">
            <summary>
            Возвращает вейвлет Добеши 22-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D23">
            <summary>
            Возвращает вейвлет Добеши 23-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D24">
            <summary>
            Возвращает вейвлет Добеши 24-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D25">
            <summary>
            Возвращает вейвлет Добеши 25-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D26">
            <summary>
            Возвращает вейвлет Добеши 26-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D27">
            <summary>
            Возвращает вейвлет Добеши 27-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D28">
            <summary>
            Возвращает вейвлет Добеши 28-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D29">
            <summary>
            Возвращает вейвлет Добеши 29-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D30">
            <summary>
            Возвращает вейвлет Добеши 30-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D31">
            <summary>
            Возвращает вейвлет Добеши 31-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D32">
            <summary>
            Возвращает вейвлет Добеши 32-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D33">
            <summary>
            Возвращает вейвлет Добеши 33-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D34">
            <summary>
            Возвращает вейвлет Добеши 34-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D35">
            <summary>
            Возвращает вейвлет Добеши 35-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D36">
            <summary>
            Возвращает вейвлет Добеши 36-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D37">
            <summary>
            Возвращает вейвлет Добеши 37-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.D38">
            <summary>
            Возвращает вейвлет Добеши 38-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.C1">
            <summary>
            Возвращает вейвлет койфлет 1-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.C2">
            <summary>
            Возвращает вейвлет койфлет 2-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.C3">
            <summary>
            Возвращает вейвлет койфлет 3-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.C4">
            <summary>
            Возвращает вейвлет койфлет 4-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.C5">
            <summary>
            Возвращает вейвлет койфлет 5-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S1">
            <summary>
            Возвращает вейвлет симлет 1-го порядка.
            <remarks>
            Вейвлет Хаара.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S2">
            <summary>
            Возвращает вейвлет симлет 2-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S3">
            <summary>
            Возвращает вейвлет симлет 3-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S4">
            <summary>
            Возвращает вейвлет симлет 4-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S5">
            <summary>
            Возвращает вейвлет симлет 5-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S6">
            <summary>
            Возвращает вейвлет симлет 6-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S7">
            <summary>
            Возвращает вейвлет симлет 7-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S8">
            <summary>
            Возвращает вейвлет симлет 8-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S9">
            <summary>
            Возвращает вейвлет симлет 9-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S10">
            <summary>
            Возвращает вейвлет симлет 10-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S11">
            <summary>
            Возвращает вейвлет симлет 11-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S12">
            <summary>
            Возвращает вейвлет симлет 12-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S13">
            <summary>
            Возвращает вейвлет симлет 13-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S14">
            <summary>
            Возвращает вейвлет симлет 14-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S15">
            <summary>
            Возвращает вейвлет симлет 15-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S16">
            <summary>
            Возвращает вейвлет симлет 16-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S17">
            <summary>
            Возвращает вейвлет симлет 17-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S18">
            <summary>
            Возвращает вейвлет симлет 18-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S19">
            <summary>
            Возвращает вейвлет симлет 19-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.S20">
            <summary>
            Возвращает вейвлет симлет 20-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Meyer">
            <summary>
            Возвращает вейвлет Мейера.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.F4">
            <summary>
            Возвращает вейвлет Фейера-Коровкина 4-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.F6">
            <summary>
            Возвращает вейвлет Фейера-Коровкина 6-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.F8">
            <summary>
            Возвращает вейвлет Фейера-Коровкина 8-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.F14">
            <summary>
            Возвращает вейвлет Фейера-Коровкина 14-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.F22">
            <summary>
            Возвращает вейвлет Фейера-Коровкина 22-го порядка.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L1">
            <summary>
            Возвращает вейвлет Лежандра 1-го порядка.
            <remarks>
            Вейвлет Хаара.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L2">
            <summary>
            Возвращает вейвлет Лежандра 2-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L3">
            <summary>
            Возвращает вейвлет Лежандра 3-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L4">
            <summary>
            Возвращает вейвлет Лежандра 4-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L5">
            <summary>
            Возвращает вейвлет Лежандра 5-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L6">
            <summary>
            Возвращает вейвлет Лежандра 6-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L7">
            <summary>
            Возвращает вейвлет Лежандра 7-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L8">
            <summary>
            Возвращает вейвлет Лежандра 8-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.L9">
            <summary>
            Возвращает вейвлет Лежандра 9-го порядка.
            <remarks>
            Неортогональный вейвлет.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Fbsp100">
            <summary>
            Возвращает B-spline вейвлет 1-0-0.
            <remarks>
            Вейвлет Хаара (с задержкой).
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Fbsp103">
            <summary>
            Возвращает B-spline вейвлет 1-0-3.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Fbsp105">
            <summary>
            Возвращает B-spline вейвлет 1-0-5.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Haar">
            <summary>
            Возвращает вейвлет Хаара.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF11">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 1/1).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF13">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 1/3).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF15">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 1/5).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF31">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 3/1).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF51">
            <summary>
            Возвращает лифтинговый вейвлет Коэна-Добеши-Фево (CDF 5/1).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF53">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 5/3).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF55">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 5/5).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF22">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 2/2).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF24">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 2/4).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF26">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 2/6).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF42">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 4/2).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF44">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 4/4).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF46">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 4/6).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF62">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 6/2).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF64">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 6/4).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF66">
            <summary>
            Возвращает вейвлет Коэна-Добеши-Фево (CDF 6/6).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.CDF97">
            <summary>
            Возвращает лифтинговый вейвлет Коэна-Добеши-Фево (CDF 9/7).
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletPack.Kravchenko">
            <summary>
            Определяет вейвлет Кравченко.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.FbspWavelet">
            <summary>
            Определяет непрерывный комплексный частотный B-сплайновый вейвлет.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.IComplexWavelet">
            <summary>
            Определяет общий интерфейс непрерывных комплексных вейвлетов.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.IComplexWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.IComplexWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.FbspWavelet.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует непрерывный комплексный частотный B-сплайновый вейвлет.
            </summary>
            <param name="m">Порядок вейвлета</param>
            <param name="fb">Параметр полосы пропускания</param>
            <param name="fc">Центральная частота вейвлета</param>
        </member>
        <member name="M:UMapx.Wavelet.FbspWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.FbspWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.FbspWavelet.M">
            <summary>
            Получает или задает значение порядка вейвлета.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.FbspWavelet.Fb">
            <summary>
            Получает или задает значение параметра полосы пропускания.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.FbspWavelet.Fc">
            <summary>
            Получает или задает значение центральной частоты вейвлета.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.HermitianHatWavelet">
            <summary>
            Определяет непрерывный вейвлет "Эрмитова шляпа".
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.HermitianHatWavelet.#ctor">
            <summary>
            Инициализирует непрерывный вейвлет "Эрмитова шляпа".
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.HermitianHatWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.HermitianHatWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.HermitianWavelet">
            <summary>
            Определяет непрерывный эрмитовый вейвлет.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.HermitianWavelet.#ctor(System.Int32)">
            <summary>
            Инициализирует непрерывный эрмитовый вейвлет.
            </summary>
            <param name="derivative">Номер производной функции [1, 3]</param>
        </member>
        <member name="M:UMapx.Wavelet.HermitianWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.HermitianWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.HermitianWavelet.Derivative">
            <summary>
            Получает или задает номер производной функции [1, 3].
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.GaborWavelet">
            <summary>
            Определяет непрерывный комплексный вейвлет Габора.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.GaborWavelet.#ctor(System.Double,System.Double,System.Double)">
            <summary>
            Инициализирует непрерывный комплексный вейвлет Габора.
            </summary>
            <param name="x0">Начальное значение</param>
            <param name="k0">Коэффициент модуляции</param>
            <param name="a">Множитель</param>
        </member>
        <member name="M:UMapx.Wavelet.GaborWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.GaborWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.GaborWavelet.WaveletReal(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.GaborWavelet.X0">
            <summary>
            Получает или задает начальное значение.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.GaborWavelet.K0">
            <summary>
            Получает или задает коэффициент модуляции.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.GaborWavelet.A">
            <summary>
            Получает или задает множитель.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.ComplexMorletWavelet">
            <summary>
            Определяет непрерывный комплексный Морлет вейвлет.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.ComplexMorletWavelet.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует непрерывный комплексный Морлет вейвлет.
            </summary>
            <param name="fb">Полоса пропускания</param>
            <param name="fc">Центральная частота</param>
        </member>
        <member name="M:UMapx.Wavelet.ComplexMorletWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.ComplexMorletWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.ComplexMorletWavelet.Fb">
            <summary>
            Получает или задает полосу пропускания.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.ComplexMorletWavelet.Fc">
            <summary>
            Получает или задает центральную частоту.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.ComplexGaussianWavelet">
            <summary>
            Определяет непрерывный вейвлет Гаусса.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.ComplexGaussianWavelet.#ctor(System.Int32)">
            <summary>
            Инициализирует непрерывный вейвлет Гаусса.
            </summary>
            <param name="derivative">Номер производной функции [1, 8]</param>
        </member>
        <member name="M:UMapx.Wavelet.ComplexGaussianWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.ComplexGaussianWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.ComplexGaussianWavelet.Derivative">
            <summary>
            Получает или задает номер производной функции [1, 8].
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.GaussianWavelet">
            <summary>
            Определяет непрерывный вейвлет Гаусса.
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.IDoubleWavelet">
            <summary>
            Определяет общий интерфейс непрерывных вещественных вейвлетов.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.IDoubleWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.IDoubleWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.GaussianWavelet.#ctor(System.Int32)">
            <summary>
            Инициализирует непрерывный вейвлет Гаусса.
            </summary>
            <param name="derivative">Номер производной функции [1, 8]</param>
        </member>
        <member name="M:UMapx.Wavelet.GaussianWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.GaussianWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.GaussianWavelet.Derivative">
            <summary>
            Получает или задает номер производной функции [1, 8].
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.MexicanHatWavelet">
            <summary>
            Определяет непрерывный вейвлет "Сомбреро".
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MexicanHatWavelet.#ctor">
            <summary>
            Инициализирует непрерывный вейвлет "Сомбреро".
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MexicanHatWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.MexicanHatWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.MorletWavelet">
            <summary>
            Определяет непрерывный Морлет вейвлет.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MorletWavelet.#ctor">
            <summary>
            Инициализирует непрерывный Морлет вейвлет.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MorletWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.MorletWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.MeyerWavelet">
            <summary>
            Определяет непрерывный вейвлет Мейера.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MeyerWavelet.#ctor">
            <summary>
            Инициализирует непрерывный вейвлет Мейера.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.MeyerWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.MeyerWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.ShannonWavelet">
            <summary>
            Определяет непрерывный вейвлет Шеннона.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.ShannonWavelet.#ctor">
            <summary>
            Инициализирует непрерывный вейвлет Шеннона.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.ShannonWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.ShannonWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.PoissonWavelet">
            <summary>
            Определяет непрерывный вейвлет Пуассона.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.PoissonWavelet.#ctor(System.Int32)">
            <summary>
            Инициализирует непрерывный вейвлет Пуассона.
            </summary>
            <param name="n">Порядок вейвлета [1, +inf)</param>
        </member>
        <member name="M:UMapx.Wavelet.PoissonWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.PoissonWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="P:UMapx.Wavelet.PoissonWavelet.N">
            <summary>
            Получает или задает порядок вейвлета [1, +inf).
            </summary>
        </member>
        <member name="T:UMapx.Wavelet.HaarWavelet">
            <summary>
            Определяет непрерывный вейвлет Хаара.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.HaarWavelet.#ctor">
            <summary>
            Инициализирует непрерывный вейвлет Хаара.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.HaarWavelet.Scaling(System.Double)">
            <summary>
            Возвращает значение масштабирующей функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="M:UMapx.Wavelet.HaarWavelet.Wavelet(System.Double)">
            <summary>
            Возвращает значение вейвлет-функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Значение функции</returns>
        </member>
        <member name="T:UMapx.Wavelet.WaveletFilter">
            <summary>
            Определяет вейвлет-фильтр.
            </summary>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.#ctor(UMapx.Wavelet.WaveletTransform,System.Double,System.Double)">
            <summary>
            Инициализирует вейвлет-фильтр.
            </summary>
            <param name="dwt">Дискретное вейвлет-преобразование</param>
            <param name="factor">Множитель [-1, 1]</param>
            <param name="accuracy">Точность фильтра [0, 1]</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(System.Double[0:,0:])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(System.Double[])">
            <summary>
            Реализует одномерный вейвлет-фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Матрица</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(UMapx.Core.Complex[])">
            <summary>
            Реализует одномерный вейвлет-фильтр.
            </summary>
            <param name="data">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(System.Double[][0:,0:])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(System.Double[][])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(UMapx.Core.Complex[][0:,0:])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.Apply(UMapx.Core.Complex[][])">
            <summary>
            Реализует двумерный вейвлет-фильтр.
            </summary>
            <param name="data">Набор матриц</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.GetLength(System.Int32,System.Int32)">
            <summary>
            Возвращает значение длины для преобразования.
            </summary>
            <param name="n">Длина</param>
            <param name="levels">Количество уровней</param>
            <returns>Длина</returns>
        </member>
        <member name="M:UMapx.Wavelet.WaveletFilter.GetMaxLevels(System.Int32,System.Int32)">
            <summary>
            Returns max levels of 2^K transform.
            </summary>
            <param name="n">Length</param>
            <param name="levels">Levels</param>
            <returns>New length</returns>
        </member>
        <member name="P:UMapx.Wavelet.WaveletFilter.DWT">
            <summary>
            Получает или задает дискретное вейвлет-преобразование.
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletFilter.Accuracy">
            <summary>
            Получает или задает значение точности фильтра [0, 1].
            </summary>
        </member>
        <member name="P:UMapx.Wavelet.WaveletFilter.Factor">
            <summary>
            Получает или задает значение множителя [-1, 1].
            </summary>
        </member>
        <member name="T:UMapx.Core.Maths">
            <summary>
            Используется для реализации основных алгебраических, тригонометрических и гиперболических операций.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.E">
            <summary>
            Экспонента.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.Pi">
            <summary>
            Пи.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.Phi">
            <summary>
            Фи (золотое число).
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.Tau">
            <summary>
            Два пи.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.Gamma">
            <summary>
            Постоянная Эйлера-Маскерони.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.Sqrt2">
            <summary>
            Кадратный корень из числа 2.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.G">
            <summary>
            Постоянная Каталана.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.A">
            <summary>
            Постоянная Апери.
            </summary>
        </member>
        <member name="F:UMapx.Core.Maths.I">
            <summary>   
            Мнимая единица.
            </summary>
        </member>
        <member name="M:UMapx.Core.Maths.Byte(System.Double)">
            <summary>
            Преобразовывает случайную величину в тип Byte.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Byte(System.Int32)">
            <summary>
            Преобразовывает случайную величину в тип Byte.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Core.Maths.sByte(System.Double)">
            <summary>
            Преобразовывает случайную величину в тип Byte.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Core.Maths.sByte(System.Int32)">
            <summary>
            Преобразовывает случайную величину в тип Byte.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Целое число без знака</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Double(System.Double)">
            <summary>
            Преобразовывает случайную величину в тип Double.
            </summary>
            <param name="x">Случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsRange(System.Double,System.Double,System.Double)">
            <summary>
            Проверяет лежит ли случайная величина в заданном промежутке.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="xmin">Минимальное значение</param>
            <param name="xmax">Максимальное значение</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsRange(System.Int32,System.Int32,System.Int32)">
            <summary>
            Проверяет лежит ли случайная величина в заданном промежутке.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="xmin">Минимальное значение</param>
            <param name="xmax">Максимальное значение</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Range(System.Double,System.Double,System.Double)">
            <summary>
            Помещает случайную величину в заданном промежутке.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="xmin">Минимальное значение</param>
            <param name="xmax">Максимальное значение</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Range(System.Int32,System.Int32,System.Int32)">
            <summary>
            Помещает случайную величину в заданном промежутке.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="xmin">Минимальное значение</param>
            <param name="xmax">Максимальное значение</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Singular(System.Double)">
            <summary>
            Проверяет число на исключение.
            </summary>
            <param name="a">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Singular(UMapx.Core.Complex)">
            <summary>
            Проверяет комплексное число на исключение.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsSquare(System.Double)">
            <summary>
            Проверяет является ли число полным квадратом.
            </summary>
            <param name="n">Целое число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsPower(System.Double,System.Double)">
            <summary>
            Проверяет является ли число степенью другого числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsInteger(System.Double)">
            <summary>
            Проверяет является ли число целым.
            </summary>
            <param name="a">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsEven(System.Double)">
            <summary>
            Проверяет является ли число четным.
            </summary>
            <param name="a">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsNotEven(System.Double)">
            <summary>
            Проверяет является ли число нечетным.
            </summary>
            <param name="a">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pow(System.Double)">
            <summary>
            Возвращает число, возведенное во вторую степень.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pow(System.Double,System.Double)">
            <summary>
            Возвращает число, возведенное в степень.
            </summary>
            <param name="a">Число</param>
            <param name="b">Степенной показатель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Exp(System.Double)">
            <summary>
            Возвращает экспоненту, возведенную в степень.
            </summary>
            <param name="a">Степенной показатель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log(System.Double)">
            <summary>
            Возвращает натуральный логарифм числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log10(System.Double)">
            <summary>
            Возвращает десятичный логарифм числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log2(System.Double)">
            <summary>
            Возвращает двоичный логарифм числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log(System.Double,System.Double)">
            <summary>
            Возвращает логарифм числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Основание логарифма</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sqrt(System.Double)">
            <summary>
            Возвращает квадратный корень числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sqrt(System.Double,System.Double)">
            <summary>
            Возвращает корень числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Степенной показатель корня</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Abs(System.Double)">
            <summary>
            Возвращает модуль числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Max(System.Double,System.Double)">
            <summary>
            Возвращает наибольшее из двух чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Max(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает наибольшее из трех чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <param name="c">Третье число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Min(System.Double,System.Double)">
            <summary>
            Возвращает наименьшее из двух чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Min(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает наименьшее из трех чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <param name="c">Третье число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sign(System.Double)">
            <summary>
            Возвращает знак числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Floor(System.Double)">
            <summary>
            Возвращает округленное число в меньшую сторону.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ceil(System.Double)">
            <summary>
            Возвращает округленное число в большую сторону.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Round(System.Double)">
            <summary>
            Возвращает округленное число.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Round(System.Double,System.Int32)">
            <summary>
            Возвращает округленное число.
            </summary>
            <param name="a">Число</param>
            <param name="dig">Количество знаков после запятой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Fix(System.Double)">
            <summary>
            Возвращает число с отброшенной дробной частью.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Abs(UMapx.Core.Complex)">
            <summary>
            Возвращает модуль комплексного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Angle(UMapx.Core.Complex)">
            <summary>
            Возвращает угол комплексного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log(UMapx.Core.Complex)">
            <summary>
            Возвращает натуральный логарифм числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log10(UMapx.Core.Complex)">
            <summary>
            Возвращает десятичный логарифм числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log2(UMapx.Core.Complex)">
            <summary>
            Возвращает двоичный логарифм числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Log(UMapx.Core.Complex,System.Double)">
            <summary>
            Возвращает логарифм числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Основание логарифма</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Exp(UMapx.Core.Complex)">
            <summary>
            Возвращает экспоненту, возведенную в комплексную степень.
            </summary>
            <param name="a">Степенной показатель</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pow(System.Double,UMapx.Core.Complex)">
            <summary>
            Возвращает число, возведенное в комплексную степень.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексный показатель степени</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pow(UMapx.Core.Complex,System.Double)">
            <summary>
            Возвращает число, возведенное в степень.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Показатель степени</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sqrt(UMapx.Core.Complex)">
            <summary>
            Возвращает квадратный корень числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sqrt(UMapx.Core.Complex,System.Double)">
            <summary>
            Возвращает корень числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Показатель степени</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.FromPolar(System.Double,System.Double)">
            <summary>
            Возвращает комплексное число.
            </summary>
            <param name="abs">Модуль комплексного числа</param>
            <param name="angle">Угол комплексного числа</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Round(UMapx.Core.Complex)">
            <summary>
            Возвращает округленное число.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Round(UMapx.Core.Complex,System.Int32)">
            <summary>
            Возвращает округленное число.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="dig">Количество знаков после запятой</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Fix(UMapx.Core.Complex)">
            <summary>
            Возвращает число с отброшенной дробной частью.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cos(System.Double)">
            <summary>
            Возвращает косинус угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sin(System.Double)">
            <summary>
            Возвращает синус угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Tg(System.Double)">
            <summary>
            Возвращает тангенс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ctg(System.Double)">
            <summary>
            Возвращает котангенс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sec(System.Double)">
            <summary>
            Возвращает секанс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cosc(System.Double)">
            <summary>
            Возвращает косеканс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asin(System.Double)">
            <summary>
            Возвращает арксинус числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acos(System.Double)">
            <summary>
            Возвращает арккосинус числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Atg(System.Double)">
            <summary>
            Возвращает арктангенс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Actg(System.Double)">
            <summary>
            Возвращает арккотангенс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asec(System.Double)">
            <summary>
            Возвращает арксеканс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acosc(System.Double)">
            <summary>
            Возвращает аркосеканс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cos(UMapx.Core.Complex)">
            <summary>
            Возвращает косинус угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sin(UMapx.Core.Complex)">
            <summary>
            Возвращает синус угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Tg(UMapx.Core.Complex)">
            <summary>
            Возвращает тангенс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ctg(UMapx.Core.Complex)">
            <summary>
            Возвращает котангенс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sec(UMapx.Core.Complex)">
            <summary>
            Возвращает секанс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cosc(UMapx.Core.Complex)">
            <summary>
            Возвращает косеканс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acos(UMapx.Core.Complex)">
            <summary>
            Возвращает арккосинус числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asin(UMapx.Core.Complex)">
            <summary>
            Возвращает арксинус числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Atg(UMapx.Core.Complex)">
            <summary>
            Возвращает арктангенс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Actg(UMapx.Core.Complex)">
            <summary>
            Возвращает арккотангенс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asec(UMapx.Core.Complex)">
            <summary>
            Возвращает арксеканс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acosc(UMapx.Core.Complex)">
            <summary>
            Возвращает арккосеканс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sh(System.Double)">
            <summary>
            Возвращает гиперболический синус угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ch(System.Double)">
            <summary>
            Возвращает гиперболический конус угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Th(System.Double)">
            <summary>
            Возвращает гиперболический тангенс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cth(System.Double)">
            <summary>
            Возвращает гиперболический котангенс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sch(System.Double)">
            <summary>
            Возвращает гиперболический секанс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Csch(System.Double)">
            <summary>
            Возвращает гиперболический косеканс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ash(System.Double)">
            <summary>
            Возвращает гиперболический арксинус числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ach(System.Double)">
            <summary>
            Возвращает гиперболический арккосинус числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ath(System.Double)">
            <summary>
            Возвращает гиперболический арктангенс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acth(System.Double)">
            <summary>
            Возвращает гиперболический арккотангенс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asch(System.Double)">
            <summary>
            Возвращает гиперболический арксеканс числа.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acsch(System.Double)">
            <summary>
            Возвращает гиперболический арккосеканс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sh(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический синус угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ch(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический косинус угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Th(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический тангенс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cth(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический котангенс угла.
            </summary>
            <param name="a">Угол в радианах</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sch(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический секанс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Csch(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический косеканс угла.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ash(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арксинус числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ach(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арккосинус числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Ath(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арктангенс числа.
            </summary>
            <param name="a">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acth(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арккотангенс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Asch(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арксеканс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Acsch(UMapx.Core.Complex)">
            <summary>
            Возвращает гиперболический арккосеканс числа.
            </summary>
            <param name="a">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsPrime(System.Int32)">
            <summary>
            Проверяет является ли числом простым.
            <remarks>
            Данный метод основан на переборе всех делителей.
            </remarks>
            </summary>
            <param name="p">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.IsPrime(System.Int64)">
            <summary>
            Проверяет является ли числом простым.
            <remarks>
            Данный метод основан на переборе всех делителей.
            </remarks>
            </summary>
            <param name="p">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Coprime(System.Int32,System.Int32)">
            <summary>
            Возвращает взаимнопростое с "a" число.
            </summary>
            <param name="a">Целое число</param>
            <param name="increment">Начальный вброс</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Coprime(System.Int64,System.Int64)">
            <summary>
            Возвращает взаимнопростое с "a" число.
            </summary>
            <param name="a">Целое число</param>
            <param name="increment">Начальный вброс</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Mod(System.Int32,System.Int32)">
            <summary>
            Возвращает остаток от деления одного числа на другое.
            </summary>
            <param name="a">Делимое</param>
            <param name="n">Делитель</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Mod(System.Int64,System.Int64)">
            <summary>
            Возвращает остаток от деления одного числа на другое.
            </summary>
            <param name="a">Делимое</param>
            <param name="n">Делитель</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Mod(System.Double,System.Double)">
            <summary>
            Возвращает остаток от деления одного числа на другое.
            </summary>
            <param name="a">Делимое</param>
            <param name="n">Делитель</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.ModPow(System.Int32,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Возвращает результат возведения числа "a" в степень "x" по модулю p.
            </summary>
            <param name="a">Число</param>
            <param name="x">Степень</param>
            <param name="p">Модуль</param>
            <param name="modified">Использовать модифицированный алгоритм или нет</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.ModPow(System.Int64,System.Int64,System.Int64,System.Boolean)">
            <summary>
            Возвращает результат возведения числа "a" в степень "x" по модулю p.
            </summary>
            <param name="a">Число</param>
            <param name="x">Степень</param>
            <param name="p">Модуль</param>
            <param name="modified">Использовать модифицированный алгоритм или нет</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.leftmodexp(System.Int64,System.Int64,System.Int64)">
            <summary>
            Возвращает результат возведения числа "a" в степень "x" по модулю p.
            </summary>
            <param name="a">Число</param>
            <param name="x">Степень</param>
            <param name="p">Модуль</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.rightmodexp(System.Int64,System.Int64,System.Int64)">
            <summary>
            Возвращает результат возведения числа "a" в степень "x" по модулю p.
            </summary>
            <param name="a">Число</param>
            <param name="x">Степень</param>
            <param name="p">Модуль</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.ModInv(System.Int32,System.Int32)">
            <summary>
            Возвращает обратное число по модулю.
            </summary>
            <param name="a">Число</param>
            <param name="n">Модуль</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.ModInv(System.Int64,System.Int64)">
            <summary>
            Возвращает обратное число по модулю.
            </summary>
            <param name="a">Число</param>
            <param name="n">Модуль</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Euclidean(System.Int32,System.Int32)">
            <summary>
            Реализует обобщенный алгоритм Евклида.
            </summary>
            <param name="a">Число</param>
            <param name="n">Модуль</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Euclidean(System.Int64,System.Int64)">
            <summary>
            Реализует обобщенный алгоритм Евклида.
            </summary>
            <param name="a">Число</param>
            <param name="n">Модуль</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Gcd(System.Int32,System.Int32)">
            <summary>
            Возвращает значение наибольшего общего делителя двух чисел.
            </summary>
            <param name="a">Целое число</param>
            <param name="b">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Gcd(System.Int64,System.Int64)">
            <summary>
            Возвращает значение наибольшего общего делителя двух чисел.
            </summary>
            <param name="a">Целое число</param>
            <param name="b">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Lcm(System.Int32,System.Int32)">
            <summary>
            Возвращает значение наименьшего общего кратного двух чисел.
            </summary>
            <param name="a">Целое число</param>
            <param name="b">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Lcm(System.Int64,System.Int64)">
            <summary>
            Возвращает значение наименьшего общего кратного двух чисел.
            </summary>
            <param name="a">Целое число</param>
            <param name="b">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Itf(System.Int32,System.Boolean)">
            <summary>
            Возвращает массив множителей, из которых состоит число.
            </summary>
            <param name="n">Целое число</param>
            <param name="onlyPrimes">Только простые множители или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Itf(System.Int64,System.Boolean)">
            <summary>
            Возвращает массив множителей, из которых состоит число.
            </summary>
            <param name="n">Целое число</param>
            <param name="onlyPrimes">Только простые множители или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pollard(System.Int32)">
            <summary>
            Возвращает Po-делитель.
            </summary>
            <param name="n">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Pollard(System.Int64)">
            <summary>
            Возвращает Po-делитель.
            </summary>
            <param name="n">Целое число</param>
            <returns>Целое число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Etf(System.Int32)">
            <summary>
            Возвращает значение функции Эйлера.
            </summary>
            <param name="n">Натуральное число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Etf(System.Int64)">
            <summary>
            Возвращает значение функции Эйлера.
            </summary>
            <param name="n">Натуральное число</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Sieve(System.Int32)">
            <summary>
            Реализует решето для поиска простых чисел.
            <remarks>
            Рекурсивная реализация оптимизированного по памяти сегментированного решета Эратосфена.
            Операционная сложность алгоритма O(N*logN). Сложность по памяти O(Δ), где Δ=sqrt(N).
            </remarks>
            </summary>
            <param name="limit">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Radical(System.Int32)">
            <summary>
            Возвращает радикал целого числа.
            </summary>
            <param name="n">Число</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Radical(System.Int64)">
            <summary>
            Возвращает радикал целого числа.
            </summary>
            <param name="n">Число</param>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Decimal2Base(System.Int64,System.Int32)">
            <summary>
            Возвращает вектор, являющийся представлением десятичного числа в заданной системе счисления.
            <remarks>
            Пример: 10[10] = {1,0,1,0}[2].
            </remarks>
            </summary>
            <param name="x">Целое число без знака</param>
            <param name="newbase">Новое основание числа</param>
            <returns>Вектор-строка</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Base2Decimal(System.Int32[],System.Int32)">
            <summary>
            Возвращает десятичное число, представленное в дисятичной системе счисления.
            <remarks>
            Пример: {1,0,1,0}[2] = 10[10].
            </remarks>
            </summary>
            <param name="x">Вектор-строка</param>
            <param name="thisbase">Основание числа</param>
            <returns>Десятичное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Vector2Numeral(System.Int32[])">
            <summary>
            Возвращает число, интерпретирующее заданный вектор в десятичной системе счисления.
            <remarks>
            Пример: {1,0,1,0}[2] = 1010[10].
            </remarks>
            </summary>
            <param name="x">Вектор-строка</param>
            <returns>Десятичное число</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Numeral2Vector(System.Int64)">
            <summary>
            Возвращает вектор-строку, представляющий разбиение десятичного числа на компоненты.
            <remarks>
            Пример: 1010[10] = {1,0,1,0}[2]
            </remarks>
            </summary>
            <param name="x">Десятичное число</param>
            <returns>Вектор-строка</returns>
        </member>
        <member name="M:UMapx.Core.Maths.NumLength(System.Int64,System.Int32)">
            <summary>
            Возвращает значение разрядности числа в заданной системе счисления.
            </summary>
            <param name="x">Целое число без знака</param>
            <param name="numbase">Основание</param>
            <returns>32-битное число без знаком</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Hypotenuse(System.Double,System.Double)">
            <summary>
            Возвращает значение гипотенузы.
            </summary>
            <param name="a">Катет</param>
            <param name="b">Катет</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Cubic(System.Double,System.Double,System.Double)">
            <summary>
            Реализует решение кубического уравнения вида: 
            x^3 + a*x^2 + b*x + c = 0.
            </summary>
            <param name="a">Коэффициент "a"</param>
            <param name="b">Коэффициент "b"</param>
            <param name="c">Коэффициент "c"</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Quadratic(System.Double,System.Double,System.Double)">
            <summary>
            Реализует решение квадратного уравнения вида: 
            a*x^2 + b*x + c = 0.
            </summary>
            <param name="a">Коэффициент "a"</param>
            <param name="b">Коэффициент "b"</param>
            <param name="c">Коэффициент "c"</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.BiQuadratic(System.Double,System.Double,System.Double)">
            <summary>
            Реализует решение биквадратного уравнения вида: 
            a*x^4 + b*x^2 + c = 0.
            </summary>
            <param name="a">Коэффициент "a"</param>
            <param name="b">Коэффициент "b"</param>
            <param name="c">Коэффициент "c"</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Rotation(System.Double,System.Double)">
            <summary>
            Реализует построение матрицы вращения Гивенса для пары действительных чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Rotation(UMapx.Core.Complex,UMapx.Core.Complex)">
            <summary>
            Реализует построение матрицы вращения Гивенса для пары комплексных чисел.
            </summary>
            <param name="a">Первое число</param>
            <param name="b">Второе число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Normalize(System.Int32,System.Int32,System.Int32)">
            <summary>
            Нормализует случайную величину относительно {min, max} диапазона.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="min">Минимальное значение, которое принимает случайная величина</param>
            <param name="max">Максимальное значение, которое принимает случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Maths.Normalize(System.Double,System.Double,System.Double)">
            <summary>
            Нормализует случайную величину относительно {min, max} диапазона.
            </summary>
            <param name="x">Случайная величина</param>
            <param name="min">Минимальное значение, которое принимает случайная величина</param>
            <param name="max">Максимальное значение, которое принимает случайная величина</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Core.Distance">
            <summary>
            Используется для вычисления расстояний.
            </summary>
        </member>
        <member name="M:UMapx.Core.Distance.Euclidean(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Euclidean". 
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Chebyshev(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Chebyshev". 
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Manhattan(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Manhattan". 
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Angular(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Angular". 
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.BrayCurtis(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Bray-Curtis".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Canberra(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Canberra".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Dice(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Dice".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Hellinger(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Hellinger".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Jaccard(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Jaccard".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Kulczynski(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Kulczynski".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Minkowski(System.Double[],System.Double[],System.Double)">
            <summary>
            Возвращает значение расстояния "Minkowski".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <param name="order">Порядок</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.RusselRao(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Russel-Rao".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.SokalMichener(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Sokal-Michener".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.SokalSneath(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Sokal-Sneath".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.Yule(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Yule".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Distance.SquareEuclidian(System.Double[],System.Double[])">
            <summary>
            Возвращает значение расстояния "Square-Euclidian".
            </summary>
            <param name="p">Одномерный массив</param>
            <param name="q">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Window.Planck">
            <summary>
            Определяет оконную функцию Планка.
            </summary>
        </member>
        <member name="T:UMapx.Window.WindowBase">
            <summary>
            Определяет общий класс для оконных функций.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Window_function
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Window.IWindow">
            <summary>
            Определяет общий вид оконных функций.
            </summary>
        </member>
        <member name="M:UMapx.Window.IWindow.Function(System.Double)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.IWindow.GetWindow">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.IWindow.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.IWindow.Function(System.Double[],System.Int32)">
            <summary>
            Возвращает массив значений оконной функции.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.IWindow.Function(System.Double[])">
            <summary>
            Возвращает массив значений оконной функции.
            </summary>
            <param name="x">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.IWindow.FrameSize">
            <summary>
            Получает или задает размер окна.
            </summary>
        </member>
        <member name="F:UMapx.Window.WindowBase.frameSize">
            <summary>
            Размер окна.
            </summary>
        </member>
        <member name="M:UMapx.Window.WindowBase.Function(System.Double)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.WindowBase.GetWindow">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WindowBase.Function(System.Double[],System.Int32)">
            <summary>
            Возвращает массив значений оконной функции.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WindowBase.Function(System.Double[])">
            <summary>
            Возвращает массив значений оконной функции.
            </summary>
            <param name="x">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WindowBase.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.WindowBase.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.WindowBase.FrameSize">
            <summary>
            Получает или задает размер окна.
            </summary>
        </member>
        <member name="M:UMapx.Window.Planck.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует оконную функцию Планка.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="a">Параметр формы [0, 0.5]</param>
        </member>
        <member name="M:UMapx.Window.Planck.Z(System.Double,System.Boolean,System.Int32)">
            <summary>
            Функция Z+-(x, a).
            </summary>
            <param name="x">Носитель</param>
            <param name="p">Знак</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Planck.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Planck.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Planck.A">
            <summary>
            Получает или задает значение параметра формы [0, 0.5].
            </summary>
        </member>
        <member name="T:UMapx.Window.Tukey">
            <summary>
            Определяет оконную функцию Тьюки.
            </summary>
        </member>
        <member name="M:UMapx.Window.Tukey.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует оконную функцию Тьюки.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="a">Параметр формы [0, 1]</param>
        </member>
        <member name="M:UMapx.Window.Tukey.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Tukey.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Tukey.A">
            <summary>
            Получает или задает значение параметра формы [0, 1].
            </summary>
        </member>
        <member name="T:UMapx.Window.Confined">
            <summary>
            Определяет закрытую оконную функцию Гаусса.
            </summary>
        </member>
        <member name="M:UMapx.Window.Confined.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует закрытую оконную функцию Гаусса.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="sigma">Среднеквадратическое отклонение (0.14 * N)</param>
        </member>
        <member name="M:UMapx.Window.Confined.#ctor(System.Int32)">
            <summary>
            Инициализирует закрытую оконную функцию Гаусса.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Confined.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Confined.G(System.Double)">
            <summary>
            Функция G(x).
            </summary>
            <param name="x">Носитель</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Confined.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Confined.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения (>0).
            </summary>
        </member>
        <member name="T:UMapx.Window.Normal">
            <summary>
            Определяет обобщенную оконную нормальную функцию.
            </summary>
        </member>
        <member name="M:UMapx.Window.Normal.#ctor(System.Int32,System.Double,System.Double)">
            <summary>
            Инициализирует обобщенную оконную нормальную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="sigma">Среднеквадратическое отклонение (>0)</param>
            <param name="pow">Степень<remarks>При p = 2 - окно Гаусса</remarks></param>
        </member>
        <member name="M:UMapx.Window.Normal.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Normal.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Normal.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения (>0).
            </summary>
        </member>
        <member name="P:UMapx.Window.Normal.Pow">
            <summary>
            Степень.
            </summary>
        </member>
        <member name="T:UMapx.Window.Kaiser">
            <summary>
            Определяет оконную функцию Кайзера.
            </summary>
        </member>
        <member name="M:UMapx.Window.Kaiser.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует оконную функцию Кайзера.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="a">Параметр формы</param>
        </member>
        <member name="M:UMapx.Window.Kaiser.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Kaiser.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Kaiser.A">
            <summary>
            Получает или задает значение параметра формы.
            </summary>
        </member>
        <member name="T:UMapx.Window.Welch">
            <summary>
            Определяет оконную функцию "Welch".
            </summary>
        </member>
        <member name="M:UMapx.Window.Welch.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию "Welch".
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Welch.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Welch.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Lanzcos">
            <summary>
            Определяет оконную функцию Ланцоша.
            </summary>
        </member>
        <member name="M:UMapx.Window.Lanzcos.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Ланцоша.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Lanzcos.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Lanzcos.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Parzen">
            <summary>
            Определяет оконную функцию Парзена.
            </summary>
        </member>
        <member name="M:UMapx.Window.Parzen.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Парзена.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Parzen.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Parzen.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.FlatTop">
            <summary>
            Определяет оконную функцию "Flat-Top".
            </summary>
        </member>
        <member name="M:UMapx.Window.FlatTop.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию "Flat-Top".
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.FlatTop.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.FlatTop.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Nuttall">
            <summary>
            Определяет оконную функцию Ньюттолла.
            </summary>
        </member>
        <member name="M:UMapx.Window.Nuttall.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Ньюттолла.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Nuttall.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Nuttall.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.BlackmanNuttall">
            <summary>
            Определяет оконную функцию Блэкмана-Ньюттолла.
            </summary>
        </member>
        <member name="M:UMapx.Window.BlackmanNuttall.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Блэкмана-Ньюттолла.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.BlackmanNuttall.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.BlackmanNuttall.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.BlackmanHarris">
            <summary>
            Определяет оконную функцию Блэкмана-Харриса.
            </summary>
        </member>
        <member name="M:UMapx.Window.BlackmanHarris.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Блэкмана-Харриса.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.BlackmanHarris.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.BlackmanHarris.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Blackman">
            <summary>
            Определяет оконную функцию Блэкмана.
            </summary>
        </member>
        <member name="M:UMapx.Window.Blackman.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Блэкмана.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Blackman.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Blackman.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.BarlettHann">
            <summary>
            Определяет оконную функцию Барлетта-Ханна.
            </summary>
        </member>
        <member name="M:UMapx.Window.BarlettHann.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Барлетта-Ханна.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.BarlettHann.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.BarlettHann.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Hann">
            <summary>
            Определяет оконную функцию Ханна (Хеннинга).
            </summary>
        </member>
        <member name="M:UMapx.Window.Hann.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Ханна (Хеннинга).
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Hann.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Hann.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Hamming">
            <summary>
            Определяет оконную функцию Хэмминга.
            </summary>
        </member>
        <member name="M:UMapx.Window.Hamming.#ctor(System.Int32)">
            <summary>
            Инициализирует оконную функцию Хэмминга.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Hamming.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Hamming.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="T:UMapx.Window.Cosine">
            <summary>
            Определяет косинусную оконную функцию.
            </summary>
        </member>
        <member name="M:UMapx.Window.Cosine.#ctor(System.Int32)">
            <summary>
            Инициализирует косинусную оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Cosine.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Cosine.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.Cosine.cosinefunc(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Множитель окна</returns>
        </member>
        <member name="T:UMapx.Window.Sine">
            <summary>
            Определяет синусную оконную функцию.
            </summary>
        </member>
        <member name="M:UMapx.Window.Sine.#ctor(System.Int32)">
            <summary>
            Инициализирует синусную оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
        </member>
        <member name="M:UMapx.Window.Sine.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Sine.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.Sine.sinefunc(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="T:UMapx.Window.Gabor">
            <summary>
            Определяет оконную функцию Габора.
            </summary>
        </member>
        <member name="M:UMapx.Window.Gabor.#ctor(System.Int32,System.Double)">
            <summary>
            Инициализирует оконную функцию Габора.
            </summary>
            <param name="frameSize">Размер окна</param>
            <param name="sigma">Параметр сжатия</param>
        </member>
        <member name="M:UMapx.Window.Gabor.Function(System.Double,System.Int32)">
            <summary>
            Возвращает значение оконной функции.
            </summary>
            <param name="x">Носитель</param>
            <param name="frameSize">Размер окна</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Window.Gabor.GetWindow(System.Int32)">
            <summary>
            Возвращает оконную функцию.
            </summary>
            <param name="frameSize">Размер окна</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.Gabor.Sigma">
            <summary>
            Получает или задает значение среднеквадратического отклонения (>0).
            </summary>
        </member>
        <member name="T:UMapx.Window.FastShortTimeFourierTransform">
            <summary>
            Определяет быстрое оконное преобразование Фурье.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Short-time_Fourier_transform
            </remarks>
            </summary>
        </member>
        <member name="T:UMapx.Window.IWindowTransform">
            <summary>
            Определяет общий интерфейс окнонных преобразований.
            </summary>
        </member>
        <member name="P:UMapx.Window.IWindowTransform.Window">
            <summary>
            Получает или задает оконную функцию.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastShortTimeFourierTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastShortTimeFourierTransform.window">
            <summary>
            Оконная функция.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastShortTimeFourierTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastShortTimeFourierTransform.coefs">
            <summary>
            Коэффициенты оконной функции.
            </summary>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.#ctor(UMapx.Window.IWindow,System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое оконное преобразование Фурье.
            </summary>
            <param name="function">Оконная функция</param>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное оконное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное оконное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное оконное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное оконное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastShortTimeFourierTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Window.FastShortTimeFourierTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Window.FastShortTimeFourierTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="P:UMapx.Window.FastShortTimeFourierTransform.Window">
            <summary>
            Получает или задает оконную функцию.
            </summary>
        </member>
        <member name="T:UMapx.Window.ShortTimeFourierTransform">
            <summary>
            Определяет оконное преобразование Фурье.
            <remarks>
            Более подробную информацию можно найти на сайте:
            https://en.wikipedia.org/wiki/Short-time_Fourier_transform
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Window.ShortTimeFourierTransform.FFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Window.ShortTimeFourierTransform.window">
            <summary>
            Оконная функция.
            </summary>
        </member>
        <member name="F:UMapx.Window.ShortTimeFourierTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Window.ShortTimeFourierTransform.coefs">
            <summary>
            Коэффициенты оконной функции.
            </summary>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.#ctor(UMapx.Window.IWindow,System.Boolean,UMapx.Core.Direction)">
            <summary>
            Инициализирует оконное преобразование Фурье.
            </summary>
            <param name="function">Оконная функция</param>
            <param name="normalized">Нормализированное преобразование или нет</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное оконное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное оконное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное оконное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное оконное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.ShortTimeFourierTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="P:UMapx.Window.ShortTimeFourierTransform.Normalized">
            <summary>
            Нормализированное преобразование или нет.
            </summary>
        </member>
        <member name="P:UMapx.Window.ShortTimeFourierTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="P:UMapx.Window.ShortTimeFourierTransform.Window">
            <summary>
            Получает или задает оконную функцию.
            </summary>
        </member>
        <member name="T:UMapx.Window.WeylHeisenbergTransform">
            <summary>
            Определяет группу ортогональных базисов и дискретных преобразований Вейля-Гейзенберга.
            <remarks>
            Базисы Вейля-Гейзенберга используются для получения частотно-временных характеристик сигнала.
            Более подробную информацию можно найти на сайте:
            https://elibrary.ru/item.asp?id=29767333
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Window.WeylHeisenbergTransform.window">
            <summary>
            Оконная функция.
            </summary>
        </member>
        <member name="F:UMapx.Window.WeylHeisenbergTransform.m">
            <summary>
            Количество сдвигов по частоте.
            </summary>
        </member>
        <member name="F:UMapx.Window.WeylHeisenbergTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.#ctor(UMapx.Window.IWindow,System.Int32,UMapx.Core.Direction)">
            <summary>
            Инициализирует группу ортогональных базисов и преобразований Вейля-Гейзенберга.
            </summary>
            <param name="window">Оконная функция</param>
            <param name="m">Количество сдвигов по частоте [4, N]</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.WeylHeisenberg(UMapx.Window.IWindow,System.Int32,System.Int32,System.Boolean)">
            <summary>
            Возвращает комплексную матрицу базиса Вейля-Гейзенберга.
            <remarks>
            Размерность матрицы [N, N], где N = M * L.
            </remarks>
            </summary>
            <param name="window">Оконная функция</param>
            <param name="N">Количество отсчетов, вмещающих функцию</param>
            <param name="M">Количество сдвигов по частоте</param>
            <param name="orthogonalize">Ортогонализированная матрица или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.WeylHeisenberg(System.Double[],System.Int32,System.Boolean)">
            <summary>
            Возвращает комплексную матрицу базиса Вейля-Гейзенберга.
            <remarks>
            Размерность матрицы [N, N], где N = M * L.
            </remarks>
            </summary>
            <param name="g0">Формирующая функция</param>
            <param name="M">Количество сдвигов по частоте</param>
            <param name="orthogonalize">Ортогонализированная матрица или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.GetPacket(UMapx.Window.IWindow,System.Int32)">
            <summary>
            Возвращает вектор значений оконной функции.
            </summary>
            <param name="window">Оконная функция</param>
            <param name="length">Количество отсчетов, вмещаемых функцию</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.nSymmetry(UMapx.Window.IWindow,System.Int32)">
            <summary>
            Возвращает вектор значений оконной функции, удовлетворяющей условию N-1 симметрии.
            </summary>
            <param name="window">Оконная функция</param>
            <param name="length">Количество отсчетов функции</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.WeylHeisenberg(System.Double[],System.Int32)">
            <summary>
            Возвращает комплексную матрицу базиса Вейля-Гейзенберга.
            <remarks>
            Размерность матрицы [N, N], где N = M * L.
            </remarks>
            </summary>
            <param name="g0">Формирующая функция</param>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="F:UMapx.Window.WeylHeisenbergTransform.DFT">
            <summary>
            Преобразование Фурье.
            </summary>
        </member>
        <member name="F:UMapx.Window.WeylHeisenbergTransform.FFT">
            <summary>
            Быстрое преобразование Фурье.
            </summary>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Zak(System.Double[],System.Int32)">
            <summary>
            Реализует Zak-ортогонализацию вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.WeylHeisenbergTransform.Zak(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Реализует Zak-ортогонализацию вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.WeylHeisenbergTransform.M">
            <summary>
            Получает или задает количество сдвигов по частоте [4, N].
            <remarks>
            Четное число.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Window.WeylHeisenbergTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="P:UMapx.Window.WeylHeisenbergTransform.Window">
            <summary>
            Получает или задает оконную функцию.
            </summary>
        </member>
        <member name="T:UMapx.Window.FastWeylHeisenbergTransform">
            <summary>
            Определяет класс быстрого преобразования Вейля-Гейзенберга.
            <remarks>
            Класс представляет вычислительно эффективную реализацию одномерного и двумерного дикретных ортогональных
            преобразований Вейля-Гейзенберга.
            Более подробную информацию можно найти на сайте:
            https://elibrary.ru/title_about.asp?id=58245
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Window.FastWeylHeisenbergTransform.FFT">
            <summary>
            Преобразование Фурье.
            <remarks>
            Используется как вспомогательный компонент.
            </remarks>
            </summary>
        </member>
        <member name="F:UMapx.Window.FastWeylHeisenbergTransform.window">
            <summary>
            Оконная функция.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastWeylHeisenbergTransform.m">
            <summary>
            Количество сдвигов по частоте.
            </summary>
        </member>
        <member name="F:UMapx.Window.FastWeylHeisenbergTransform.direction">
            <summary>
            Направление обработки.
            </summary>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.#ctor(UMapx.Window.IWindow,System.Int32,UMapx.Core.Direction)">
            <summary>
            Инициализирует быстрое преобразование Вейля-Гейзенберга.
            </summary>
            <param name="window">Оконная функция</param>
            <param name="m">Количество сдвигов по частоте [4, N]</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Forward(UMapx.Core.Complex[])">
            <summary>
            Прямое дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Backward(UMapx.Core.Complex[])">
            <summary>
            Обратное дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Forward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Прямое дискретное быстрое преобразование Вейля-Гейзенберга.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Backward(UMapx.Core.Complex[0:,0:])">
            <summary>
            Обратное дискретное быстрое преобразование Вейля-Гейзенберга.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Forward(System.Double[])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Backward(System.Double[])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Forward(System.Double[0:,0:])">
            <summary>
            Прямое дискретное преобразование Фурье.
            </summary>
            <param name="A">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.Backward(System.Double[0:,0:])">
            <summary>
            Обратное дискретное преобразование Фурье.
            </summary>
            <param name="B">Двумерный массив</param>
            <returns>Двумерный массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.WHT(UMapx.Core.Complex[],System.Double[],System.Int32)">
            <summary>
            Прямое быстрое дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="input">Одномерный массив</param>
            <param name="g0">Формирующая WH-функция</param>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Одноменый массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.IWHT(UMapx.Core.Complex[],System.Double[],System.Int32)">
            <summary>
            Обратное быстрое дискретное преобразование Вейля-Гейзенберга.
            </summary>
            <param name="input">Одномерный массив</param>
            <param name="g0">Формирующая WH-функция</param>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Одноменый массив</returns>
        </member>
        <member name="M:UMapx.Window.FastWeylHeisenbergTransform.GetRotation(System.Int32)">
            <summary>
            Возвращает одномерный массив фазовых поворотов.
            </summary>
            <param name="M">Количество сдвигов по частоте</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="P:UMapx.Window.FastWeylHeisenbergTransform.M">
            <summary>
            Получает или задает количество сдвигов по частоте [4, N].
            <remarks>
            Четное число.
            </remarks>
            </summary>
        </member>
        <member name="P:UMapx.Window.FastWeylHeisenbergTransform.Direction">
            <summary>
            Получает или задает направление обработки.
            </summary>
        </member>
        <member name="P:UMapx.Window.FastWeylHeisenbergTransform.Window">
            <summary>
            Получает или задает оконную функцию.
            </summary>
        </member>
        <member name="T:UMapx.Core.RangeDouble">
            <summary>
            Определяет пару дробных чисел, представляющих отрезок.
            </summary>
        </member>
        <member name="M:UMapx.Core.RangeDouble.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует пару целых чисел, представляющих отрезок.
            </summary>
            <param name="min">Нижняя граница отрезка</param>
            <param name="max">Верхняя граница отрезка</param>
        </member>
        <member name="M:UMapx.Core.RangeDouble.IsOnRange(System.Double)">
            <summary>
            Проверяет находится ли случайная величина в заданном интервале.
            </summary>
            <param name="x">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа RangeDouble.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.op_Equality(UMapx.Core.RangeDouble,UMapx.Core.RangeDouble)">
            <summary>
            Проверяет равны ли два объекта типа RangeDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.op_Inequality(UMapx.Core.RangeDouble,UMapx.Core.RangeDouble)">
            <summary>
            Проверяет не равны ли два объекта типа RangeDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.RangeDouble.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.RangeDouble.Min">
            <summary>
            Получает или задает нижнюю границу отрезка.
            </summary>
        </member>
        <member name="P:UMapx.Core.RangeDouble.Max">
            <summary>
            Получает или задает верхнюю границу отрезка.
            </summary>
        </member>
        <member name="T:UMapx.Core.RangeInt">
            <summary>
            Определяет пару целых чисел, представляющих отрезок.
            </summary>
        </member>
        <member name="M:UMapx.Core.RangeInt.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует пару целых чисел, представляющих отрезок.
            </summary>
            <param name="min">Нижняя граница отрезка</param>
            <param name="max">Верхняя граница отрезка</param>
        </member>
        <member name="M:UMapx.Core.RangeInt.IsOnRange(System.Int32)">
            <summary>
            Проверяет находится ли случайная величина в заданном интервале.
            </summary>
            <param name="x">Число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа RangeInt.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.op_Equality(UMapx.Core.RangeInt,UMapx.Core.RangeInt)">
            <summary>
            Проверяет равны ли два объекта типа RangeInt между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.op_Inequality(UMapx.Core.RangeInt,UMapx.Core.RangeInt)">
            <summary>
            Проверяет не равны ли два объекта типа RangeInt между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.RangeInt.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.RangeInt.Min">
            <summary>
            Получает или задает нижнюю границу отрезка.
            </summary>
        </member>
        <member name="P:UMapx.Core.RangeInt.Max">
            <summary>
            Получает или задает верхнюю границу отрезка.
            </summary>
        </member>
        <member name="T:UMapx.Core.PointDouble">
            <summary>
            Определяет пару дробных чисел, представляющих упорядоченную пару координат X и Y.
            </summary>
        </member>
        <member name="M:UMapx.Core.PointDouble.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует пару целых чисел, представляющих упорядоченную пару координат X и Y.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
        </member>
        <member name="M:UMapx.Core.PointDouble.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа PointDouble.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.op_Equality(UMapx.Core.PointDouble,UMapx.Core.PointDouble)">
            <summary>
            Проверяет равны ли два объекта типа PointDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.op_Inequality(UMapx.Core.PointDouble,UMapx.Core.PointDouble)">
            <summary>
            Проверяет не равны ли два объекта типа PointDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.PointDouble.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.PointDouble.X">
            <summary>
            Получает или задает координату X.
            </summary>
        </member>
        <member name="P:UMapx.Core.PointDouble.Y">
            <summary>
            Получает или задает координату Y.
            </summary>
        </member>
        <member name="T:UMapx.Core.PointInt">
            <summary>
            Определяет пару целых чисел, представляющих упорядоченную пару координат X и Y.
            </summary>
        </member>
        <member name="M:UMapx.Core.PointInt.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует пару целых чисел, представляющих упорядоченную пару координат X и Y.
            </summary>
            <param name="x">Координата X</param>
            <param name="y">Координата Y</param>
        </member>
        <member name="M:UMapx.Core.PointInt.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа PointInt.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.op_Equality(UMapx.Core.PointInt,UMapx.Core.PointInt)">
            <summary>
            Проверяет равны ли два объекта типа PointInt между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.op_Inequality(UMapx.Core.PointInt,UMapx.Core.PointInt)">
            <summary>
            Проверяет не равны ли два объекта типа PointInt между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.PointInt.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.PointInt.X">
            <summary>
            Получает или задает координату X.
            </summary>
        </member>
        <member name="P:UMapx.Core.PointInt.Y">
            <summary>
            Получает или задает координату Y.
            </summary>
        </member>
        <member name="T:UMapx.Core.SizeDouble">
            <summary>
            Определяет пару дробных чисел, представляющих упорядоченную пару ширины и высоты.
            </summary>
        </member>
        <member name="M:UMapx.Core.SizeDouble.#ctor(System.Double,System.Double)">
            <summary>
            Инициализирует пару целых чисел, представляющих упорядоченную пару ширины и высоты.
            </summary>
            <param name="width">Ширина</param>
            <param name="height">Высота</param>
        </member>
        <member name="M:UMapx.Core.SizeDouble.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа SizeDouble.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.op_Equality(UMapx.Core.SizeDouble,UMapx.Core.SizeDouble)">
            <summary>
            Проверяет равны ли два объекта типа SizeDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.op_Inequality(UMapx.Core.SizeDouble,UMapx.Core.SizeDouble)">
            <summary>
            Проверяет не равны ли два объекта типа SizeDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.SizeDouble.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.SizeDouble.Height">
            <summary>
            Получает или задает нижнюю границу отрезка.
            </summary>
        </member>
        <member name="P:UMapx.Core.SizeDouble.Width">
            <summary>
            Получает или задает верхнюю границу отрезка.
            </summary>
        </member>
        <member name="T:UMapx.Core.SizeInt">
            <summary>
            Определяет пару целых чисел, представляющих упорядоченную пару ширины и высоты.
            </summary>
        </member>
        <member name="M:UMapx.Core.SizeInt.#ctor(System.Int32,System.Int32)">
            <summary>
            Инициализирует пару целых чисел, представляющих упорядоченную пару ширины и высоты.
            </summary>
            <param name="width">Ширина</param>
            <param name="height">Высота</param>
        </member>
        <member name="M:UMapx.Core.SizeInt.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.ToString">
            <summary>
            Преобразует логическое значение в соответствующее ему строковое представление.
            </summary>
            <returns>Текст как последовательность знаков Юникода</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа SizeInt.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.op_Equality(UMapx.Core.SizeInt,UMapx.Core.SizeInt)">
            <summary>
            Проверяет равны ли два объекта типа SizeInt между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.op_Inequality(UMapx.Core.SizeInt,UMapx.Core.SizeInt)">
            <summary>
            Проверяет не равны ли два объекта типа SizeDouble между собой.
            </summary>
            <param name="a">Пара чисел</param>
            <param name="b">Пара чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.System#ICloneable#Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.Clone">
            <summary>
            Создает копию пары чисел.
            </summary>
            <returns>Пара чисел</returns>
        </member>
        <member name="M:UMapx.Core.SizeInt.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Получает информацию об объекте.
            </summary>
            <param name="info">Данные, необходимые для сериализации и диссериализации объекта</param>
            <param name="context">Источник и назначение заданного потока</param>
        </member>
        <member name="P:UMapx.Core.SizeInt.Height">
            <summary>
            Получает или задает нижнюю границу отрезка.
            </summary>
        </member>
        <member name="P:UMapx.Core.SizeInt.Width">
            <summary>
            Получает или задает верхнюю границу отрезка.
            </summary>
        </member>
        <member name="T:UMapx.Core.Matrice">
            <summary>
            Используется для реализации стандартных алгебраических операций над матрицами и векторами.
            </summary>
        </member>
        <member name="M:UMapx.Core.Matrice.IsEquals(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Проверяет равенство двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsEquals(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет равенство двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsVector(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица вектором.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSquare(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица квадратной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsPositive(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица положительной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSymmetric(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица симметричной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSkewSymmetric(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица кососимметричной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsDiagonal(System.Double[0:,0:])">
            <summary>
            Проверяет является ли матрица диагональной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsVector(UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет является ли матрица вектором.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSquare(UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет является ли матрица квадратной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSymmetric(UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет является ли матрица симметричной (эрмитовой).
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsSkewSymmetric(UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет является ли матрица кососимметричной (антиэрмитовой).
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsDiagonal(UMapx.Core.Complex[0:,0:])">
            <summary>
            Проверяет является ли матрица диагональной.
            </summary>
            <param name="m">Матрица</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Invert(System.Double[0:,0:])">
            <summary>
            Реализует операцию инвертирования матрицы.
            </summary>
            <param name="m">Квадратная матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Transponate(System.Double[0:,0:])">
            <summary>
            Реализует операцию траспонирования матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToJagged(System.Double[0:,0:])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Матрица</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.FromJagged(System.Double[][])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Invert(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует операцию инвертирования матрицы.
            </summary>
            <param name="m">Квадратная матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Transponate(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует операцию траспонирования матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conjugate(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает комплексно-сопряженную матрицу.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hermitian(UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует операцию эрмитово-сопряжения матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToJagged(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Матрица</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.FromJagged(UMapx.Core.Complex[][])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Rank(System.Double[0:,0:])">
            <summary>
            Возвращает значение ранга матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Trace(System.Double[0:,0:])">
            <summary>
            Возвращает значение следа квадратной матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Число двойночй точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Det(System.Double[0:,0:])">
            <summary>
            Возвращает значение определителя матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Число двойночй точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(System.Double[0:,0:],System.Double)">
            <summary>
            Возвращает P-норму матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="p">Параметр p</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(System.Double[0:,0:])">
            <summary>
            Возвращает норму матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Fix(System.Double[0:,0:])">
            <summary>
            Выделяет целую часть матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Permutation(System.Double[0:,0:])">
            <summary>
            Реализует построение квадратной матрицы перестановки.
            </summary>
            <param name="m">Квадратная матрица</param>
            <returns>Квадратная матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Rank(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает значение ранга матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Trace(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает значение следа квадратной матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Det(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает значение определителя матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Число двойночй точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Возвращает P-норму двумерной матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="p">Параметр p</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает норму двумерной матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Fix(UMapx.Core.Complex[0:,0:])">
            <summary>
            Выделяет целую часть двумерной матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Kronecker(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает матричное произведение Кронекера.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Kronecker(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует матричное произведение Кронекера.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Kronecker(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Реализует матричное произведение Кронекера.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Kronecker(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует матричное произведение Кронекера.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает сумму двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает сумму двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает сумму двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает сумму двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[0:,0:],System.Double)">
            <summary>
            Возвращает сумму матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex)">
            <summary>
            Возвращает сумму матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Возвращает сумму матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[0:,0:],UMapx.Core.Complex)">
            <summary>
            Возвращает сумму матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double,System.Double[0:,0:])">
            <summary>
            Возвращает сумму числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex,UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает сумму числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex,System.Double[0:,0:])">
            <summary>
            Возвращает сумму числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double,UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает сумму числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает разность двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает разность двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает разность двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает разность двух матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[0:,0:],System.Double)">
            <summary>
            Возвращает разность матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex)">
            <summary>
            Возвращает разность матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Возвращает разность матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[0:,0:],UMapx.Core.Complex)">
            <summary>
            Возвращает разность матрицы и числа.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double,System.Double[0:,0:])">
            <summary>
            Возвращает разность числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex,UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает разность числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex,System.Double[0:,0:])">
            <summary>
            Возвращает разность числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double,UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает разность числа и матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Реализует умножение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует умножение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Реализует умножение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует умножение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],System.Double)">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex)">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],UMapx.Core.Complex)">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double,System.Double[0:,0:])">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex,UMapx.Core.Complex[0:,0:])">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex,System.Double[0:,0:])">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double,UMapx.Core.Complex[0:,0:])">
            <summary>
            Умножает все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Делит матрицу на матрицу.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Делит матрицу на матрицу.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Делит матрицу на матрицу.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Делит матрицу на матрицу.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],System.Double)">
            <summary>
            Делит все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex)">
            <summary>
            Делит все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Делит все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],UMapx.Core.Complex)">
            <summary>
            Делит все элементы матрицы на число.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double,System.Double[0:,0:])">
            <summary>
            Делит число на элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex,UMapx.Core.Complex[0:,0:])">
            <summary>
            Делит число на элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex,System.Double[0:,0:])">
            <summary>
            Делит число на элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double,UMapx.Core.Complex[0:,0:])">
            <summary>
            Делит число на элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Возводит все элементы матрицы в степень.
            </summary>
            <param name="m">Матрица</param>
            <param name="pow">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double[0:,0:],UMapx.Core.Complex)">
            <summary>
            Возводит все элементы матрицы в степень.
            </summary>
            <param name="m">Матрица</param>
            <param name="pow">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double[0:,0:],System.Double)">
            <summary>
            Возводит все элементы матрицы в степень.
            </summary>
            <param name="m">Матрица</param>
            <param name="pow">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double,System.Double[0:,0:])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(UMapx.Core.Complex,System.Double[0:,0:])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double,UMapx.Core.Complex[0:,0:])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Log(System.Double[0:,0:],System.Double)">
            <summary>
            Логарифмирует все элементы матрицы по основанию.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Exp(System.Double[0:,0:])">
            <summary>
            Экспонирует все элементы матрицы по основанию.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Log(UMapx.Core.Complex[0:,0:],System.Double)">
            <summary>
            Логарифмирует все элементы матрицы по основанию.
            </summary>
            <param name="m">Матрица</param>
            <param name="a">Число</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Exp(UMapx.Core.Complex[0:,0:])">
            <summary>
            Экспонирует все элементы матрицы по основанию.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Negate(System.Double[0:,0:])">
            <summary>
            Инвертирует все элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Negate(UMapx.Core.Complex[0:,0:])">
            <summary>
            Инвертирует все элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToComplex(System.Double[0:,0:])">
            <summary>
            Возвращает комплексную матрицу.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToByte(System.Double[0:,0:])">
            <summary>
            Возвращает матрицу, значения которой принадлежат интервалу [0, 255].
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToDouble(System.Double[0:,0:])">
            <summary>
            Возвращает матрицу, значения которой принадлежат интервалу [0, 1].
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Abs(System.Double[0:,0:])">
            <summary>
            Берет модуль для всех элементов матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Abs(UMapx.Core.Complex[0:,0:])">
            <summary>
            Берет модуль для всех элементов матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(UMapx.Core.Complex[0:,0:])">
            <summary>
            Берет угол для всех элементов матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Real(UMapx.Core.Complex[0:,0:])">
            <summary>
            Берет действительную часть для всех элементов матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Imaginary(UMapx.Core.Complex[0:,0:])">
            <summary>
            Берет мнимую часть для всех элементов матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sort(System.Double[0:,0:])">
            <summary>
            Сортирует матрицу.
            </summary>
            <param name="m">Матрица</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Sum(System.Double[0:,0:])">
            <summary>
            Возвращает вектор сумм матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sum(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор сумм матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:])">
            <summary>
            Возвращает вектор произведений матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор произведений матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:])">
            <summary>
            Возвращает вектор частных матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор частных матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Max(System.Double[0:,0:])">
            <summary>
            Возвращает максимальный вектор матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Min(System.Double[0:,0:])">
            <summary>
            Возвращает минимальный вектор матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Morph(System.Double[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор матрицы, соответствующий указанному пороговому значению.
            </summary>
            <param name="m">Матрица</param>
            <param name="threshold">Пороговое значение</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(System.Double[0:,0:])">
            <summary>
            Возвращает вектор математического ожидания матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор математического ожидания матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(System.Double[0:,0:])">
            <summary>
            Возвращает вектор дисперсий матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор дисперсий матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает вектор дисперсий матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор дисперсий матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(System.Double[0:,0:])">
            <summary>
            Возвращает вектор среднеквадратических отклонений матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор среднеквадратических отклонений матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Возвращает вектор среднеквадратических отклонений матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор среднеквадратических отклонений матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cov(System.Double[0:,0:])">
            <summary>
            Возвращает матрицу ковариации.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cov(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает матрицу ковариации.
            </summary>
            <param name="m">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Entropy(System.Double[0:,0:])">
            <summary>
            Возвращает вектор энтропии матрицы.
            </summary>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[0:,0:],System.Double[0:,0:])">
            <summary>
            Реализует скалярное произведение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует скалярное произведение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[0:,0:],System.Double[0:,0:])">
            <summary>
            Реализует скалярное произведение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[0:,0:],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует скалярное произведение матриц.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[0:,0:],System.Double[0:,0:],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[0:,0:],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[0:,0:],System.Double[0:,0:],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[0:,0:],UMapx.Core.Complex[0:,0:],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[0:,0:],System.Double[],UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[0:,0:],UMapx.Core.Complex[],UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[0:,0:],System.Double[],UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[],UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Матрица</param>
            <param name="direction">Направление обработки</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Min(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического сужения.
            </summary>
            <param name="m">Двумерный массив</param>
            <param name="r0">Радиус обработки по высоте</param>
            <param name="r1">Радиус обработки по ширине</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Max(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического расширения.
            </summary>
            <param name="m">Двумерный массив</param>
            <param name="r0">Радиус обработки по высоте</param>
            <param name="r1">Радиус обработки по ширине</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Morph(System.Double[0:,0:],System.Int32,System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологии.
            </summary>
            <param name="m">Двумерный массив</param>
            <param name="r0">Радиус обработки по высоте</param>
            <param name="r1">Радиус обработки по ширине</param>
            <param name="threshold">Пороговое значение</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения.
            </summary>
            <param name="m">Двумерный массив</param>
            <param name="r0">Радиус обработки по высоте</param>
            <param name="r1">Радиус обработки по ширине</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения.
            </summary>
            <param name="m">Двумерный массив</param>
            <param name="r0">Радиус обработки по высоте</param>
            <param name="r1">Радиус обработки по ширине</param>
        </member>
        <member name="M:UMapx.Core.Matrice.FromBitmap(System.Drawing.Bitmap)">
            <summary>
            Преобразовывает точечный рисунок в матрицу значений усредненного канала.
            </summary>
            <param name="Data">Точечный рисунок</param>
            <returns>Прямоугольная матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.FromBitmap(System.Drawing.Imaging.BitmapData)">
            <summary>
            Преобразовывает точечный рисунок в матрицу значений усредненного канала.
            </summary>
            <param name="bmData">Атрибуты точечного изображения</param>
            <returns>Прямоугольная матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToBitmap(System.Double[0:,0:])">
            <summary>
            Преобразовывает прямоугольную матрицу значений каналов в монохромный точечный рисунок.
            </summary>
            <param name="m">Прямоугольная матрица</param>
            <returns>Точечный рисунок</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsEquals(System.Double[],System.Double[])">
            <summary>
            Проверяет являются ли векторы одинаковыми.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsEquals(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Проверяет являются ли векторы одинаковыми.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsPositive(System.Double[])">
            <summary>
            Проверяет являются ли векторы коллинеарными.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsCollinear(System.Double[],System.Double[])">
            <summary>
            Проверяет являются ли векторы коллинеарными.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsCollinear(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Проверяет являются ли векторы коллинеарными.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsCollinear(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Проверяет являются ли векторы коллинеарными.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.IsCollinear(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Проверяет являются ли векторы коллинеарными.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(System.Double[],System.Double)">
            <summary>
            Возвращает P-норму вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="p">Параметр p</param>
            <returns>Норма</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(System.Double[])">
            <summary>
            Возвращает норму вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <returns>Норма</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(UMapx.Core.Complex[],System.Double)">
            <summary>
            Возвращает P-норму вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="p">Параметр p</param>
            <returns>Норма</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Norm(UMapx.Core.Complex[])">
            <summary>
            Возвращает норму вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <returns>Норма</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(System.Double[],System.Double[])">
            <summary>
            Возвращает угол между двумя векторами.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Возвращает угол между двумя векторами.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Возвращает угол между двумя векторами.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает угол между двумя векторами.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Proj(System.Double[],System.Double[])">
            <summary>
            Возвращает проекцию двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Proj(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Возвращает проекцию двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Proj(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Возвращает проекцию двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Proj(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает проекцию двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cosines(System.Double[])">
            <summary>
            Возвращает направляющие косинусы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cosines(UMapx.Core.Complex[])">
            <summary>
            Возвращает направляющие косинусы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[],System.Double[])">
            <summary>
            Возвращает сумму двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает сумму двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Возвращает сумму двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Возвращает сумму двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[],System.Double)">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[],UMapx.Core.Complex)">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex[],System.Double)">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double[],UMapx.Core.Complex)">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double,System.Double[])">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex,UMapx.Core.Complex[])">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(System.Double,UMapx.Core.Complex[])">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Add(UMapx.Core.Complex,System.Double[])">
            <summary>
            Возвращает сумму вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает разность двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[],System.Double[])">
            <summary>
            Возвращает разность двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Возвращает разность двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Возвращает разность двух векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[],System.Double)">
            <summary>
            Возвращает разность вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[],UMapx.Core.Complex)">
            <summary>
            Возвращает разность вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex[],System.Double)">
            <summary>
            Возвращает разность вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double[],UMapx.Core.Complex)">
            <summary>
            Возвращает разность вектора и числа.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double,System.Double[])">
            <summary>
            Возвращает разность числа и вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex,UMapx.Core.Complex[])">
            <summary>
            Возвращает разность числа и вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(UMapx.Core.Complex,System.Double[])">
            <summary>
            Возвращает разность числа и вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sub(System.Double,UMapx.Core.Complex[])">
            <summary>
            Возвращает разность числа и вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],System.Double[])">
            <summary>
            Реализует умножение матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],System.Double[])">
            <summary>
            Реализует умножение матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[0:,0:],UMapx.Core.Complex[])">
            <summary>
            Реализует умножение матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[])">
            <summary>
            Реализует умножение матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[],System.Double[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[],System.Double)">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[],UMapx.Core.Complex)">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[],System.Double)">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[],UMapx.Core.Complex)">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double,System.Double[])">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex,UMapx.Core.Complex[])">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex,System.Double[])">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double,UMapx.Core.Complex[])">
            <summary>
            Реализует умножение вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],System.Double[])">
            <summary>
            Реализует деление матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],System.Double[])">
            <summary>
            Реализует деление матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[0:,0:],UMapx.Core.Complex[])">
            <summary>
            Реализует деление матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[])">
            <summary>
            Реализует деление матрицы на вектор вида: A * diag(v).
            </summary>
            <param name="m">Матрица</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[],System.Double[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Реализует поэлементное произведение векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[],System.Double)">
            <summary>
            Реализует деление вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[],UMapx.Core.Complex)">
            <summary>
            Реализует деление вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[],System.Double)">
            <summary>
            Реализует деление вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[],UMapx.Core.Complex)">
            <summary>
            Реализует деление вектора на число.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double,System.Double[])">
            <summary>
            Реализует деление числа на вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex,UMapx.Core.Complex[])">
            <summary>
            Реализует деление числа на вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double,UMapx.Core.Complex[])">
            <summary>
            Реализует деление числа на вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex,System.Double[])">
            <summary>
            Реализует деление числа на вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double[],System.Double)">
            <summary>
            Возводит элементы вектора в степень.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="power">Степень</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(UMapx.Core.Complex[],System.Double)">
            <summary>
            Возводит элементы вектора в степень.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="power">Степень</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double[],UMapx.Core.Complex)">
            <summary>
            Возводит элементы вектора в степень.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="power">Степень</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double,System.Double[])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(UMapx.Core.Complex,System.Double[])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Pow(System.Double,UMapx.Core.Complex[])">
            <summary>
            Возводит число поэлементно в степень.
            </summary>
            <param name="a">Число</param>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Log(System.Double[],System.Double)">
            <summary>
            Логарифмирует элементы вектора по основанию.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Log(UMapx.Core.Complex[],System.Double)">
            <summary>
            Логарифмирует элементы вектора по основанию.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="a">Число</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Exp(System.Double[])">
            <summary>
            Экспонирует элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Exp(UMapx.Core.Complex[])">
            <summary>
            Экспонирует элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToDouble(System.Double[])">
            <summary>
            Возвращает вектор, значения которого принадлежат интервалу [0, 1].
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToByte(System.Double[])">
            <summary>
            Возвращает вектор, значения которого принадлежат интервалу [0, 255].
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Abs(System.Double[])">
            <summary>
            Возвращает модуль элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Negate(System.Double[])">
            <summary>
            Инвертирует все элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Negate(UMapx.Core.Complex[])">
            <summary>
            Инвертирует все элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ToComplex(System.Double[])">
            <summary>
            Возвращает комплексный вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Abs(UMapx.Core.Complex[])">
            <summary>
            Возвращает модуль элементов комплексного вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Angle(UMapx.Core.Complex[])">
            <summary>
            Возвращает угол элементов комплексного вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Real(UMapx.Core.Complex[])">
            <summary>
            Возвращает действительную часть элементов комплексного вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Imaginary(UMapx.Core.Complex[])">
            <summary>
            Возвращает мнимую часть элементов комплексного вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conjugate(UMapx.Core.Complex[])">
            <summary>
            Возвращает комплексно-сопряженный вектор.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cov(System.Double[])">
            <summary>
            Возвращает значение ковариации вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cov(UMapx.Core.Complex[])">
            <summary>
            Возвращает значение ковариации вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sum(System.Double[])">
            <summary>
            Возвращает общее значение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sum(UMapx.Core.Complex[])">
            <summary>
            Возвращает общее значение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(System.Double[])">
            <summary>
            Возвращает общее произведение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mul(UMapx.Core.Complex[])">
            <summary>
            Возвращает общее произведение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(System.Double[])">
            <summary>
            Возвращает общее частное вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Div(UMapx.Core.Complex[])">
            <summary>
            Возвращает общее частное вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Entropy(System.Double[])">
            <summary>
            Возвращает значение энтропии вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(System.Double[])">
            <summary>
            Возвращает среднее значение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(UMapx.Core.Complex[])">
            <summary>
            Возвращает среднее значение вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(System.Double[])">
            <summary>
            Возвращает значение дисперсии.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(UMapx.Core.Complex[])">
            <summary>
            Возвращает значение дисперсии.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(System.Double[],System.Double[])">
            <summary>
            Возвращает значение дисперсии.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Var(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает значение дисперсии.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(System.Double[])">
            <summary>
            Возвращает значение среднеквадратического отклонения.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(UMapx.Core.Complex[])">
            <summary>
            Возвращает значение среднеквадратического отклонения.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комлпексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(System.Double[],System.Double[])">
            <summary>
            Возвращает значение среднеквадратического отклонения.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.StnDev(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Возвращает значение среднеквадратического отклонения.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Комлпексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mode(System.Double[])">
            <summary>
            Возвращает значение моды вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число одиночной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mode(UMapx.Core.Complex[])">
            <summary>
            Возвращает значение моды вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Extremum(System.Double[])">
            <summary>
            Возвращает значения минимума и максимума вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Пара целых чисел, представляющая отрезок</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Min(System.Double[])">
            <summary>
            Получает значение минимального элемента сигнала.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число одиночной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Max(System.Double[])">
            <summary>
            Получает значение максимального элемента вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Число одиночной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Morph(System.Double[],System.Int32)">
            <summary>
            Получает значение элемента вектора, соответствующего пороговому значению.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="threshold">Пороговое значение</param>
            <returns>Число одиночной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Sort(System.Double[])">
            <summary>
            Сортирует исходный вектор.
            </summary>
            <param name="v">Одномерный массив</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Sort(System.Double[],System.Int32,System.Int32)">
            <summary>
            Сортирует исходный вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Определяет диапазон сортировки. Начальная точка</param>
            <param name="l">Определяет диапазон сортировки. Конечная точка</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[],System.Double[])">
            <summary>
            Реализует скалярное произведение векторов вида: a * b'.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует скалярное произведение векторов вида: a * b'.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Реализует скалярное произведение векторов вида: a * b'.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Реализует скалярное произведение векторов вида: a * b'.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Число двойной точности с плавающей запятой</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[],System.Double[0:,0:])">
            <summary>
            Реализует скалярное умножение вектора на матрицу вида: 
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(System.Double[],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует скалярное умножение вектора на матрицу.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[],UMapx.Core.Complex[0:,0:])">
            <summary>
            Реализует скалярное умножение вектора на матрицу.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dot(UMapx.Core.Complex[],System.Double[0:,0:])">
            <summary>
            Реализует скалярное умножение вектора на матрицу.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="m">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dotp(System.Double[],System.Double[])">
            <summary>
            Реализует скалярное произведение векторов вида: a' * b, 
            где ' - знак транспонирования.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dotp(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует скалярное произведение векторов вида: a' * b, 
            где ' - знак транспонирования.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dotp(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Реализует скалярное произведение векторов вида: a' * b, 
            где ' - знак транспонирования.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Dotp(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Реализует скалярное произведение векторов вида: a' * b, 
            где ' - знак транспонирования.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[],System.Double[],System.Boolean)">
            <summary>
            Возвращает вектор-результат одномерной свертки.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="u">Одномерный массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[],UMapx.Core.Complex[],System.Boolean)">
            <summary>
            Возвращает вектор-результат одномерной свертки.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="u">Одномерный массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(UMapx.Core.Complex[],System.Double[],System.Boolean)">
            <summary>
            Возвращает вектор-результат одномерной свертки.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="u">Одномерный массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Conv(System.Double[],UMapx.Core.Complex[],System.Boolean)">
            <summary>
            Возвращает вектор-результат одномерной свертки.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="u">Одномерный массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Max(System.Double[],System.Int32)">
            <summary>
            Реализует одномерный фильтр морфологического расширения.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Радиус обработки</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Min(System.Double[],System.Int32)">
            <summary>
            Реализует одномерный фильтр морфологического сужения.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Радиус обработки</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Morph(System.Double[],System.Int32,System.Int32)">
            <summary>
            Возвращает вектор-результат одномерной морфологии.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Радиус</param>
            <param name="threshold">Пороговое значение</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(System.Double[],System.Int32)">
            <summary>
            Реализует одномерный фильтр локального усреднения.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Радиус</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Mean(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Реализует одномерный фильтр локального усреднения.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="r">Радиус</param>
        </member>
        <member name="M:UMapx.Core.Matrice.GetCol(System.Double[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор столбца матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="r">Номер столбца</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.SetCol(System.Double[0:,0:],System.Double[],System.Int32)">
            <summary>
            Задает вектор столбца матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Одномерный массив</param>
            <param name="r">Номер столбца</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.GetRow(System.Double[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор строки матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="r">Номер строки</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.SetRow(System.Double[0:,0:],System.Double[],System.Int32)">
            <summary>
            Задает вектор строки матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Одномерный массив</param>
            <param name="r">Номер строки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.GetCol(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор столбца матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="r">Номер столбца</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.SetCol(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[],System.Int32)">
            <summary>
            Задает вектор столбца матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Одномерный массив</param>
            <param name="r">Номер столбца</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.GetRow(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор строки матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="r">Номер строки</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.SetRow(UMapx.Core.Complex[0:,0:],UMapx.Core.Complex[],System.Int32)">
            <summary>
            Задает вектор строки матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="n">Одномерный массив</param>
            <param name="r">Номер строки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Shift(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32)">
            <summary>
            Релизует блочную перегруппировку матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="m">Количество позиций, на которое происходит сдвиг по высоте</param>
            <param name="l">Количество позиций, на которое происходит сдвиг по ширине</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Shift(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Релизует блочную перегруппировку матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="m">Количество позиций, на которое происходит сдвиг по высоте</param>
            <param name="l">Количество позиций, на которое происходит сдвиг по ширине</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Shift(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Релизует сдвиг элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="l">Количество позиций, на которое происходит сдвиг</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Shift(System.Double[],System.Int32)">
            <summary>
            Релизует сдвиг элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="l">Количество позиций, на которое происходит сдвиг</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Flip(System.Double[0:,0:],UMapx.Core.Direction)">
            <summary>
            Отображает элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="direction">Направление обработки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Flip(UMapx.Core.Complex[0:,0:],UMapx.Core.Direction)">
            <summary>
            Отображает элементы матрицы.
            </summary>
            <param name="m">Матрица</param>
            <param name="direction">Направление обработки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Flip(System.Double[])">
            <summary>
            Отображает элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Flip(UMapx.Core.Complex[])">
            <summary>
            Отображает элементы вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Merge(System.Double[],System.Double[])">
            <summary>
            Реализует слияние векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Merge(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует слияние векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Merge(UMapx.Core.Complex[],System.Double[])">
            <summary>
            Реализует слияние векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Merge(System.Double[],UMapx.Core.Complex[])">
            <summary>
            Реализует слияние векторов.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="b">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cut(System.Double[],System.Int32,System.Int32)">
            <summary>
            Возвращает заданную часть вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="start">Начальная позиция</param>
            <param name="length">Длина вектора</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cut(UMapx.Core.Complex[],System.Int32,System.Int32)">
            <summary>
            Возвращает заданную часть вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="start">Начальная позиция</param>
            <param name="length">Длина вектора</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cut(System.Double[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Обрезает матрицу до заданных размеров.
            </summary>
            <param name="m">Матрица</param>
            <param name="y">Начальная позиция по высоте</param>
            <param name="x">Начальная позиция по ширине</param>
            <param name="height">Высота</param>
            <param name="width">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cut(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Обрезает матрицу до заданных размеров.
            </summary>
            <param name="m">Матрица</param>
            <param name="y">Начальная позиция по высоте</param>
            <param name="x">Начальная позиция по ширине</param>
            <param name="height">Высота</param>
            <param name="width">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Reshape(System.Double[],System.Int32)">
            <summary>
            Возвращает матрицу, сформированную из вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="height">Высота матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Reshape(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Возвращает матрицу, сформированную из вектора.
            </summary>
            <param name="a">Одномерный массив</param>
            <param name="height">Высота матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Reshape(System.Double[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор, сформированный из матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="length">Размерность вектора</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Reshape(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            Возвращает вектор, сформированный из матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="length">Размерность вектора</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diag(System.Double[])">
            <summary>
            Реализует приведение вектора к диагональной матрице.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diag(UMapx.Core.Complex[])">
            <summary>
            Реализует приведение вектора к диагональной матрице.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diag(System.Double[0:,0:])">
            <summary>
            Возвращает вектор, элементы которого лежат на диагонали матрицы.
            </summary>
            <param name="a">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diag(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает вектор, элементы которого лежат на диагонали матрицы.
            </summary>
            <param name="a">Матрица</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Swap(System.Double[0:,0:],System.Int32,System.Int32,UMapx.Core.Direction)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="i">Первый ряд или столбец</param>
            <param name="j">Второй ряд или столбец</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Swap(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32,UMapx.Core.Direction)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="i">Первый ряд или столбец</param>
            <param name="j">Второй ряд или столбец</param>
            <param name="direction">Направление обработки</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Swap(System.Double[],System.Int32,System.Int32)">
            <summary>
            Реализует перестановку элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="i">Номер первого элемента</param>
            <param name="j">Номер второго элемента</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Swap(UMapx.Core.Complex[],System.Int32,System.Int32)">
            <summary>
            Реализует перестановку элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="i">Номер первого элемента</param>
            <param name="j">Номер второго элемента</param>
        </member>
        <member name="M:UMapx.Core.Matrice.Remove(System.Double[0:,0:],System.Int32,System.Int32,UMapx.Core.Direction)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="i">Первый ряд или столбец</param>
            <param name="length">Длина</param>
            <param name="direction">Направление обработки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Remove(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32,UMapx.Core.Direction)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="a">Матрица</param>
            <param name="i">Первый ряд или столбец</param>
            <param name="length">Длина</param>
            <param name="direction">Направление обработки</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Remove(System.Double[],System.Int32,System.Int32)">
            <summary>
            Реализует удаление элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="i">Номер элемента</param>
            <param name="length">Длина</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Remove(UMapx.Core.Complex[],System.Int32,System.Int32)">
            <summary>
            Реализует удаление элементов вектора.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="i">Номер элемента</param>
            <param name="length">Длина</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Minor(System.Double[0:,0:],System.Int32)">
            <summary>
            Реализует операцию взятия минора матрицы.
            </summary>
            <param name="m">Квадратная матрица</param>
            <param name="n">Номер строки и столбца</param>
            <returns>Квадратная матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Minor(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            Реализует операцию взятия минора матрицы.
            </summary>
            <param name="m">Квадратная матрица</param>
            <param name="n">Номер строки и столбца</param>
            <returns>Квадратная матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diff(System.Double[0:,0:],System.Int32,UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="n">Порядок</param>
            <param name="direction">Направление обработки</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.DiffVertical(System.Double[0:,0:],System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.DiffHorizontal(System.Double[0:,0:],System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diff(UMapx.Core.Complex[0:,0:],System.Int32,UMapx.Core.Direction,System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="n">Порядок</param>
            <param name="direction">Направление обработки</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.DiffVertical(UMapx.Core.Complex[0:,0:],System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.DiffHorizontal(UMapx.Core.Complex[0:,0:],System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="a">Матрица</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diff(System.Double[],System.Int32,System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="n">Порядок</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Diff(UMapx.Core.Complex[],System.Int32,System.Boolean)">
            <summary>
            Возвращает разность элементов массива.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="n">Порядок</param>
            <param name="reverse">Обратное направление обработки или нет</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Extend(System.Double[],System.Int32)">
            <summary>
            Расширяет вектор до заданной длины.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="length">Длина</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Extend(System.Double[0:,0:],System.Int32,System.Int32)">
            <summary>
            Расширяет матрицу до заданных размеров.
            </summary>
            <param name="m">Матрица</param>
            <param name="height">Высота</param>
            <param name="width">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ExtendVertical(System.Double[0:,0:],System.Int32)">
            <summary>
            extend vertical.
            </summary>
            <param name="m"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ExtendHorizontal(System.Double[0:,0:],System.Int32)">
            <summary>
            extend horizontal.
            </summary>
            <param name="m"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Extend(UMapx.Core.Complex[],System.Int32)">
            <summary>
            Расширяет вектор до заданной длины.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="length">Длина</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Extend(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32)">
            <summary>
            Расширяет матрицу до заданных размеров.
            </summary>
            <param name="m">Матрица</param>
            <param name="height">Высота</param>
            <param name="width">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ExtendVertical(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            extend vertical.
            </summary>
            <param name="m"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Matrice.ExtendHorizontal(UMapx.Core.Complex[0:,0:],System.Int32)">
            <summary>
            extend horizontal.
            </summary>
            <param name="m"></param>
            <param name="length"></param>
            <returns></returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(System.Double,System.Double,System.Double)">
            <summary>
            Возвращает массив значений аргумента, реализованный в заданном отрезке с заданным шагом.
            </summary>
            <param name="min">Начало отрезка</param>
            <param name="max">Конец отрезка</param>
            <param name="step">Шаг</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(System.Double[],UMapx.Core.IDouble)">
            <summary>
            Возвращает массив значений функции.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(UMapx.Core.Complex[],UMapx.Core.IComplex)">
            <summary>
            Возвращает массив значений функции.
            </summary>
            <param name="v">Одномерный массив</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(System.Double[],System.Double[],UMapx.Core.IDoubleMesh)">
            <summary>
            Возвращает матрицу, значения которой определяются по двум массивам аргумента и делегату непрерывной функции.
            </summary>
            <param name="x">Массив значений первого аргумента</param>
            <param name="y">Массив значений второго аргумента</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(System.Double[],UMapx.Core.Complex[],UMapx.Core.IComplexMesh)">
            <summary>
            Возвращает матрицу, значения которой определяются по двум массивам аргумента и делегату непрерывной функции.
            </summary>
            <param name="x">Массив значений первого аргумента</param>
            <param name="y">Массив значений второго аргумента</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(UMapx.Core.Complex[],System.Double[],UMapx.Core.IComplexMesh)">
            <summary>
            Возвращает матрицу, значения которой определяются по двум массивам аргумента и делегату непрерывной функции.
            </summary>
            <param name="x">Массив значений первого аргумента</param>
            <param name="y">Массив значений второго аргумента</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(UMapx.Core.Complex[],UMapx.Core.Complex[],UMapx.Core.IComplexMesh)">
            <summary>
            Возвращает матрицу, значения которой определяются по двум массивам аргумента и делегату непрерывной функции.
            </summary>
            <param name="x">Массив значений первого аргумента</param>
            <param name="y">Массив значений второго аргумента</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(System.Double[0:,0:],UMapx.Core.IDouble)">
            <summary>
            Возвращает матрицу, значения которой определяются по массиву аргумента и делегату непрерывной функции.
            </summary>
            <param name="m">Матрица</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Compute(UMapx.Core.Complex[0:,0:],UMapx.Core.IComplex)">
            <summary>
            Возвращает матрицу, значения которой определяются по массиву аргумента и делегату непрерывной функции.
            </summary>
            <param name="m">Матрица</param>
            <param name="function">Делегат непрерывной функции</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.One(System.Int32)">
            <summary>
            Реализует построение вектора единиц.
            </summary>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Householder(System.Double[])">
            <summary>
            Возвращает вектор Хаусхолдера.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Companion(System.Double[])">
            <summary>
            Реализует построение сопровождающей матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Vander(System.Double[])">
            <summary>
            Реализует построение матрицы Вандерморта.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hankeli(System.Double[])">
            <summary>
            Реализует построение неполной матрицы Ганкеля.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hankel(System.Double[])">
            <summary>
            Реализует построение матрицы Ганкеля.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Toeplitz(System.Double[])">
            <summary>
            Реализует построение матрицы Тёплица.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cauchy(System.Double[],System.Double[])">
            <summary>
            Реализует построение матрицы Коши.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Circulant(System.Double[])">
            <summary>
            Реализует построение цикличной матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Symmetric(System.Double[])">
            <summary>
            Реализует построение симметричной матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Companion(UMapx.Core.Complex[])">
            <summary>
            Реализует построение сопровождающей матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Vander(UMapx.Core.Complex[])">
            <summary>
            Реализует построение матрицы Вандерморта.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hankeli(UMapx.Core.Complex[])">
            <summary>
            Реализует построение неплоной матрицы Ганкеля.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hankel(UMapx.Core.Complex[])">
            <summary>
            Реализует построение матрицы Ганкеля.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Toeplitz(UMapx.Core.Complex[])">
            <summary>
            Реализует построение матрицы Тёплица.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Cauchy(UMapx.Core.Complex[],UMapx.Core.Complex[])">
            <summary>
            Реализует построение матрицы Коши.
            </summary>
            <param name="x">Одномерный массив</param>
            <param name="y">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Circulant(UMapx.Core.Complex[])">
            <summary>
            Реализует построение цикличной матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Symmetric(UMapx.Core.Complex[])">
            <summary>
            Реализует построение симметричной матрицы.
            </summary>
            <param name="v">Одномерный массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Eye(System.Int32,System.Int32)">
            <summary>
            Реализует построение единичной матрицы.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.One(System.Int32,System.Int32)">
            <summary>
            Реализует построение матрицы единиц.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Exchange(System.Int32)">
            <summary>
            Реализует построение обменной матрицы.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Lehmer(System.Int32)">
            <summary>
            Реализует построение матрицы Лемера.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Redheffer(System.Int32)">
            <summary>
            Реализует построение матрицы Редхеффера.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Hilbert(System.Int32)">
            <summary>
            Реализует построение матрицы Гильберта.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Circulant(System.Int32)">
            <summary>
            Реализует построение цикличной матрицы.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Symmetric(System.Int32)">
            <summary>
            Реализует построение симметричной матрицы.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.GCD(System.Int32)">
            <summary>
            Реализует построение матрицы НОД-ов.
            </summary>
            <param name="n">Размер матрицы</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Stirling(System.Int32,System.Boolean)">
            <summary>
            Реализует построение матрицы Стирлинга первого или второго рода.
            </summary>
            <param name="n">Размерность матрицы</param>
            <param name="second">Второго рода или нет</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Magic(System.Int32)">
            <summary>
            Реализует построение магического квадрата.
            </summary>
            <param name="n">Размер матрицы (нечетное число)</param>
            <returns>Матрица</returns>
        </member>
        <member name="F:UMapx.Core.Matrice.rnd">
            <summary>
            Генератор случайных чисел.
            </summary>
        </member>
        <member name="M:UMapx.Core.Matrice.Rand(System.Int32)">
            <summary>
            Реализует построение вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randc(System.Int32)">
            <summary>
            Реализует построение комплексного вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Rand(System.Int32,System.Int32)">
            <summary>
            Реализует построение матрицы случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randc(System.Int32,System.Int32)">
            <summary>
            Реализует построение матрицы случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randi(System.Int32)">
            <summary>
            Реализует построение вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randic(System.Int32)">
            <summary>
            Реализует построение комплексного вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randi(System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует построение вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randic(System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует построение комплексного вектора случайных дробных чисел, значения которой распределены по равномерному закону.
            </summary>
            <param name="n">Размерность</param>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Одномерный массив</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randi(System.Int32,System.Int32)">
            <summary>
            Реализует построение матрицы случайных целых чисел.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randi(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует построение матрицы случайных целых чисел.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randic(System.Int32,System.Int32)">
            <summary>
            Реализует комплексной построение матрицы случайных целых чисел.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Randic(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует комплексной построение матрицы случайных целых чисел.
            </summary>
            <param name="m">Высота</param>
            <param name="l">Ширина</param>
            <param name="a">Нижний предел</param>
            <param name="b">Верхний предел</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Parse(System.Double[0:,0:],System.String)">
            <summary>
            Переводит исходную строку в матрицу вещественных чисел.
            <remarks>
            Пример входной строки: "[1, 2, 3; 4, 5, 6; 7, 8, 9]";
            </remarks>
            </summary>
            <param name="a">Матрица</param>
            <param name="s">Исходная строка</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.TryParse(System.String,System.Double[0:,0:]@)">
            <summary>
            Пробует перевести исходную строку в матрицу вещественных чисел.
            </summary>
            <param name="s">Исходная строка</param>
            <param name="result">Матрица вещественных чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Parse(UMapx.Core.Complex[0:,0:],System.String)">
            <summary>
            Переводит исходную строку в матрицу комплексных чисел.
            </summary>
            <remarks>
            Пример входной строки: "[1 + 2i, 2 + 4i; 3 + 6i, 4 + 8i]";
            </remarks>
            <param name="a">Матрица</param>
            <param name="s">Исходная строка</param>
            <returns>Матрица комплексных чисел</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.TryParse(System.String,UMapx.Core.Complex[0:,0:]@)">
            <summary>
            Пробует перевести исходную строку в матрицу комплексных чисел.
            </summary>
            <param name="s">Исходная строка</param>
            <param name="result">Матрица комплексных чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Parse(System.Double[],System.String)">
            <summary>
            Переводит исходную строку в матрицу вещественных чисел.
            <remarks>
            Пример входной строки: "[1, 2, 3, 4]";
            </remarks>
            </summary>
            <param name="a">Матрица</param>
            <param name="s">Исходная строка</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.TryParse(System.String,System.Double[]@)">
            <summary>
            Пробует перевести исходную строку в матрицу вещественных чисел.
            </summary>
            <param name="s">Исходная строка</param>
            <param name="result">Матрица вещественных чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.Parse(UMapx.Core.Complex[],System.String)">
            <summary>
            Переводит исходную строку в матрицу вещественных чисел.
            <remarks>
            Пример входной строки: "[1 + 2i, 2 + 0.3i, 3 + i, 4 - 11i]";
            </remarks>
            </summary>
            <param name="a">Матрица</param>
            <param name="s">Исходная строка</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.Matrice.TryParse(System.String,UMapx.Core.Complex[]@)">
            <summary>
            Пробует перевести исходную строку в матрицу вещественных чисел.
            </summary>
            <param name="s">Исходная строка</param>
            <param name="result">Матрица вещественных чисел</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="T:UMapx.Core.LinealgOptions">
            <summary>
            Определяет класс оптимизаций матричных операций.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.height">
            <summary>
            Высота матрицы.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.width">
            <summary>
            Ширина матрицы.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.length">
            <summary>
            Длина матрицы.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.exception">
            <summary>
            Текст исключения при умножении.
            </summary>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Determinant(System.Double*,System.Int32)">
            <summary>
            Итеративный расчет детерминанта.
            </summary>
            <param name="element">"Элемент</param>
            <param name="n">Радиус матрицы</param>
            <returns>Число двойной точности</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Determinant(UMapx.Core.Complex*,System.Int32)">
            <summary>
            Итеративный расчет детерминанта.
            </summary>
            <param name="element">"Элемент</param>
            <param name="n">Радиус матрицы</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Mul(System.Single[][],System.Single[][])">
            <summary>
            Реализует умножение матриц, представленных в виде зубчатых массивов.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Mul(UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[][])">
            <summary>
            Реализует умножение матриц, представленных в виде зубчатых массивов.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Mul(UMapx.Core.LinealgOptions.Complex32[][],System.Single[][])">
            <summary>
            Реализует умножение матриц, представленных в виде зубчатых массивов.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Mul(System.Single[][],UMapx.Core.LinealgOptions.Complex32[][])">
            <summary>
            Реализует умножение матриц, представленных в виде зубчатых массивов.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Conv(System.Single[][],System.Single[][],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Conv(UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[][],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Conv(System.Single[][],UMapx.Core.LinealgOptions.Complex32[][],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Conv(UMapx.Core.LinealgOptions.Complex32[][],System.Single[][],System.Boolean)">
            <summary>
            Возвращает матрицу-результат двумерной дискретной свертки.
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvHorizontal(System.Single[][],System.Single[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvVertical(System.Single[][],System.Single[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvHorizontal(System.Single[][],UMapx.Core.LinealgOptions.Complex32[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvVertical(System.Single[][],UMapx.Core.LinealgOptions.Complex32[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvHorizontal(UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvVertical(UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvHorizontal(UMapx.Core.LinealgOptions.Complex32[][],System.Single[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ConvVertical(UMapx.Core.LinealgOptions.Complex32[][],System.Single[],System.Boolean)">
            <summary>
            Возвращает матрицу-результат одномерной дискретной свертки (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="B">Зубчатый массив</param>
            <param name="normalize">Нормализованная свертка или нет</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MorphHorizontal(System.Single[][],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологии (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r1">Размер</param>
            <param name="threshold">Пороговое значение</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MorphVertical(System.Single[][],System.Int32,System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологии (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r0">Размер</param>
            <param name="threshold">Пороговое значение</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MinHorizontal(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического сужения (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r1">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MinVertical(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического сужения (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r0">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MaxHorizontal(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического расширения (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r1">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MaxVertical(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат морфологического расширения (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r0">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MeanHorizontal(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r1">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MeanVertical(System.Single[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r0">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MeanHorizontal(UMapx.Core.LinealgOptions.Complex32[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения (по горизонтали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r1">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.MeanVertical(UMapx.Core.LinealgOptions.Complex32[][],System.Int32)">
            <summary>
            Возвращает матрицу-результат локального усреднения (по вертикали).
            </summary>
            <param name="A">Зубчатый массив</param>
            <param name="r0">Размер</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ToJagged(System.Double[0:,0:])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Матрица</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.FromJagged(System.Single[][])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ToJagged(UMapx.Core.Complex[0:,0:])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Матрица</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.FromJagged(UMapx.Core.LinealgOptions.Complex32[][])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ToJagged(System.Double[])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Вектор</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.FromJagged(System.Single[])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.ToJagged(UMapx.Core.Complex[])">
            <summary>
            Возвращает зубчатый массив.
            </summary>
            <param name="m">Вектор</param>
            <returns>Зубчатый массив</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.FromJagged(UMapx.Core.LinealgOptions.Complex32[])">
            <summary>
            Возвращает матрицу.
            </summary>
            <param name="jagged">Зубчатый массив</param>
            <returns>Матрица</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Swap(System.Double[0:,0:],System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="A">Матрица</param>
            <param name="row1">Первый ряд</param>
            <param name="row2">Второй ряд</param>
            <param name="col">Размерность столбца</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Swap(UMapx.Core.Complex[0:,0:],System.Int32,System.Int32,System.Int32)">
            <summary>
            Реализует перестановку векторов матрицы.
            </summary>
            <param name="A">Матрица</param>
            <param name="row1">Первый ряд</param>
            <param name="row2">Второй ряд</param>
            <param name="col">Размерность столбца</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Whittle_Mul(System.Single[],System.Single[][],System.Single[])">
            <summary>
            Реализует умножние матриц с использованием модифицированной оптимизации Уиттла.
            </summary>
            <param name="iRowA">Строка матрицы A</param>
            <param name="B">Матрица B</param>
            <param name="iRowC">Строка матрицы C</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Whittle_Mul(UMapx.Core.LinealgOptions.Complex32[],UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[])">
            <summary>
            Реализует умножние матриц с использованием модифицированной оптимизации Уиттла.
            </summary>
            <param name="iRowA">Строка матрицы A</param>
            <param name="B">Матрица B</param>
            <param name="iRowC">Строка матрицы C</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Whittle_Mul(UMapx.Core.LinealgOptions.Complex32[],System.Single[][],UMapx.Core.LinealgOptions.Complex32[])">
            <summary>
            Реализует умножние матриц с использованием модифицированной оптимизации Уиттла.
            </summary>
            <param name="iRowA">Строка матрицы A</param>
            <param name="B">Матрица B</param>
            <param name="iRowC">Строка матрицы C</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Whittle_Mul(System.Single[],UMapx.Core.LinealgOptions.Complex32[][],UMapx.Core.LinealgOptions.Complex32[])">
            <summary>
            Реализует умножние матриц с использованием модифицированной оптимизации Уиттла.
            </summary>
            <param name="iRowA">Строка матрицы A</param>
            <param name="B">Матрица B</param>
            <param name="iRowC">Строка матрицы C</param>
        </member>
        <member name="T:UMapx.Core.LinealgOptions.Complex32">
            <summary>
            Определяет комплексное число, вещественные части которой представляются числами одиночной точности с плавающей запятой.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.Complex32.Re">
            <summary>
            Действительная часть числа.
            </summary>
        </member>
        <member name="F:UMapx.Core.LinealgOptions.Complex32.Im">
            <summary>
            Мнимая часть числа.
            </summary>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.#ctor(System.Single,System.Single)">
            <summary>
            Инициализирует комплексное число.
            </summary>
            <param name="re">Действительная часть комплексного числа</param>
            <param name="im">Мнимая часть комплексного числа</param>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.GetHashCode">
            <summary>
            Возвращает хэш-код для данного объекта.
            </summary>
            <returns>Целое число со знаком</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.Equals(System.Object)">
            <summary>
            Возвращает значение, указывающее, равен ли данный экземляр заданному значению типа Complex.
            </summary>
            <param name="obj">Объект</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Equality(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Проверяет равны ли два объекта типа Comlex между собой.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Inequality(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Проверяет не равны ли два объекта типа Complex между собой.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Логическое значение</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Addition(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Сумма двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Addition(UMapx.Core.LinealgOptions.Complex32,System.Single)">
            <summary>
            Сумма комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Addition(System.Single,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Сумма комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Subtraction(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Разность двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Subtraction(UMapx.Core.LinealgOptions.Complex32,System.Single)">
            <summary>
            Разность комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Subtraction(System.Single,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Разность комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Multiply(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Произведение двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Multiply(UMapx.Core.LinealgOptions.Complex32,System.Single)">
            <summary>
            Произведение комплексного числа и действительного числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Multiply(System.Single,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Произведение комплексного числа и действительного числа.
            </summary>
            <param name="a">Число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Division(UMapx.Core.LinealgOptions.Complex32,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Частное двух комплексных чисел
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Division(UMapx.Core.LinealgOptions.Complex32,System.Single)">
            <summary>
            Частное комплексного числа и действительного числа.
            </summary>
            <param name="a">Комплексное число</param>
            <param name="b">Число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="M:UMapx.Core.LinealgOptions.Complex32.op_Division(System.Single,UMapx.Core.LinealgOptions.Complex32)">
            <summary>
            Частное комплексного числа и действительного числа.
            </summary>
            <param name="a">Числа</param>
            <param name="b">Комплексное число</param>
            <returns>Комплексное число</returns>
        </member>
        <member name="T:UMapx.Core.Direction">
            <summary>
            Определяет направление обработки.
            </summary>
        </member>
        <member name="F:UMapx.Core.Direction.Horizontal">
            <summary>
            Горизонтальное направление.
            </summary>
        </member>
        <member name="F:UMapx.Core.Direction.Vertical">
            <summary>
            Вертикальное направление.
            </summary>
        </member>
        <member name="F:UMapx.Core.Direction.Both">
            <summary>
            Двустороннее направление.
            </summary>
        </member>
    </members>
</doc>
